{"ast":null,"code":"var _jsxFileName = \"/Users/jungwon/Desktop/shjw/shjw/src/components/layer/LayerList.js\";\nimport React from 'react';\nimport \"../../styles/layer/LayerList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LayerList(props) {\n  const onDragStart = (event, nodeType, backgroundColour) => {\n    console.log(event, nodeType, backgroundColour);\n    event.dataTransfer.setData(\"application/reactflow\", nodeType, backgroundColour);\n    event.dataTransfer.setData(\"backgroundColour\", backgroundColour);\n    event.dataTransfer.effectAllowed = \"move\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"layer_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layer_list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab_title\",\n        children: \"Layer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ConvolutionalLayers, {\n        onDragStart: onDragStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PoolingLayers, {\n        onDragStart: onDragStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Activations, {\n        onDragStart: onDragStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NormalizationLayers, {\n        onDragStart: onDragStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layer_info\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"layer_info_title\",\n        children: \"Layer Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_c = LayerList;\nconst ConvolutionalLayers = _ref => {\n  let {\n    onDragStart\n  } = _ref;\n  const toggleItems = [{\n    nodeName: \"Conv2d\",\n    nodeColor: \"#F2E3DC\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"details\", {\n    open: true,\n    children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n      className: \"layer_name\",\n      children: \"Convolutional Layers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), toggleItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dndnode Convolutional\",\n      onDragStart: event => onDragStart(event, item.nodeName, item.nodeColor),\n      draggable: true,\n      children: item.nodeName\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_c2 = ConvolutionalLayers;\nconst PoolingLayers = _ref2 => {\n  let {\n    onDragStart\n  } = _ref2;\n  const toggleItems = [{\n    nodeName: \"MaxPool2d\",\n    nodeColor: \"#FAF1CB\"\n  }, {\n    nodeName: \"AvgPool2d\",\n    nodeColor: \"#FAF1CB\"\n  }, {\n    nodeName: \"AdaptiveAvgPool2d\",\n    nodeColor: \"#FAF1CB\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"details\", {\n    open: true,\n    children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n      className: \"layer_name\",\n      children: \"Pooling Layers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), toggleItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dndnode Pooling\",\n      onDragStart: event => onDragStart(event, item.nodeName, item.nodeColor),\n      draggable: true,\n      children: item.nodeName\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_c3 = PoolingLayers;\nconst Activations = _ref3 => {\n  let {\n    onDragStart\n  } = _ref3;\n  const toggleItems = [{\n    nodeName: \"ReLU\",\n    nodeColor: \"#D9E3E8\"\n  }, {\n    nodeName: \"Sigmoid\",\n    nodeColor: \"#D9E3E8\"\n  }, {\n    nodeName: \"LeakyReLU\",\n    nodeColor: \"#D9E3E8\"\n  }, {\n    nodeName: \"Softmax\",\n    nodeColor: \"#D9E3E8\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"details\", {\n    open: true,\n    children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n      className: \"layer_name\",\n      children: \"Activations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), toggleItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dndnode Activiation\",\n      onDragStart: event => onDragStart(event, item.nodeName, item.nodeColor),\n      draggable: true,\n      children: item.nodeName\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n_c4 = Activations;\nconst NormalizationLayers = _ref4 => {\n  let {\n    onDragStart\n  } = _ref4;\n  const toggleItems = [{\n    nodeName: \"BatchNorm2d\",\n    nodeColor: \"#DEE8E4\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"details\", {\n    open: true,\n    children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n      className: \"layer_name\",\n      children: \"Normalization Layers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), toggleItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dndnode Normalization\",\n      onDragStart: event => onDragStart(event, item.nodeName, item.nodeColor),\n      draggable: true,\n      children: item.nodeName\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n_c5 = NormalizationLayers;\nexport default LayerList;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"LayerList\");\n$RefreshReg$(_c2, \"ConvolutionalLayers\");\n$RefreshReg$(_c3, \"PoolingLayers\");\n$RefreshReg$(_c4, \"Activations\");\n$RefreshReg$(_c5, \"NormalizationLayers\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LayerList","props","onDragStart","event","nodeType","backgroundColour","console","log","dataTransfer","setData","effectAllowed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ConvolutionalLayers","PoolingLayers","Activations","NormalizationLayers","_c","_ref","toggleItems","nodeName","nodeColor","open","map","item","index","draggable","_c2","_ref2","_c3","_ref3","_c4","_ref4","_c5","$RefreshReg$"],"sources":["/Users/jungwon/Desktop/shjw/shjw/src/components/layer/LayerList.js"],"sourcesContent":["import React from 'react';\nimport \"../../styles/layer/LayerList.css\";\n\nfunction LayerList(props) {\n    const onDragStart = (event, nodeType, backgroundColour) => {\n        console.log(event, nodeType, backgroundColour)\n        event.dataTransfer.setData(\n            \"application/reactflow\",\n            nodeType,\n            backgroundColour\n        );\n        event.dataTransfer.setData(\"backgroundColour\", backgroundColour);\n        event.dataTransfer.effectAllowed = \"move\";\n    };\n\n    return (\n        <div className=\"layer_container\">\n            <div className=\"layer_list\">\n                <div className=\"tab_title\">Layer</div>\n                {/* Convolutional Layers 토글 */}\n                <ConvolutionalLayers onDragStart={onDragStart}/>\n                {/* Pooling Layers 토글 */}\n                <PoolingLayers onDragStart={onDragStart}/>\n                {/* Activations 토글 */}\n                <Activations onDragStart={onDragStart}/>\n                {/* Normalization Layers 토글 */}\n                <NormalizationLayers onDragStart={onDragStart}/>\n            </div>\n            <div className=\"layer_info\">\n                <div className=\"layer_info_title\">Layer Information</div>\n            </div>\n        </div>\n    );\n}\n\n\nconst ConvolutionalLayers = ({onDragStart}) => {\n\n    const toggleItems = [\n        {\n            nodeName: \"Conv2d\",\n            nodeColor: \"#F2E3DC\"\n        }\n    ];\n\n    return (\n        <details open>\n            <summary className=\"layer_name\">Convolutional Layers</summary>\n            {\n                toggleItems.map((item, index) => (\n                    <div\n                        key={index}\n                        className=\"dndnode Convolutional\"\n                        onDragStart={(event) => onDragStart(event, item.nodeName, item.nodeColor)}\n                        draggable\n                    >\n                        {item.nodeName}\n                    </div>\n                ))\n            }\n        </details>\n    );\n};\n\nconst PoolingLayers = ({onDragStart}) => {\n\n    const toggleItems = [\n        {\n            nodeName: \"MaxPool2d\",\n            nodeColor: \"#FAF1CB\"\n        },\n        {\n            nodeName: \"AvgPool2d\",\n            nodeColor: \"#FAF1CB\"\n        },\n        {\n            nodeName: \"AdaptiveAvgPool2d\",\n            nodeColor: \"#FAF1CB\"\n        },\n    ];\n\n    return (\n        <details open>\n            <summary className=\"layer_name\">Pooling Layers</summary>\n            {\n                toggleItems.map((item, index) => (\n                    <div\n                        key={index}\n                        className=\"dndnode Pooling\"\n                        onDragStart={(event) => onDragStart(event, item.nodeName, item.nodeColor)}\n                        draggable\n                    >\n                        {item.nodeName}\n                    </div>\n                ))\n            }\n        </details>\n    );\n};\n\nconst Activations = ({onDragStart}) => {\n\n    const toggleItems = [\n        {\n            nodeName: \"ReLU\",\n            nodeColor: \"#D9E3E8\"\n        },\n        {\n            nodeName: \"Sigmoid\",\n            nodeColor: \"#D9E3E8\"\n        },\n        {\n            nodeName: \"LeakyReLU\",\n            nodeColor: \"#D9E3E8\"\n        },\n        {\n            nodeName: \"Softmax\",\n            nodeColor: \"#D9E3E8\"\n        },\n    ];\n    return (\n        <details open>\n            <summary className=\"layer_name\">Activations</summary>\n            {\n                toggleItems.map((item, index) => (\n                    <div\n                        key={index}\n                        className=\"dndnode Activiation\"\n                        onDragStart={(event) => onDragStart(event, item.nodeName, item.nodeColor)}\n                        draggable\n                    >\n                        {item.nodeName}\n                    </div>\n                ))\n            }\n        </details>\n    );\n};\n\nconst NormalizationLayers = ({onDragStart}) => {\n\n    const toggleItems = [\n        {\n            nodeName: \"BatchNorm2d\",\n            nodeColor: \"#DEE8E4\"\n        },\n    ];\n\n    return (\n        <details open>\n            <summary className=\"layer_name\">Normalization Layers</summary>\n            {\n                toggleItems.map((item, index) => (\n                    <div\n                        key={index}\n                        className=\"dndnode Normalization\"\n                        onDragStart={(event) => onDragStart(event, item.nodeName, item.nodeColor)}\n                        draggable\n                    >\n                        {item.nodeName}\n                    </div>\n                ))\n            }\n        </details>\n    );\n};\n\n\nexport default LayerList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}