{"ast":null,"code":"var _jsxFileName = \"/Users/jungwon/Desktop/shjw/shjw/src/components/common/NodeScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef, useState } from 'react';\nimport ReactFlow, { addEdge, Controls, useEdgesState, useNodesState } from \"reactflow\";\nimport { initialEdges, initialNodes, nodeTypes } from \"../../dummies\";\nimport \"../../styles/common/NodeScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NodeScreen(_ref) {\n  _s();\n  let {\n    d_nodes,\n    d_edges,\n    onSelectNode\n  } = _ref;\n  let id = 15;\n  const getId = () => `${id++}`;\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), []);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n  }, []);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData(\"application/reactflow\");\n    const backgroundColour = event.dataTransfer.getData(\"backgroundColour\");\n\n    // check if the dropped element is valid\n    if (typeof type === \"undefined\" || !type) {\n      return;\n    }\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: getId(),\n      type,\n      position,\n      data: {\n        label: `${type}`\n      },\n      style: {\n        background: `${backgroundColour}`,\n        fontSize: \"20px\",\n        width: \"200px\",\n        boxShadow: \"7px 7px 7px 0px rgba(0,0,0,.20)\",\n        border: \"0px\",\n        borderRadius: \"10px\"\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n\n    // axios post 호출\n  }, [reactFlowInstance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reactflow-wrapper\",\n    ref: reactFlowWrapper,\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onInit: setReactFlowInstance,\n      onDrop: onDrop,\n      onDragOver: onDragOver,\n      onNodeClick: onSelectNode,\n      children: /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(NodeScreen, \"s1hu1oC/LcvmYaDaAbQjcY1Q9fQ=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = NodeScreen;\nexport default NodeScreen;\nvar _c;\n$RefreshReg$(_c, \"NodeScreen\");","map":{"version":3,"names":["React","useCallback","useRef","useState","ReactFlow","addEdge","Controls","useEdgesState","useNodesState","initialEdges","initialNodes","nodeTypes","jsxDEV","_jsxDEV","NodeScreen","_ref","_s","d_nodes","d_edges","onSelectNode","id","getId","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","type","getData","backgroundColour","position","project","x","clientX","left","y","clientY","top","newNode","data","label","style","background","fontSize","width","boxShadow","border","borderRadius","nds","concat","className","ref","children","onInit","onNodeClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jungwon/Desktop/shjw/shjw/src/components/common/NodeScreen.js"],"sourcesContent":["import React, {useCallback, useRef, useState} from 'react';\nimport ReactFlow, {addEdge, Controls, useEdgesState, useNodesState} from \"reactflow\";\nimport {initialEdges, initialNodes, nodeTypes} from \"../../dummies\";\nimport \"../../styles/common/NodeScreen.css\";\nfunction NodeScreen({d_nodes,d_edges,onSelectNode}) {\n\n    let id = 15;\n    const getId = () => `${id++}`\n\n    const reactFlowWrapper = useRef(null);\n    const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n    const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\n\n    const onConnect = useCallback(\n        (params) => setEdges((eds) => addEdge(params, eds)),\n        []\n    );\n\n    const onDragOver = useCallback((event) => {\n        event.preventDefault();\n        event.dataTransfer.dropEffect = \"move\";\n    }, []);\n\n    const onDrop = useCallback(\n        (event) => {\n            event.preventDefault();\n            const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n            const type = event.dataTransfer.getData(\"application/reactflow\");\n            const backgroundColour = event.dataTransfer.getData(\"backgroundColour\");\n\n            // check if the dropped element is valid\n            if (typeof type === \"undefined\" || !type) {\n                return;\n            }\n\n            const position = reactFlowInstance.project({\n                x: event.clientX - reactFlowBounds.left,\n                y: event.clientY - reactFlowBounds.top,\n            });\n\n            const newNode = {\n                id: getId(),\n                type,\n                position,\n                data: {label: `${type}`},\n                style: {\n                    background: `${backgroundColour}`,\n                    fontSize: \"20px\",\n                    width: \"200px\",\n                    boxShadow: \"7px 7px 7px 0px rgba(0,0,0,.20)\",\n                    border: \"0px\",\n                    borderRadius: \"10px\",\n                },\n            };\n\n            setNodes((nds) => nds.concat(newNode));\n\n            // axios post 호출\n        },\n        [reactFlowInstance]\n    );\n\n\n    return (\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\n            <ReactFlow\n                nodes={nodes}\n                edges={edges}\n                onNodesChange={onNodesChange}\n                onEdgesChange={onEdgesChange}\n                onConnect={onConnect}\n                onInit={setReactFlowInstance}\n                onDrop={onDrop}\n                onDragOver={onDragOver}\n                onNodeClick={onSelectNode}\n            >\n                <Controls/>\n            </ReactFlow>\n        </div>\n    );\n}\n\nexport default NodeScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}