{"ast":null,"code":"var _jsxFileName = \"/Users/jungwon/Desktop/shjw/src/pages/Layer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport LayerList from \"../components/layer/LayerList\";\nimport \"../styles/common/Modifier.css\";\nimport \"../styles/layer/Layer.css\";\nimport Modifier from \"../components/common/Modifier\";\nimport NodeScreen from \"../components/common/NodeScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Layer(props) {\n  _s();\n  /** 서버에서 불러온 node, edge 초기화 **/\n  // const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  // const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  /** 수정 정보 관련 request **/\n  const [request, setRequest] = useState({\n    in_channels: \"\",\n    out_channels: \"\"\n  });\n  /** 클릭한 노드 정보 **/\n  const [selectedNode, setSelectedNode] = useState(null);\n  useEffect(() => {\n    /** node, edges 서버로부터 불러오기 **/\n    /*  서버에 저장된 node 정보 불러오기\n            axios.get(`url`)\n                .then(res => setNodes(res))\n                .catch(err => 예외처리)\n        */\n    /*  서버에 저장된 edge 정보 불러오기\n            axios.get(`url`)\n                .then(res => setEdges(res))\n                .catch(err => 예외처리)\n        */\n  }, []);\n\n  /** 클릭한 노드 selectedNode에 설정 **/\n  const onSelectNode = (event, nodeInfo) => {\n    setSelectedNode(nodeInfo);\n  };\n\n  /** Modifier 컴포넌트 input의 onChange **/\n  const onChange = _ref => {\n    let {\n      target: {\n        name,\n        value\n      }\n    } = _ref;\n    const next = {\n      ...request,\n      [name]: value\n    };\n    console.log(next);\n    setRequest(next);\n  };\n\n  /** 수정 버튼 눌렀을 때 API 요청 처리 **/\n  const onClickModify = () => {\n    /** 수정 API **/\n    // ex) axios.update(`url`,{request})\n    //          .then(res => local Node 수정)\n    //          .catch(err => 예외처리)\n  };\n\n  /** 수정 취소 눌렀을 때 **/\n  const onCancelModify = () => {\n    setSelectedNode(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"layer_outer_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside_function_container\",\n      children: [/*#__PURE__*/_jsxDEV(LayerList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modifier_outer_container\",\n        children: selectedNode && /*#__PURE__*/_jsxDEV(Modifier, {\n          request: request,\n          onChange: onChange,\n          selectedNode: selectedNode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NodeScreen, {\n      onSelectNode: onSelectNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Layer, \"Tj/nGLeVOiEfugDwenemDQWVnCY=\");\n_c = Layer;\nexport default Layer;\nvar _c;\n$RefreshReg$(_c, \"Layer\");","map":{"version":3,"names":["React","useEffect","useState","LayerList","Modifier","NodeScreen","jsxDEV","_jsxDEV","Layer","props","_s","request","setRequest","in_channels","out_channels","selectedNode","setSelectedNode","onSelectNode","event","nodeInfo","onChange","_ref","target","name","value","next","console","log","onClickModify","onCancelModify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jungwon/Desktop/shjw/src/pages/Layer.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport LayerList from \"../components/layer/LayerList\";\nimport \"../styles/common/Modifier.css\";\nimport \"../styles/layer/Layer.css\";\nimport Modifier from \"../components/common/Modifier\";\nimport NodeScreen from \"../components/common/NodeScreen\";\n\nfunction Layer(props) {\n  /** 서버에서 불러온 node, edge 초기화 **/\n  // const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  // const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  /** 수정 정보 관련 request **/\n  const [request, setRequest] = useState({\n    in_channels: \"\",\n    out_channels: \"\",\n  });\n  /** 클릭한 노드 정보 **/\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  useEffect(() => {\n    /** node, edges 서버로부터 불러오기 **/\n    /*  서버에 저장된 node 정보 불러오기\n            axios.get(`url`)\n                .then(res => setNodes(res))\n                .catch(err => 예외처리)\n        */\n    /*  서버에 저장된 edge 정보 불러오기\n            axios.get(`url`)\n                .then(res => setEdges(res))\n                .catch(err => 예외처리)\n        */\n  }, []);\n\n  /** 클릭한 노드 selectedNode에 설정 **/\n  const onSelectNode = (event, nodeInfo) => {\n    setSelectedNode(nodeInfo);\n  };\n\n  /** Modifier 컴포넌트 input의 onChange **/\n  const onChange = ({ target: { name, value } }) => {\n    const next = {\n      ...request,\n      [name]: value,\n    };\n    console.log(next);\n    setRequest(next);\n  };\n\n  /** 수정 버튼 눌렀을 때 API 요청 처리 **/\n  const onClickModify = () => {\n    /** 수정 API **/\n    // ex) axios.update(`url`,{request})\n    //          .then(res => local Node 수정)\n    //          .catch(err => 예외처리)\n  };\n\n  /** 수정 취소 눌렀을 때 **/\n  const onCancelModify = () => {\n    setSelectedNode(null);\n  };\n\n  return (\n    <div className=\"layer_outer_container\">\n      <div className=\"aside_function_container\">\n        {/* 토글 관련 컴포넌트 */}\n        <LayerList />\n        {/* 노드 눌렀을때 수정? 하는거랬나 그거 관련 컴포넌트 */}\n        <div className={\"modifier_outer_container\"}>\n          {selectedNode && (\n            <Modifier\n              request={request}\n              onChange={onChange}\n              selectedNode={selectedNode}\n            />\n          )}\n        </div>\n      </div>\n      {/* 노드 화면에 띄우는 컴포넌트 */}\n      <NodeScreen onSelectNode={onSelectNode} />\n    </div>\n  );\n}\n\nexport default Layer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,+BAA+B;AACrD,OAAO,+BAA+B;AACtC,OAAO,2BAA2B;AAClC,OAAOC,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,UAAU,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpB;EACA;EACA;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC;IACrCW,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE;EAChB,CAAC,CAAC;EACF;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd;IACA;AACJ;AACA;AACA;AACA;IACI;AACJ;AACA;AACA;AACA;EAJI,CAKD,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMgB,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxCH,eAAe,CAACG,QAAQ,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAGC,IAAA,IAAiC;IAAA,IAAhC;MAAEC,MAAM,EAAE;QAAEC,IAAI;QAAEC;MAAM;IAAE,CAAC,GAAAH,IAAA;IAC3C,MAAMI,IAAI,GAAG;MACX,GAAGd,OAAO;MACV,CAACY,IAAI,GAAGC;IACV,CAAC;IACDE,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBb,UAAU,CAACa,IAAI,CAAC;EAClB,CAAC;;EAED;EACA,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA;IACA;IACA;EAAA,CACD;;EAED;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3Bb,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACET,OAAA;IAAKuB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCxB,OAAA;MAAKuB,SAAS,EAAC,0BAA0B;MAAAC,QAAA,gBAEvCxB,OAAA,CAACJ,SAAS;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAEb5B,OAAA;QAAKuB,SAAS,EAAE,0BAA2B;QAAAC,QAAA,EACxChB,YAAY,iBACXR,OAAA,CAACH,QAAQ;UACPO,OAAO,EAAEA,OAAQ;UACjBS,QAAQ,EAAEA,QAAS;UACnBL,YAAY,EAAEA;QAAa;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAE9B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,eAEN5B,OAAA,CAACF,UAAU;MAACY,YAAY,EAAEA;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtC;AAEV;AAACzB,EAAA,CA1EQF,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AA4Ed,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}