{"ast":null,"code":"import { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStore as useStore$1, createStore } from 'zustand';\nimport { shallow } from 'zustand/shallow';\nimport { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { createPortal } from 'react-dom';\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\nconst errorMessages = {\n  '001': () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n  '002': () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n  '003': nodeType => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n  '004': () => 'The React Flow parent container needs a width and a height to render the graph.',\n  '005': () => 'Only child nodes can use a parent extent.',\n  '006': () => \"Can't create edge. An edge needs a source and a target.\",\n  '007': id => `The old edge with id=${id} does not exist.`,\n  '009': type => `Marker type \"${type}\" doesn't exist.`,\n  '008': (sourceHandle, edge) => `Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: \"${!sourceHandle ? edge.sourceHandle : edge.targetHandle}\", edge id: ${edge.id}.`,\n  '010': () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n  '011': edgeType => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`\n};\nconst zustandErrorMessage = errorMessages['001']();\nfunction useStore(selector, equalityFn) {\n  const store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useStore$1(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n  const store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useMemo(() => ({\n    getState: store.getState,\n    setState: store.setState,\n    subscribe: store.subscribe,\n    destroy: store.destroy\n  }), [store]);\n};\nconst selector$g = s => s.userSelectionActive ? 'none' : 'all';\nfunction Panel(_ref) {\n  let {\n    position,\n    children,\n    className,\n    style,\n    ...rest\n  } = _ref;\n  const pointerEvents = useStore(selector$g);\n  const positionClasses = `${position}`.split('-');\n  return jsx(\"div\", {\n    className: cc(['react-flow__panel', className, ...positionClasses]),\n    style: {\n      ...style,\n      pointerEvents\n    },\n    ...rest,\n    children: children\n  });\n}\nfunction Attribution(_ref2) {\n  let {\n    proOptions,\n    position = 'bottom-right'\n  } = _ref2;\n  if (proOptions?.hideAttribution) {\n    return null;\n  }\n  return jsx(Panel, {\n    position: position,\n    className: \"react-flow__attribution\",\n    \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\",\n    children: jsx(\"a\", {\n      href: \"https://reactflow.dev\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": \"React Flow attribution\",\n      children: \"React Flow\"\n    })\n  });\n}\nconst EdgeText = _ref3 => {\n  let {\n    x,\n    y,\n    label,\n    labelStyle = {},\n    labelShowBg = true,\n    labelBgStyle = {},\n    labelBgPadding = [2, 4],\n    labelBgBorderRadius = 2,\n    children,\n    className,\n    ...rest\n  } = _ref3;\n  const edgeRef = useRef(null);\n  const [edgeTextBbox, setEdgeTextBbox] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  });\n  const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n  useEffect(() => {\n    if (edgeRef.current) {\n      const textBbox = edgeRef.current.getBBox();\n      setEdgeTextBbox({\n        x: textBbox.x,\n        y: textBbox.y,\n        width: textBbox.width,\n        height: textBbox.height\n      });\n    }\n  }, [label]);\n  if (typeof label === 'undefined' || !label) {\n    return null;\n  }\n  return jsxs(\"g\", {\n    transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`,\n    className: edgeTextClasses,\n    visibility: edgeTextBbox.width ? 'visible' : 'hidden',\n    ...rest,\n    children: [labelShowBg && jsx(\"rect\", {\n      width: edgeTextBbox.width + 2 * labelBgPadding[0],\n      x: -labelBgPadding[0],\n      y: -labelBgPadding[1],\n      height: edgeTextBbox.height + 2 * labelBgPadding[1],\n      className: \"react-flow__edge-textbg\",\n      style: labelBgStyle,\n      rx: labelBgBorderRadius,\n      ry: labelBgBorderRadius\n    }), jsx(\"text\", {\n      className: \"react-flow__edge-text\",\n      y: edgeTextBbox.height / 2,\n      dy: \"0.3em\",\n      ref: edgeRef,\n      style: labelStyle,\n      children: label\n    }), children]\n  });\n};\nvar EdgeText$1 = memo(EdgeText);\nconst getDimensions = node => ({\n  width: node.offsetWidth,\n  height: node.offsetHeight\n});\nconst clamp = function (val) {\n  let min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return Math.min(Math.max(val, min), max);\n};\nconst clampPosition = function () {\n  let position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    x: 0,\n    y: 0\n  };\n  let extent = arguments.length > 1 ? arguments[1] : undefined;\n  return {\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1])\n  };\n};\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n  if (value < min) {\n    return clamp(Math.abs(value - min), 1, 50) / 50;\n  } else if (value > max) {\n    return -clamp(Math.abs(value - max), 1, 50) / 50;\n  }\n  return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n  const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n  const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n  return [xMovement, yMovement];\n};\nconst getHostForElement = element => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n  x: Math.min(box1.x, box2.x),\n  y: Math.min(box1.y, box2.y),\n  x2: Math.max(box1.x2, box2.x2),\n  y2: Math.max(box1.y2, box2.y2)\n});\nconst rectToBox = _ref4 => {\n  let {\n    x,\n    y,\n    width,\n    height\n  } = _ref4;\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height\n  };\n};\nconst boxToRect = _ref5 => {\n  let {\n    x,\n    y,\n    x2,\n    y2\n  } = _ref5;\n  return {\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y\n  };\n};\nconst nodeToRect = node => ({\n  ...(node.positionAbsolute || {\n    x: 0,\n    y: 0\n  }),\n  width: node.width || 0,\n  height: node.height || 0\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n  const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n  const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n  return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = obj => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = n => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n  }\n};\nconst isReactKeyboardEvent = event => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n  const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n  // using composed path for handling shadow dom\n  const target = kbEvent.composedPath?.()?.[0] || event.target;\n  const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable');\n  // when an input field is focused we don't want to trigger deletion or movement of nodes\n  return isInput || !!target?.closest('.nokey');\n}\nconst isMouseEvent = event => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n  const isMouseTriggered = isMouseEvent(event);\n  const evtX = isMouseTriggered ? event.clientX : event.touches?.[0].clientX;\n  const evtY = isMouseTriggered ? event.clientY : event.touches?.[0].clientY;\n  return {\n    x: evtX - (bounds?.left ?? 0),\n    y: evtY - (bounds?.top ?? 0)\n  };\n};\nconst BaseEdge = _ref6 => {\n  let {\n    path,\n    labelX,\n    labelY,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    interactionWidth = 20\n  } = _ref6;\n  return jsxs(Fragment, {\n    children: [jsx(\"path\", {\n      style: style,\n      d: path,\n      fill: \"none\",\n      className: \"react-flow__edge-path\",\n      markerEnd: markerEnd,\n      markerStart: markerStart\n    }), interactionWidth && jsx(\"path\", {\n      d: path,\n      fill: \"none\",\n      strokeOpacity: 0,\n      strokeWidth: interactionWidth,\n      className: \"react-flow__edge-interaction\"\n    }), label && isNumeric(labelX) && isNumeric(labelY) ? jsx(EdgeText$1, {\n      x: labelX,\n      y: labelY,\n      label: label,\n      labelStyle: labelStyle,\n      labelShowBg: labelShowBg,\n      labelBgStyle: labelBgStyle,\n      labelBgPadding: labelBgPadding,\n      labelBgBorderRadius: labelBgBorderRadius\n    }) : null]\n  });\n};\nBaseEdge.displayName = 'BaseEdge';\nconst getMarkerEnd = (markerType, markerEndId) => {\n  if (typeof markerEndId !== 'undefined' && markerEndId) {\n    return `url(#${markerEndId})`;\n  }\n  return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n  return handler === undefined ? handler : event => {\n    const edge = getState().edges.find(e => e.id === id);\n    if (edge) {\n      handler(event, {\n        ...edge\n      });\n    }\n  };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter(_ref7) {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  } = _ref7;\n  const xOffset = Math.abs(targetX - sourceX) / 2;\n  const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n  const yOffset = Math.abs(targetY - sourceY) / 2;\n  const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n  return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter(_ref8) {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  } = _ref8;\n  // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n  // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n  const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n  const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n  const offsetX = Math.abs(centerX - sourceX);\n  const offsetY = Math.abs(centerY - sourceY);\n  return [centerX, centerY, offsetX, offsetY];\n}\nvar ConnectionMode;\n(function (ConnectionMode) {\n  ConnectionMode[\"Strict\"] = \"strict\";\n  ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n  PanOnScrollMode[\"Free\"] = \"free\";\n  PanOnScrollMode[\"Vertical\"] = \"vertical\";\n  PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n  SelectionMode[\"Partial\"] = \"partial\";\n  SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n  ConnectionLineType[\"Bezier\"] = \"default\";\n  ConnectionLineType[\"Straight\"] = \"straight\";\n  ConnectionLineType[\"Step\"] = \"step\";\n  ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n  ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n  MarkerType[\"Arrow\"] = \"arrow\";\n  MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\nvar Position;\n(function (Position) {\n  Position[\"Left\"] = \"left\";\n  Position[\"Top\"] = \"top\";\n  Position[\"Right\"] = \"right\";\n  Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\nfunction getControl(_ref9) {\n  let {\n    pos,\n    x1,\n    y1,\n    x2,\n    y2\n  } = _ref9;\n  if (pos === Position.Left || pos === Position.Right) {\n    return [0.5 * (x1 + x2), y1];\n  }\n  return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath(_ref10) {\n  let {\n    sourceX,\n    sourceY,\n    sourcePosition = Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition = Position.Top\n  } = _ref10;\n  const [sourceControlX, sourceControlY] = getControl({\n    pos: sourcePosition,\n    x1: sourceX,\n    y1: sourceY,\n    x2: targetX,\n    y2: targetY\n  });\n  const [targetControlX, targetControlY] = getControl({\n    pos: targetPosition,\n    x1: targetX,\n    y1: targetY,\n    x2: sourceX,\n    y2: sourceY\n  });\n  const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  });\n  return [`M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst SimpleBezierEdge = memo(_ref11 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourcePosition = Position.Bottom,\n    targetPosition = Position.Top,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    interactionWidth\n  } = _ref11;\n  const [path, labelX, labelY] = getSimpleBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\nconst handleDirections = {\n  [Position.Left]: {\n    x: -1,\n    y: 0\n  },\n  [Position.Right]: {\n    x: 1,\n    y: 0\n  },\n  [Position.Top]: {\n    x: 0,\n    y: -1\n  },\n  [Position.Bottom]: {\n    x: 0,\n    y: 1\n  }\n};\nconst getDirection = _ref12 => {\n  let {\n    source,\n    sourcePosition = Position.Bottom,\n    target\n  } = _ref12;\n  if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n    return source.x < target.x ? {\n      x: 1,\n      y: 0\n    } : {\n      x: -1,\n      y: 0\n    };\n  }\n  return source.y < target.y ? {\n    x: 0,\n    y: 1\n  } : {\n    x: 0,\n    y: -1\n  };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints(_ref13) {\n  let {\n    source,\n    sourcePosition = Position.Bottom,\n    target,\n    targetPosition = Position.Top,\n    center,\n    offset\n  } = _ref13;\n  const sourceDir = handleDirections[sourcePosition];\n  const targetDir = handleDirections[targetPosition];\n  const sourceGapped = {\n    x: source.x + sourceDir.x * offset,\n    y: source.y + sourceDir.y * offset\n  };\n  const targetGapped = {\n    x: target.x + targetDir.x * offset,\n    y: target.y + targetDir.y * offset\n  };\n  const dir = getDirection({\n    source: sourceGapped,\n    sourcePosition,\n    target: targetGapped\n  });\n  const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n  const currDir = dir[dirAccessor];\n  let points = [];\n  let centerX, centerY;\n  const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n    sourceX: source.x,\n    sourceY: source.y,\n    targetX: target.x,\n    targetY: target.y\n  });\n  // opposite handle positions, default case\n  if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n    centerX = center.x || defaultCenterX;\n    centerY = center.y || defaultCenterY;\n    //    --->\n    //    |\n    // >---\n    const verticalSplit = [{\n      x: centerX,\n      y: sourceGapped.y\n    }, {\n      x: centerX,\n      y: targetGapped.y\n    }];\n    //    |\n    //  ---\n    //  |\n    const horizontalSplit = [{\n      x: sourceGapped.x,\n      y: centerY\n    }, {\n      x: targetGapped.x,\n      y: centerY\n    }];\n    if (sourceDir[dirAccessor] === currDir) {\n      points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n    } else {\n      points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n    }\n  } else {\n    // sourceTarget means we take x from source and y from target, targetSource is the opposite\n    const sourceTarget = [{\n      x: sourceGapped.x,\n      y: targetGapped.y\n    }];\n    const targetSource = [{\n      x: targetGapped.x,\n      y: sourceGapped.y\n    }];\n    // this handles edges with same handle positions\n    if (dirAccessor === 'x') {\n      points = sourceDir.x === currDir ? targetSource : sourceTarget;\n    } else {\n      points = sourceDir.y === currDir ? sourceTarget : targetSource;\n    }\n    // these are conditions for handling mixed handle positions like Right -> Bottom for example\n    if (sourcePosition !== targetPosition) {\n      const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n      const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n      const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n      const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n      const flipSourceTarget = sourceDir[dirAccessor] === 1 && (!isSameDir && sourceGtTargetOppo || isSameDir && sourceLtTargetOppo) || sourceDir[dirAccessor] !== 1 && (!isSameDir && sourceLtTargetOppo || isSameDir && sourceGtTargetOppo);\n      if (flipSourceTarget) {\n        points = dirAccessor === 'x' ? sourceTarget : targetSource;\n      }\n    }\n    centerX = points[0].x;\n    centerY = points[0].y;\n  }\n  const pathPoints = [source, sourceGapped, ...points, targetGapped, target];\n  return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n  const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n  const {\n    x,\n    y\n  } = b;\n  // no bend\n  if (a.x === x && x === c.x || a.y === y && y === c.y) {\n    return `L${x} ${y}`;\n  }\n  // first segment is horizontal\n  if (a.y === y) {\n    const xDir = a.x < c.x ? -1 : 1;\n    const yDir = a.y < c.y ? 1 : -1;\n    return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n  }\n  const xDir = a.x < c.x ? 1 : -1;\n  const yDir = a.y < c.y ? -1 : 1;\n  return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath(_ref14) {\n  let {\n    sourceX,\n    sourceY,\n    sourcePosition = Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition = Position.Top,\n    borderRadius = 5,\n    centerX,\n    centerY,\n    offset = 20\n  } = _ref14;\n  const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n    source: {\n      x: sourceX,\n      y: sourceY\n    },\n    sourcePosition,\n    target: {\n      x: targetX,\n      y: targetY\n    },\n    targetPosition,\n    center: {\n      x: centerX,\n      y: centerY\n    },\n    offset\n  });\n  const path = points.reduce((res, p, i) => {\n    let segment = '';\n    if (i > 0 && i < points.length - 1) {\n      segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n    } else {\n      segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n    }\n    res += segment;\n    return res;\n  }, '');\n  return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(_ref15 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    sourcePosition = Position.Bottom,\n    targetPosition = Position.Top,\n    markerEnd,\n    markerStart,\n    pathOptions,\n    interactionWidth\n  } = _ref15;\n  const [path, labelX, labelY] = getSmoothStepPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n    borderRadius: pathOptions?.borderRadius,\n    offset: pathOptions?.offset\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\nconst StepEdge = memo(props => jsx(SmoothStepEdge, {\n  ...props,\n  pathOptions: useMemo(() => ({\n    borderRadius: 0,\n    offset: props.pathOptions?.offset\n  }), [props.pathOptions?.offset])\n}));\nStepEdge.displayName = 'StepEdge';\nfunction getStraightPath(_ref16) {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  } = _ref16;\n  const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  });\n  return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(_ref17 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    interactionWidth\n  } = _ref17;\n  const [path, labelX, labelY] = getStraightPath({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nStraightEdge.displayName = 'StraightEdge';\nfunction calculateControlOffset(distance, curvature) {\n  if (distance >= 0) {\n    return 0.5 * distance;\n  }\n  return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature(_ref18) {\n  let {\n    pos,\n    x1,\n    y1,\n    x2,\n    y2,\n    c\n  } = _ref18;\n  switch (pos) {\n    case Position.Left:\n      return [x1 - calculateControlOffset(x1 - x2, c), y1];\n    case Position.Right:\n      return [x1 + calculateControlOffset(x2 - x1, c), y1];\n    case Position.Top:\n      return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n    case Position.Bottom:\n      return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n  }\n}\nfunction getBezierPath(_ref19) {\n  let {\n    sourceX,\n    sourceY,\n    sourcePosition = Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition = Position.Top,\n    curvature = 0.25\n  } = _ref19;\n  const [sourceControlX, sourceControlY] = getControlWithCurvature({\n    pos: sourcePosition,\n    x1: sourceX,\n    y1: sourceY,\n    x2: targetX,\n    y2: targetY,\n    c: curvature\n  });\n  const [targetControlX, targetControlY] = getControlWithCurvature({\n    pos: targetPosition,\n    x1: targetX,\n    y1: targetY,\n    x2: sourceX,\n    y2: sourceY,\n    c: curvature\n  });\n  const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  });\n  return [`M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst BezierEdge = memo(_ref20 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourcePosition = Position.Bottom,\n    targetPosition = Position.Top,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    pathOptions,\n    interactionWidth\n  } = _ref20;\n  const [path, labelX, labelY] = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n    curvature: pathOptions?.curvature\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nBezierEdge.displayName = 'BezierEdge';\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n  const nodeId = useContext(NodeIdContext);\n  return nodeId;\n};\nconst isEdge = element => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = element => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n  if (!isNode(node)) {\n    return [];\n  }\n  const outgoerIds = edges.filter(e => e.source === node.id).map(e => e.target);\n  return nodes.filter(n => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n  if (!isNode(node)) {\n    return [];\n  }\n  const incomersIds = edges.filter(e => e.target === node.id).map(e => e.source);\n  return nodes.filter(n => incomersIds.includes(n.id));\n};\nconst getEdgeId = _ref21 => {\n  let {\n    source,\n    sourceHandle,\n    target,\n    targetHandle\n  } = _ref21;\n  return `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\n};\nconst getMarkerId = (marker, rfId) => {\n  if (typeof marker === 'undefined') {\n    return '';\n  }\n  if (typeof marker === 'string') {\n    return marker;\n  }\n  const idPrefix = rfId ? `${rfId}__` : '';\n  return `${idPrefix}${Object.keys(marker).sort().map(key => `${key}=${marker[key]}`).join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n  return edges.some(el => el.source === edge.source && el.target === edge.target && (el.sourceHandle === edge.sourceHandle || !el.sourceHandle && !edge.sourceHandle) && (el.targetHandle === edge.targetHandle || !el.targetHandle && !edge.targetHandle));\n};\nconst addEdge = (edgeParams, edges) => {\n  if (!edgeParams.source || !edgeParams.target) {\n    devWarn('006', errorMessages['006']());\n    return edges;\n  }\n  let edge;\n  if (isEdge(edgeParams)) {\n    edge = {\n      ...edgeParams\n    };\n  } else {\n    edge = {\n      ...edgeParams,\n      id: getEdgeId(edgeParams)\n    };\n  }\n  if (connectionExists(edge, edges)) {\n    return edges;\n  }\n  return edges.concat(edge);\n};\nconst updateEdge = function (oldEdge, newConnection, edges) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n    shouldReplaceId: true\n  };\n  const {\n    id: oldEdgeId,\n    ...rest\n  } = oldEdge;\n  if (!newConnection.source || !newConnection.target) {\n    devWarn('006', errorMessages['006']());\n    return edges;\n  }\n  const foundEdge = edges.find(e => e.id === oldEdgeId);\n  if (!foundEdge) {\n    devWarn('007', errorMessages['007'](oldEdgeId));\n    return edges;\n  }\n  // Remove old edge and create the new edge with parameters of old edge.\n  const edge = {\n    ...rest,\n    id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n    source: newConnection.source,\n    target: newConnection.target,\n    sourceHandle: newConnection.sourceHandle,\n    targetHandle: newConnection.targetHandle\n  };\n  return edges.filter(e => e.id !== oldEdgeId).concat(edge);\n};\nconst pointToRendererPoint = (_ref22, _ref23, snapToGrid, _ref24) => {\n  let {\n    x,\n    y\n  } = _ref22;\n  let [tx, ty, tScale] = _ref23;\n  let [snapX, snapY] = _ref24;\n  const position = {\n    x: (x - tx) / tScale,\n    y: (y - ty) / tScale\n  };\n  if (snapToGrid) {\n    return {\n      x: snapX * Math.round(position.x / snapX),\n      y: snapY * Math.round(position.y / snapY)\n    };\n  }\n  return position;\n};\nconst rendererPointToPoint = (_ref25, _ref26) => {\n  let {\n    x,\n    y\n  } = _ref25;\n  let [tx, ty, tScale] = _ref26;\n  return {\n    x: x * tScale + tx,\n    y: y * tScale + ty\n  };\n};\nconst getNodePositionWithOrigin = function (node) {\n  let nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (!node) {\n    return {\n      x: 0,\n      y: 0,\n      positionAbsolute: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n  const offsetX = (node.width ?? 0) * nodeOrigin[0];\n  const offsetY = (node.height ?? 0) * nodeOrigin[1];\n  const position = {\n    x: node.position.x - offsetX,\n    y: node.position.y - offsetY\n  };\n  return {\n    ...position,\n    positionAbsolute: node.positionAbsolute ? {\n      x: node.positionAbsolute.x - offsetX,\n      y: node.positionAbsolute.y - offsetY\n    } : position\n  };\n};\nconst getRectOfNodes = function (nodes) {\n  let nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (nodes.length === 0) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const box = nodes.reduce((currBox, node) => {\n    const {\n      x,\n      y\n    } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n    return getBoundsOfBoxes(currBox, rectToBox({\n      x,\n      y,\n      width: node.width || 0,\n      height: node.height || 0\n    }));\n  }, {\n    x: Infinity,\n    y: Infinity,\n    x2: -Infinity,\n    y2: -Infinity\n  });\n  return boxToRect(box);\n};\nconst getNodesInside = function (nodeInternals, rect) {\n  let [tx, ty, tScale] = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0, 1];\n  let partially = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let excludeNonSelectableNodes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  let nodeOrigin = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [0, 0];\n  const paneRect = {\n    x: (rect.x - tx) / tScale,\n    y: (rect.y - ty) / tScale,\n    width: rect.width / tScale,\n    height: rect.height / tScale\n  };\n  const visibleNodes = [];\n  nodeInternals.forEach(node => {\n    const {\n      width,\n      height,\n      selectable = true,\n      hidden = false\n    } = node;\n    if (excludeNonSelectableNodes && !selectable || hidden) {\n      return false;\n    }\n    const {\n      positionAbsolute\n    } = getNodePositionWithOrigin(node, nodeOrigin);\n    const nodeRect = {\n      x: positionAbsolute.x,\n      y: positionAbsolute.y,\n      width: width || 0,\n      height: height || 0\n    };\n    const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n    const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n    const partiallyVisible = partially && overlappingArea > 0;\n    const area = (width || 0) * (height || 0);\n    const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n    if (isVisible || node.dragging) {\n      visibleNodes.push(node);\n    }\n  });\n  return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n  const nodeIds = nodes.map(node => node.id);\n  return edges.filter(edge => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\nconst getTransformForBounds = function (bounds, width, height, minZoom, maxZoom) {\n  let padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.1;\n  const xZoom = width / (bounds.width * (1 + padding));\n  const yZoom = height / (bounds.height * (1 + padding));\n  const zoom = Math.min(xZoom, yZoom);\n  const clampedZoom = clamp(zoom, minZoom, maxZoom);\n  const boundsCenterX = bounds.x + bounds.width / 2;\n  const boundsCenterY = bounds.y + bounds.height / 2;\n  const x = width / 2 - boundsCenterX * clampedZoom;\n  const y = height / 2 - boundsCenterY * clampedZoom;\n  return [x, y, clampedZoom];\n};\nconst getD3Transition = function (selection) {\n  let duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n  return (handleBounds[type] || []).reduce((res, h) => {\n    if (`${node.id}-${h.id}-${type}` !== currentHandle) {\n      res.push({\n        id: h.id || null,\n        type,\n        nodeId: node.id,\n        x: (node.positionAbsolute?.x ?? 0) + h.x + h.width / 2,\n        y: (node.positionAbsolute?.y ?? 0) + h.y + h.height / 2\n      });\n    }\n    return res;\n  }, []);\n}\nfunction getClosestHandle(pos, connectionRadius, handles) {\n  let closestHandle = null;\n  let minDistance = Infinity;\n  handles.forEach(handle => {\n    const distance = Math.sqrt(Math.pow(handle.x - pos.x, 2) + Math.pow(handle.y - pos.y, 2));\n    if (distance <= connectionRadius && distance < minDistance) {\n      minDistance = distance;\n      closestHandle = handle;\n    }\n  });\n  return closestHandle;\n}\nconst nullConnection = {\n  source: null,\n  target: null,\n  sourceHandle: null,\n  targetHandle: null\n};\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(event, handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n  const isTarget = fromType === 'target';\n  const handleDomNode = doc.querySelector(`.react-flow__handle[data-id=\"${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`);\n  const {\n    x,\n    y\n  } = getEventPosition(event);\n  const handleBelow = doc.elementFromPoint(x, y);\n  const handleToCheck = handleBelow?.classList.contains('react-flow__handle') ? handleBelow : handleDomNode;\n  const result = {\n    handleDomNode: handleToCheck,\n    isValid: false,\n    connection: nullConnection\n  };\n  if (handleToCheck) {\n    const handleType = getHandleType(undefined, handleToCheck);\n    const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n    const handleId = handleToCheck.getAttribute('data-handleid');\n    const connection = {\n      source: isTarget ? handleNodeId : fromNodeId,\n      sourceHandle: isTarget ? handleId : fromHandleId,\n      target: isTarget ? fromNodeId : handleNodeId,\n      targetHandle: isTarget ? fromHandleId : handleId\n    };\n    result.connection = connection;\n    // in strict mode we don't allow target to target or source to source connections\n    const isValid = handleToCheck.classList.contains('connectable') && (connectionMode === ConnectionMode.Strict ? isTarget && handleType === 'source' || !isTarget && handleType === 'target' : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n    if (isValid) {\n      result.isValid = isValidConnection(connection);\n    }\n  }\n  return result;\n}\nfunction getHandleLookup(_ref27) {\n  let {\n    nodes,\n    nodeId,\n    handleId,\n    handleType\n  } = _ref27;\n  return nodes.reduce((res, node) => {\n    if (node[internalsSymbol]) {\n      const {\n        handleBounds\n      } = node[internalsSymbol];\n      let sourceHandles = [];\n      let targetHandles = [];\n      if (handleBounds) {\n        sourceHandles = getHandles(node, handleBounds, 'source', `${nodeId}-${handleId}-${handleType}`);\n        targetHandles = getHandles(node, handleBounds, 'target', `${nodeId}-${handleId}-${handleType}`);\n      }\n      res.push(...sourceHandles, ...targetHandles);\n    }\n    return res;\n  }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n  if (edgeUpdaterType) {\n    return edgeUpdaterType;\n  } else if (handleDomNode?.classList.contains('target')) {\n    return 'target';\n  } else if (handleDomNode?.classList.contains('source')) {\n    return 'source';\n  }\n  return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n  handleDomNode?.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n  let connectionStatus = null;\n  if (isHandleValid) {\n    connectionStatus = 'valid';\n  } else if (isInsideConnectionRadius && !isHandleValid) {\n    connectionStatus = 'invalid';\n  }\n  return connectionStatus;\n}\nfunction handlePointerDown(_ref28) {\n  let {\n    event,\n    handleId,\n    nodeId,\n    onConnect,\n    isTarget,\n    getState,\n    setState,\n    isValidConnection,\n    edgeUpdaterType,\n    onEdgeUpdateEnd\n  } = _ref28;\n  // when react-flow is used inside a shadow root we can't use document\n  const doc = getHostForElement(event.target);\n  const {\n    connectionMode,\n    domNode,\n    autoPanOnConnect,\n    connectionRadius,\n    onConnectStart,\n    panBy,\n    getNodes,\n    cancelConnection\n  } = getState();\n  let autoPanId = 0;\n  let prevClosestHandle;\n  const {\n    x,\n    y\n  } = getEventPosition(event);\n  const clickedHandle = doc?.elementFromPoint(x, y);\n  const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n  const containerBounds = domNode?.getBoundingClientRect();\n  if (!containerBounds || !handleType) {\n    return;\n  }\n  let prevActiveHandle;\n  let connectionPosition = getEventPosition(event, containerBounds);\n  let autoPanStarted = false;\n  let connection = null;\n  let isValid = false;\n  let handleDomNode = null;\n  const handleLookup = getHandleLookup({\n    nodes: getNodes(),\n    nodeId,\n    handleId,\n    handleType\n  });\n  // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n  const autoPan = () => {\n    if (!autoPanOnConnect) {\n      return;\n    }\n    const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n    panBy({\n      x: xMovement,\n      y: yMovement\n    });\n    autoPanId = requestAnimationFrame(autoPan);\n  };\n  setState({\n    connectionPosition,\n    connectionNodeId: nodeId,\n    connectionHandleId: handleId,\n    connectionHandleType: handleType,\n    connectionStatus: null\n  });\n  onConnectStart?.(event, {\n    nodeId,\n    handleId,\n    handleType\n  });\n  function onPointerMove(event) {\n    const {\n      transform\n    } = getState();\n    connectionPosition = getEventPosition(event, containerBounds);\n    prevClosestHandle = getClosestHandle(pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup);\n    if (!autoPanStarted) {\n      autoPan();\n      autoPanStarted = true;\n    }\n    const result = isValidHandle(event, prevClosestHandle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc);\n    handleDomNode = result.handleDomNode;\n    connection = result.connection;\n    isValid = result.isValid;\n    setState({\n      connectionPosition: prevClosestHandle && isValid ? rendererPointToPoint({\n        x: prevClosestHandle.x,\n        y: prevClosestHandle.y\n      }, transform) : connectionPosition,\n      connectionStatus: getConnectionStatus(!!prevClosestHandle, isValid)\n    });\n    if (!prevClosestHandle && !isValid && !handleDomNode) {\n      return resetRecentHandle(prevActiveHandle);\n    }\n    if (connection.source !== connection.target && handleDomNode) {\n      resetRecentHandle(prevActiveHandle);\n      prevActiveHandle = handleDomNode;\n      // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n      handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n      handleDomNode.classList.toggle('valid', isValid);\n      handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n    }\n  }\n  function onPointerUp(event) {\n    if ((prevClosestHandle || handleDomNode) && connection && isValid) {\n      onConnect?.(connection);\n    }\n    // it's important to get a fresh reference from the store here\n    // in order to get the latest state of onConnectEnd\n    getState().onConnectEnd?.(event);\n    if (edgeUpdaterType) {\n      onEdgeUpdateEnd?.(event);\n    }\n    resetRecentHandle(prevActiveHandle);\n    cancelConnection();\n    cancelAnimationFrame(autoPanId);\n    autoPanStarted = false;\n    isValid = false;\n    connection = null;\n    handleDomNode = null;\n    doc.removeEventListener('mousemove', onPointerMove);\n    doc.removeEventListener('mouseup', onPointerUp);\n    doc.removeEventListener('touchmove', onPointerMove);\n    doc.removeEventListener('touchend', onPointerUp);\n  }\n  doc.addEventListener('mousemove', onPointerMove);\n  doc.addEventListener('mouseup', onPointerUp);\n  doc.addEventListener('touchmove', onPointerMove);\n  doc.addEventListener('touchend', onPointerUp);\n}\nconst alwaysValid = () => true;\nconst selector$f = s => ({\n  connectionStartHandle: s.connectionStartHandle,\n  connectOnClick: s.connectOnClick,\n  noPanClassName: s.noPanClassName\n});\nconst Handle = forwardRef((_ref29, ref) => {\n  let {\n    type = 'source',\n    position = Position.Top,\n    isValidConnection,\n    isConnectable = true,\n    id,\n    onConnect,\n    children,\n    className,\n    onMouseDown,\n    onTouchStart,\n    ...rest\n  } = _ref29;\n  const store = useStoreApi();\n  const nodeId = useNodeId();\n  if (!nodeId) {\n    store.getState().onError?.('010', errorMessages['010']());\n    return null;\n  }\n  const {\n    connectionStartHandle,\n    connectOnClick,\n    noPanClassName\n  } = useStore(selector$f, shallow);\n  const handleId = id || null;\n  const isTarget = type === 'target';\n  const onConnectExtended = params => {\n    const {\n      defaultEdgeOptions,\n      onConnect: onConnectAction,\n      hasDefaultEdges\n    } = store.getState();\n    const edgeParams = {\n      ...defaultEdgeOptions,\n      ...params\n    };\n    if (hasDefaultEdges) {\n      const {\n        edges,\n        setEdges\n      } = store.getState();\n      setEdges(addEdge(edgeParams, edges));\n    }\n    onConnectAction?.(edgeParams);\n    onConnect?.(edgeParams);\n  };\n  const onPointerDown = event => {\n    const isMouseTriggered = isMouseEvent(event);\n    if (isMouseTriggered && event.button === 0 || !isMouseTriggered) {\n      handlePointerDown({\n        event,\n        handleId,\n        nodeId,\n        onConnect: onConnectExtended,\n        isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid\n      });\n    }\n    if (isMouseTriggered) {\n      onMouseDown?.(event);\n    } else {\n      onTouchStart?.(event);\n    }\n  };\n  const onClick = event => {\n    const {\n      onClickConnectStart,\n      onClickConnectEnd,\n      connectionMode,\n      isValidConnection: isValidConnectionStore\n    } = store.getState();\n    if (!connectionStartHandle) {\n      onClickConnectStart?.(event, {\n        nodeId,\n        handleId,\n        handleType: type\n      });\n      store.setState({\n        connectionStartHandle: {\n          nodeId,\n          type,\n          handleId\n        }\n      });\n      return;\n    }\n    const doc = getHostForElement(event.target);\n    const isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n    const {\n      connection,\n      isValid\n    } = isValidHandle(event, {\n      nodeId,\n      id: handleId,\n      type\n    }, connectionMode, connectionStartHandle.nodeId, connectionStartHandle.handleId || null, connectionStartHandle.type, isValidConnectionHandler, doc);\n    if (isValid) {\n      onConnectExtended(connection);\n    }\n    onClickConnectEnd?.(event);\n    store.setState({\n      connectionStartHandle: null\n    });\n  };\n  return jsx(\"div\", {\n    \"data-handleid\": handleId,\n    \"data-nodeid\": nodeId,\n    \"data-handlepos\": position,\n    \"data-id\": `${nodeId}-${handleId}-${type}`,\n    className: cc(['react-flow__handle', `react-flow__handle-${position}`, 'nodrag', noPanClassName, className, {\n      source: !isTarget,\n      target: isTarget,\n      connectable: isConnectable,\n      connecting: connectionStartHandle?.nodeId === nodeId && connectionStartHandle?.handleId === handleId && connectionStartHandle?.type === type\n    }]),\n    onMouseDown: onPointerDown,\n    onTouchStart: onPointerDown,\n    onClick: connectOnClick ? onClick : undefined,\n    ref: ref,\n    ...rest,\n    children: children\n  });\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\nconst DefaultNode = _ref30 => {\n  let {\n    data,\n    isConnectable,\n    targetPosition = Position.Top,\n    sourcePosition = Position.Bottom\n  } = _ref30;\n  return jsxs(Fragment, {\n    children: [jsx(Handle$1, {\n      type: \"target\",\n      position: targetPosition,\n      isConnectable: isConnectable\n    }), data?.label, jsx(Handle$1, {\n      type: \"source\",\n      position: sourcePosition,\n      isConnectable: isConnectable\n    })]\n  });\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\nconst InputNode = _ref31 => {\n  let {\n    data,\n    isConnectable,\n    sourcePosition = Position.Bottom\n  } = _ref31;\n  return jsxs(Fragment, {\n    children: [data?.label, jsx(Handle$1, {\n      type: \"source\",\n      position: sourcePosition,\n      isConnectable: isConnectable\n    })]\n  });\n};\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\nconst OutputNode = _ref32 => {\n  let {\n    data,\n    isConnectable,\n    targetPosition = Position.Top\n  } = _ref32;\n  return jsxs(Fragment, {\n    children: [jsx(Handle$1, {\n      type: \"target\",\n      position: targetPosition,\n      isConnectable: isConnectable\n    }), data?.label]\n  });\n};\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\nconst selector$e = s => ({\n  selectedNodes: s.getNodes().filter(n => n.selected),\n  selectedEdges: s.edges.filter(e => e.selected)\n});\nconst selectId = obj => obj.id;\nfunction areEqual(a, b) {\n  return shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) && shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(_ref33 => {\n  let {\n    onSelectionChange\n  } = _ref33;\n  const store = useStoreApi();\n  const {\n    selectedNodes,\n    selectedEdges\n  } = useStore(selector$e, areEqual);\n  useEffect(() => {\n    const params = {\n      nodes: selectedNodes,\n      edges: selectedEdges\n    };\n    onSelectionChange?.(params);\n    store.getState().onSelectionChange?.(params);\n  }, [selectedNodes, selectedEdges, onSelectionChange]);\n  return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = s => !!s.onSelectionChange;\nfunction Wrapper$1(_ref34) {\n  let {\n    onSelectionChange\n  } = _ref34;\n  const storeHasSelectionChange = useStore(changeSelector);\n  if (onSelectionChange || storeHasSelectionChange) {\n    return jsx(SelectionListener, {\n      onSelectionChange: onSelectionChange\n    });\n  }\n  return null;\n}\nconst selector$d = s => ({\n  setNodes: s.setNodes,\n  setEdges: s.setEdges,\n  setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n  setMinZoom: s.setMinZoom,\n  setMaxZoom: s.setMaxZoom,\n  setTranslateExtent: s.setTranslateExtent,\n  setNodeExtent: s.setNodeExtent,\n  reset: s.reset\n});\nfunction useStoreUpdater(value, setStoreState) {\n  useEffect(() => {\n    if (typeof value !== 'undefined') {\n      setStoreState(value);\n    }\n  }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n  useEffect(() => {\n    if (typeof value !== 'undefined') {\n      setState({\n        [key]: value\n      });\n    }\n  }, [value]);\n}\nconst StoreUpdater = _ref35 => {\n  let {\n    nodes,\n    edges,\n    defaultNodes,\n    defaultEdges,\n    onConnect,\n    onConnectStart,\n    onConnectEnd,\n    onClickConnectStart,\n    onClickConnectEnd,\n    nodesDraggable,\n    nodesConnectable,\n    nodesFocusable,\n    edgesFocusable,\n    elevateNodesOnSelect,\n    minZoom,\n    maxZoom,\n    nodeExtent,\n    onNodesChange,\n    onEdgesChange,\n    elementsSelectable,\n    connectionMode,\n    snapGrid,\n    snapToGrid,\n    translateExtent,\n    connectOnClick,\n    defaultEdgeOptions,\n    fitView,\n    fitViewOptions,\n    onNodesDelete,\n    onEdgesDelete,\n    onNodeDrag,\n    onNodeDragStart,\n    onNodeDragStop,\n    onSelectionDrag,\n    onSelectionDragStart,\n    onSelectionDragStop,\n    noPanClassName,\n    nodeOrigin,\n    rfId,\n    autoPanOnConnect,\n    autoPanOnNodeDrag,\n    onError,\n    connectionRadius,\n    isValidConnection\n  } = _ref35;\n  const {\n    setNodes,\n    setEdges,\n    setDefaultNodesAndEdges,\n    setMinZoom,\n    setMaxZoom,\n    setTranslateExtent,\n    setNodeExtent,\n    reset\n  } = useStore(selector$d, shallow);\n  const store = useStoreApi();\n  useEffect(() => {\n    const edgesWithDefaults = defaultEdges?.map(e => ({\n      ...e,\n      ...defaultEdgeOptions\n    }));\n    setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n    return () => {\n      reset();\n    };\n  }, []);\n  useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n  useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n  useDirectStoreUpdater('onConnect', onConnect, store.setState);\n  useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n  useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n  useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n  useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n  useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n  useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n  useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n  useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n  useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n  useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n  useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n  useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n  useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n  useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n  useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n  useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n  useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n  useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n  useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n  useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n  useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n  useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n  useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n  useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n  useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n  useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n  useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n  useDirectStoreUpdater('rfId', rfId, store.setState);\n  useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n  useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n  useDirectStoreUpdater('onError', onError, store.setState);\n  useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n  useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n  useStoreUpdater(nodes, setNodes);\n  useStoreUpdater(edges, setEdges);\n  useStoreUpdater(minZoom, setMinZoom);\n  useStoreUpdater(maxZoom, setMaxZoom);\n  useStoreUpdater(translateExtent, setTranslateExtent);\n  useStoreUpdater(nodeExtent, setNodeExtent);\n  return null;\n};\nconst style = {\n  display: 'none'\n};\nconst ariaLiveStyle = {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  border: 0,\n  padding: 0,\n  overflow: 'hidden',\n  clip: 'rect(0px, 0px, 0px, 0px)',\n  clipPath: 'inset(100%)'\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = s => s.ariaLiveMessage;\nfunction AriaLiveMessage(_ref36) {\n  let {\n    rfId\n  } = _ref36;\n  const ariaLiveMessage = useStore(selector$c);\n  return jsx(\"div\", {\n    id: `${ARIA_LIVE_MESSAGE}-${rfId}`,\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    style: ariaLiveStyle,\n    children: ariaLiveMessage\n  });\n}\nfunction A11yDescriptions(_ref37) {\n  let {\n    rfId,\n    disableKeyboardA11y\n  } = _ref37;\n  return jsxs(Fragment, {\n    children: [jsxs(\"div\", {\n      id: `${ARIA_NODE_DESC_KEY}-${rfId}`,\n      style: style,\n      children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' ']\n    }), jsx(\"div\", {\n      id: `${ARIA_EDGE_DESC_KEY}-${rfId}`,\n      style: style,\n      children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\"\n    }), !disableKeyboardA11y && jsx(AriaLiveMessage, {\n      rfId: rfId\n    })]\n  });\n}\nconst shiftX = (x, shift, position) => {\n  if (position === Position.Left) return x - shift;\n  if (position === Position.Right) return x + shift;\n  return x;\n};\nconst shiftY = (y, shift, position) => {\n  if (position === Position.Top) return y - shift;\n  if (position === Position.Bottom) return y + shift;\n  return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = _ref38 => {\n  let {\n    position,\n    centerX,\n    centerY,\n    radius = 10,\n    onMouseDown,\n    onMouseEnter,\n    onMouseOut,\n    type\n  } = _ref38;\n  return jsx(\"circle\", {\n    onMouseDown: onMouseDown,\n    onMouseEnter: onMouseEnter,\n    onMouseOut: onMouseOut,\n    className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]),\n    cx: shiftX(centerX, radius, position),\n    cy: shiftY(centerY, radius, position),\n    r: radius,\n    stroke: \"transparent\",\n    fill: \"transparent\"\n  });\n};\nconst alwaysValidConnection = () => true;\nvar wrapEdge = EdgeComponent => {\n  const EdgeWrapper = _ref39 => {\n    let {\n      id,\n      className,\n      type,\n      data,\n      onClick,\n      onEdgeDoubleClick,\n      selected,\n      animated,\n      label,\n      labelStyle,\n      labelShowBg,\n      labelBgStyle,\n      labelBgPadding,\n      labelBgBorderRadius,\n      style,\n      source,\n      target,\n      sourceX,\n      sourceY,\n      targetX,\n      targetY,\n      sourcePosition,\n      targetPosition,\n      elementsSelectable,\n      hidden,\n      sourceHandleId,\n      targetHandleId,\n      onContextMenu,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      edgeUpdaterRadius,\n      onEdgeUpdate,\n      onEdgeUpdateStart,\n      onEdgeUpdateEnd,\n      markerEnd,\n      markerStart,\n      rfId,\n      ariaLabel,\n      isFocusable,\n      pathOptions,\n      interactionWidth\n    } = _ref39;\n    const edgeRef = useRef(null);\n    const [updateHover, setUpdateHover] = useState(false);\n    const [updating, setUpdating] = useState(false);\n    const store = useStoreApi();\n    const markerStartUrl = useMemo(() => `url(#${getMarkerId(markerStart, rfId)})`, [markerStart, rfId]);\n    const markerEndUrl = useMemo(() => `url(#${getMarkerId(markerEnd, rfId)})`, [markerEnd, rfId]);\n    if (hidden) {\n      return null;\n    }\n    const onEdgeClick = event => {\n      const {\n        edges,\n        addSelectedEdges\n      } = store.getState();\n      if (elementsSelectable) {\n        store.setState({\n          nodesSelectionActive: false\n        });\n        addSelectedEdges([id]);\n      }\n      if (onClick) {\n        const edge = edges.find(e => e.id === id);\n        onClick(event, edge);\n      }\n    };\n    const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n    const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n    const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n    const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n    const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n    const handleEdgeUpdater = (event, isSourceHandle) => {\n      // avoid triggering edge updater if mouse btn is not left\n      if (event.button !== 0) {\n        return;\n      }\n      const {\n        edges,\n        isValidConnection: isValidConnectionStore\n      } = store.getState();\n      const nodeId = isSourceHandle ? target : source;\n      const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n      const handleType = isSourceHandle ? 'target' : 'source';\n      const isValidConnection = isValidConnectionStore || alwaysValidConnection;\n      const isTarget = isSourceHandle;\n      const edge = edges.find(e => e.id === id);\n      setUpdating(true);\n      onEdgeUpdateStart?.(event, edge, handleType);\n      const _onEdgeUpdateEnd = evt => {\n        setUpdating(false);\n        onEdgeUpdateEnd?.(evt, edge, handleType);\n      };\n      const onConnectEdge = connection => onEdgeUpdate?.(edge, connection);\n      handlePointerDown({\n        event,\n        handleId,\n        nodeId,\n        onConnect: onConnectEdge,\n        isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection,\n        edgeUpdaterType: handleType,\n        onEdgeUpdateEnd: _onEdgeUpdateEnd\n      });\n    };\n    const onEdgeUpdaterSourceMouseDown = event => handleEdgeUpdater(event, true);\n    const onEdgeUpdaterTargetMouseDown = event => handleEdgeUpdater(event, false);\n    const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n    const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n    const inactive = !elementsSelectable && !onClick;\n    const handleEdgeUpdate = typeof onEdgeUpdate !== 'undefined';\n    const onKeyDown = event => {\n      if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n        const {\n          unselectNodesAndEdges,\n          addSelectedEdges,\n          edges\n        } = store.getState();\n        const unselect = event.key === 'Escape';\n        if (unselect) {\n          edgeRef.current?.blur();\n          unselectNodesAndEdges({\n            edges: [edges.find(e => e.id === id)]\n          });\n        } else {\n          addSelectedEdges([id]);\n        }\n      }\n    };\n    return jsxs(\"g\", {\n      className: cc(['react-flow__edge', `react-flow__edge-${type}`, className, {\n        selected,\n        animated,\n        inactive,\n        updating: updateHover\n      }]),\n      onClick: onEdgeClick,\n      onDoubleClick: onEdgeDoubleClickHandler,\n      onContextMenu: onEdgeContextMenu,\n      onMouseEnter: onEdgeMouseEnter,\n      onMouseMove: onEdgeMouseMove,\n      onMouseLeave: onEdgeMouseLeave,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : undefined,\n      \"data-testid\": `rf__edge-${id}`,\n      \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`,\n      \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined,\n      ref: edgeRef,\n      children: [!updating && jsx(EdgeComponent, {\n        id: id,\n        source: source,\n        target: target,\n        selected: selected,\n        animated: animated,\n        label: label,\n        labelStyle: labelStyle,\n        labelShowBg: labelShowBg,\n        labelBgStyle: labelBgStyle,\n        labelBgPadding: labelBgPadding,\n        labelBgBorderRadius: labelBgBorderRadius,\n        data: data,\n        style: style,\n        sourceX: sourceX,\n        sourceY: sourceY,\n        targetX: targetX,\n        targetY: targetY,\n        sourcePosition: sourcePosition,\n        targetPosition: targetPosition,\n        sourceHandleId: sourceHandleId,\n        targetHandleId: targetHandleId,\n        markerStart: markerStartUrl,\n        markerEnd: markerEndUrl,\n        pathOptions: pathOptions,\n        interactionWidth: interactionWidth\n      }), handleEdgeUpdate && jsxs(Fragment, {\n        children: [jsx(EdgeAnchor, {\n          position: sourcePosition,\n          centerX: sourceX,\n          centerY: sourceY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterSourceMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"source\"\n        }), jsx(EdgeAnchor, {\n          position: targetPosition,\n          centerX: targetX,\n          centerY: targetY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterTargetMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"target\"\n        })]\n      })]\n    });\n  };\n  EdgeWrapper.displayName = 'EdgeWrapper';\n  return memo(EdgeWrapper);\n};\nfunction createEdgeTypes(edgeTypes) {\n  const standardTypes = {\n    default: wrapEdge(edgeTypes.default || BezierEdge),\n    straight: wrapEdge(edgeTypes.bezier || StraightEdge),\n    step: wrapEdge(edgeTypes.step || StepEdge),\n    smoothstep: wrapEdge(edgeTypes.step || SmoothStepEdge),\n    simplebezier: wrapEdge(edgeTypes.simplebezier || SimpleBezierEdge)\n  };\n  const wrappedTypes = {};\n  const specialTypes = Object.keys(edgeTypes).filter(k => !['default', 'bezier'].includes(k)).reduce((res, key) => {\n    res[key] = wrapEdge(edgeTypes[key] || BezierEdge);\n    return res;\n  }, wrappedTypes);\n  return {\n    ...standardTypes,\n    ...specialTypes\n  };\n}\nfunction getHandlePosition(position, nodeRect) {\n  let handle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  const x = (handle?.x || 0) + nodeRect.x;\n  const y = (handle?.y || 0) + nodeRect.y;\n  const width = handle?.width || nodeRect.width;\n  const height = handle?.height || nodeRect.height;\n  switch (position) {\n    case Position.Top:\n      return {\n        x: x + width / 2,\n        y\n      };\n    case Position.Right:\n      return {\n        x: x + width,\n        y: y + height / 2\n      };\n    case Position.Bottom:\n      return {\n        x: x + width / 2,\n        y: y + height\n      };\n    case Position.Left:\n      return {\n        x,\n        y: y + height / 2\n      };\n  }\n}\nfunction getHandle(bounds, handleId) {\n  if (!bounds) {\n    return null;\n  }\n  if (bounds.length === 1 || !handleId) {\n    return bounds[0];\n  } else if (handleId) {\n    return bounds.find(d => d.id === handleId) || null;\n  }\n  return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n  const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n  const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n  return {\n    sourceX: sourceHandlePos.x,\n    sourceY: sourceHandlePos.y,\n    targetX: targetHandlePos.x,\n    targetY: targetHandlePos.y\n  };\n};\nfunction isEdgeVisible(_ref40) {\n  let {\n    sourcePos,\n    targetPos,\n    sourceWidth,\n    sourceHeight,\n    targetWidth,\n    targetHeight,\n    width,\n    height,\n    transform\n  } = _ref40;\n  const edgeBox = {\n    x: Math.min(sourcePos.x, targetPos.x),\n    y: Math.min(sourcePos.y, targetPos.y),\n    x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n    y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight)\n  };\n  if (edgeBox.x === edgeBox.x2) {\n    edgeBox.x2 += 1;\n  }\n  if (edgeBox.y === edgeBox.y2) {\n    edgeBox.y2 += 1;\n  }\n  const viewBox = rectToBox({\n    x: (0 - transform[0]) / transform[2],\n    y: (0 - transform[1]) / transform[2],\n    width: width / transform[2],\n    height: height / transform[2]\n  });\n  const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n  const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n  const overlappingArea = Math.ceil(xOverlap * yOverlap);\n  return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n  const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n  const isValid = handleBounds && node?.width && node?.height && typeof node?.positionAbsolute?.x !== 'undefined' && typeof node?.positionAbsolute?.y !== 'undefined';\n  return [{\n    x: node?.positionAbsolute?.x || 0,\n    y: node?.positionAbsolute?.y || 0,\n    width: node?.width || 0,\n    height: node?.height || 0\n  }, handleBounds, !!isValid];\n}\nfunction isParentSelected(node, nodeInternals) {\n  if (!node.parentNode) {\n    return false;\n  }\n  const parentNode = nodeInternals.get(node.parentNode);\n  if (!parentNode) {\n    return false;\n  }\n  if (parentNode.selected) {\n    return true;\n  }\n  return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n  let current = target;\n  do {\n    if (current?.matches(selector)) return true;\n    if (current === nodeRef.current) return false;\n    current = current.parentElement;\n  } while (current);\n  return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n  return Array.from(nodeInternals.values()).filter(n => (n.selected || n.id === nodeId) && (!n.parentNode || !isParentSelected(n, nodeInternals)) && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined')).map(n => ({\n    id: n.id,\n    position: n.position || {\n      x: 0,\n      y: 0\n    },\n    positionAbsolute: n.positionAbsolute || {\n      x: 0,\n      y: 0\n    },\n    distance: {\n      x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n      y: mousePos.y - (n.positionAbsolute?.y ?? 0)\n    },\n    delta: {\n      x: 0,\n      y: 0\n    },\n    extent: n.extent,\n    parentNode: n.parentNode,\n    width: n.width,\n    height: n.height\n  }));\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent) {\n  let nodeOrigin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [0, 0];\n  let onError = arguments.length > 5 ? arguments[5] : undefined;\n  let currentExtent = node.extent || nodeExtent;\n  if (node.extent === 'parent') {\n    if (node.parentNode && node.width && node.height) {\n      const parent = nodeInternals.get(node.parentNode);\n      const {\n        x: parentX,\n        y: parentY\n      } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n      currentExtent = parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height) ? [[parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]], [parentX + parent.width - node.width + node.width * nodeOrigin[0], parentY + parent.height - node.height + node.height * nodeOrigin[1]]] : currentExtent;\n    } else {\n      onError?.('005', errorMessages['005']());\n      currentExtent = nodeExtent;\n    }\n  } else if (node.extent && node.parentNode) {\n    const parent = nodeInternals.get(node.parentNode);\n    const {\n      x: parentX,\n      y: parentY\n    } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n    currentExtent = [[node.extent[0][0] + parentX, node.extent[0][1] + parentY], [node.extent[1][0] + parentX, node.extent[1][1] + parentY]];\n  }\n  let parentPosition = {\n    x: 0,\n    y: 0\n  };\n  if (node.parentNode) {\n    const parentNode = nodeInternals.get(node.parentNode);\n    parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n  }\n  const positionAbsolute = currentExtent ? clampPosition(nextPosition, currentExtent) : nextPosition;\n  return {\n    position: {\n      x: positionAbsolute.x - parentPosition.x,\n      y: positionAbsolute.y - parentPosition.y\n    },\n    positionAbsolute\n  };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams(_ref41) {\n  let {\n    nodeId,\n    dragItems,\n    nodeInternals\n  } = _ref41;\n  const extentedDragItems = dragItems.map(n => {\n    const node = nodeInternals.get(n.id);\n    return {\n      ...node,\n      position: n.position,\n      positionAbsolute: n.positionAbsolute\n    };\n  });\n  return [nodeId ? extentedDragItems.find(n => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n  const handles = nodeElement.querySelectorAll(selector);\n  if (!handles || !handles.length) {\n    return null;\n  }\n  const handlesArray = Array.from(handles);\n  const nodeBounds = nodeElement.getBoundingClientRect();\n  const nodeOffset = {\n    x: nodeBounds.width * nodeOrigin[0],\n    y: nodeBounds.height * nodeOrigin[1]\n  };\n  return handlesArray.map(handle => {\n    const handleBounds = handle.getBoundingClientRect();\n    return {\n      id: handle.getAttribute('data-handleid'),\n      position: handle.getAttribute('data-handlepos'),\n      x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n      y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n      ...getDimensions(handle)\n    };\n  });\n};\nfunction getMouseHandler(id, getState, handler) {\n  return handler === undefined ? handler : event => {\n    const node = getState().nodeInternals.get(id);\n    handler(event, {\n      ...node\n    });\n  };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick(_ref42) {\n  let {\n    id,\n    store,\n    unselect = false,\n    nodeRef\n  } = _ref42;\n  const {\n    addSelectedNodes,\n    unselectNodesAndEdges,\n    multiSelectionActive,\n    nodeInternals\n  } = store.getState();\n  const node = nodeInternals.get(id);\n  store.setState({\n    nodesSelectionActive: false\n  });\n  if (!node.selected) {\n    addSelectedNodes([id]);\n  } else if (unselect || node.selected && multiSelectionActive) {\n    unselectNodesAndEdges({\n      nodes: [node]\n    });\n    requestAnimationFrame(() => nodeRef?.current?.blur());\n  }\n}\nfunction useGetPointerPosition() {\n  const store = useStoreApi();\n  // returns the pointer position projected to the RF coordinate system\n  const getPointerPosition = useCallback(_ref43 => {\n    let {\n      sourceEvent\n    } = _ref43;\n    const {\n      transform,\n      snapGrid,\n      snapToGrid\n    } = store.getState();\n    const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n    const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n    const pointerPos = {\n      x: (x - transform[0]) / transform[2],\n      y: (y - transform[1]) / transform[2]\n    };\n    // we need the snapped position in order to be able to skip unnecessary drag events\n    return {\n      xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n      ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n      ...pointerPos\n    };\n  }, []);\n  return getPointerPosition;\n}\nfunction wrapSelectionDragFunc(selectionFunc) {\n  return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag(_ref44) {\n  let {\n    nodeRef,\n    disabled = false,\n    noDragClassName,\n    handleSelector,\n    nodeId,\n    isSelectable,\n    selectNodesOnDrag\n  } = _ref44;\n  const store = useStoreApi();\n  const [dragging, setDragging] = useState(false);\n  const dragItems = useRef([]);\n  const lastPos = useRef({\n    x: null,\n    y: null\n  });\n  const autoPanId = useRef(0);\n  const containerBounds = useRef(null);\n  const mousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  const dragEvent = useRef(null);\n  const autoPanStarted = useRef(false);\n  const getPointerPosition = useGetPointerPosition();\n  useEffect(() => {\n    if (nodeRef?.current) {\n      const selection = select(nodeRef.current);\n      const updateNodes = _ref45 => {\n        let {\n          x,\n          y\n        } = _ref45;\n        const {\n          nodeInternals,\n          onNodeDrag,\n          onSelectionDrag,\n          updateNodePositions,\n          nodeExtent,\n          snapGrid,\n          snapToGrid,\n          nodeOrigin,\n          onError\n        } = store.getState();\n        lastPos.current = {\n          x,\n          y\n        };\n        let hasChange = false;\n        dragItems.current = dragItems.current.map(n => {\n          const nextPosition = {\n            x: x - n.distance.x,\n            y: y - n.distance.y\n          };\n          if (snapToGrid) {\n            nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n            nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n          }\n          const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, nodeOrigin, onError);\n          // we want to make sure that we only fire a change event when there is a changes\n          hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n          n.position = updatedPos.position;\n          n.positionAbsolute = updatedPos.positionAbsolute;\n          return n;\n        });\n        if (!hasChange) {\n          return;\n        }\n        updateNodePositions(dragItems.current, true, true);\n        setDragging(true);\n        const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n        if (onDrag && dragEvent.current) {\n          const [currentNode, nodes] = getEventHandlerParams({\n            nodeId,\n            dragItems: dragItems.current,\n            nodeInternals\n          });\n          onDrag(dragEvent.current, currentNode, nodes);\n        }\n      };\n      const autoPan = () => {\n        if (!containerBounds.current) {\n          return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n        if (xMovement !== 0 || yMovement !== 0) {\n          const {\n            transform,\n            panBy\n          } = store.getState();\n          lastPos.current.x = (lastPos.current.x ?? 0) - xMovement / transform[2];\n          lastPos.current.y = (lastPos.current.y ?? 0) - yMovement / transform[2];\n          updateNodes(lastPos.current);\n          panBy({\n            x: xMovement,\n            y: yMovement\n          });\n        }\n        autoPanId.current = requestAnimationFrame(autoPan);\n      };\n      if (disabled) {\n        selection.on('.drag', null);\n      } else {\n        const dragHandler = drag().on('start', event => {\n          const {\n            nodeInternals,\n            multiSelectionActive,\n            domNode,\n            nodesDraggable,\n            unselectNodesAndEdges,\n            onNodeDragStart,\n            onSelectionDragStart\n          } = store.getState();\n          const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n          if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n            if (!nodeInternals.get(nodeId)?.selected) {\n              // we need to reset selected nodes when selectNodesOnDrag=false\n              unselectNodesAndEdges();\n            }\n          }\n          if (nodeId && isSelectable && selectNodesOnDrag) {\n            handleNodeClick({\n              id: nodeId,\n              store,\n              nodeRef: nodeRef\n            });\n          }\n          const pointerPos = getPointerPosition(event);\n          lastPos.current = pointerPos;\n          dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n          if (onStart && dragItems.current) {\n            const [currentNode, nodes] = getEventHandlerParams({\n              nodeId,\n              dragItems: dragItems.current,\n              nodeInternals\n            });\n            onStart(event.sourceEvent, currentNode, nodes);\n          }\n          containerBounds.current = domNode?.getBoundingClientRect() || null;\n          mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n        }).on('drag', event => {\n          const pointerPos = getPointerPosition(event);\n          const {\n            autoPanOnNodeDrag\n          } = store.getState();\n          if (!autoPanStarted.current && autoPanOnNodeDrag) {\n            autoPanStarted.current = true;\n            autoPan();\n          }\n          // skip events without movement\n          if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) && dragItems.current) {\n            dragEvent.current = event.sourceEvent;\n            mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n            updateNodes(pointerPos);\n          }\n        }).on('end', event => {\n          setDragging(false);\n          autoPanStarted.current = false;\n          cancelAnimationFrame(autoPanId.current);\n          if (dragItems.current) {\n            const {\n              updateNodePositions,\n              nodeInternals,\n              onNodeDragStop,\n              onSelectionDragStop\n            } = store.getState();\n            const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n            updateNodePositions(dragItems.current, false, false);\n            if (onStop) {\n              const [currentNode, nodes] = getEventHandlerParams({\n                nodeId,\n                dragItems: dragItems.current,\n                nodeInternals\n              });\n              onStop(event.sourceEvent, currentNode, nodes);\n            }\n          }\n        }).filter(event => {\n          const target = event.target;\n          const isDraggable = !event.button && (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) && (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n          return isDraggable;\n        });\n        selection.call(dragHandler);\n        return () => {\n          selection.on('.drag', null);\n        };\n      }\n    }\n  }, [nodeRef, disabled, noDragClassName, handleSelector, isSelectable, store, nodeId, selectNodesOnDrag, getPointerPosition]);\n  return dragging;\n}\nfunction useUpdateNodePositions() {\n  const store = useStoreApi();\n  const updatePositions = useCallback(params => {\n    const {\n      nodeInternals,\n      nodeExtent,\n      updateNodePositions,\n      getNodes,\n      snapToGrid,\n      snapGrid,\n      onError,\n      nodesDraggable\n    } = store.getState();\n    const selectedNodes = getNodes().filter(n => n.selected && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined'));\n    // by default a node moves 5px on each key press, or 20px if shift is pressed\n    // if snap grid is enabled, we use that for the velocity.\n    const xVelo = snapToGrid ? snapGrid[0] : 5;\n    const yVelo = snapToGrid ? snapGrid[1] : 5;\n    const factor = params.isShiftPressed ? 4 : 1;\n    const positionDiffX = params.x * xVelo * factor;\n    const positionDiffY = params.y * yVelo * factor;\n    const nodeUpdates = selectedNodes.map(n => {\n      if (n.positionAbsolute) {\n        const nextPosition = {\n          x: n.positionAbsolute.x + positionDiffX,\n          y: n.positionAbsolute.y + positionDiffY\n        };\n        if (snapToGrid) {\n          nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n          nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n        }\n        const {\n          positionAbsolute,\n          position\n        } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n        n.position = position;\n        n.positionAbsolute = positionAbsolute;\n      }\n      return n;\n    });\n    updateNodePositions(nodeUpdates, true, false);\n  }, []);\n  return updatePositions;\n}\nconst arrowKeyDiffs = {\n  ArrowUp: {\n    x: 0,\n    y: -1\n  },\n  ArrowDown: {\n    x: 0,\n    y: 1\n  },\n  ArrowLeft: {\n    x: -1,\n    y: 0\n  },\n  ArrowRight: {\n    x: 1,\n    y: 0\n  }\n};\nvar wrapNode = NodeComponent => {\n  const NodeWrapper = _ref46 => {\n    let {\n      id,\n      type,\n      data,\n      xPos,\n      yPos,\n      xPosOrigin,\n      yPosOrigin,\n      selected,\n      onClick,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      onContextMenu,\n      onDoubleClick,\n      style,\n      className,\n      isDraggable,\n      isSelectable,\n      isConnectable,\n      isFocusable,\n      selectNodesOnDrag,\n      sourcePosition,\n      targetPosition,\n      hidden,\n      resizeObserver,\n      dragHandle,\n      zIndex,\n      isParent,\n      noDragClassName,\n      noPanClassName,\n      initialized,\n      disableKeyboardA11y,\n      ariaLabel,\n      rfId\n    } = _ref46;\n    const store = useStoreApi();\n    const nodeRef = useRef(null);\n    const prevSourcePosition = useRef(sourcePosition);\n    const prevTargetPosition = useRef(targetPosition);\n    const prevType = useRef(type);\n    const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n    const updatePositions = useUpdateNodePositions();\n    const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n    const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n    const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n    const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n    const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n    const onSelectNodeHandler = event => {\n      if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n        // this handler gets called within the drag start event when selectNodesOnDrag=true\n        handleNodeClick({\n          id,\n          store,\n          nodeRef\n        });\n      }\n      if (onClick) {\n        const node = store.getState().nodeInternals.get(id);\n        onClick(event, {\n          ...node\n        });\n      }\n    };\n    const onKeyDown = event => {\n      if (isInputDOMNode(event)) {\n        return;\n      }\n      if (elementSelectionKeys.includes(event.key) && isSelectable) {\n        const unselect = event.key === 'Escape';\n        handleNodeClick({\n          id,\n          store,\n          unselect,\n          nodeRef\n        });\n      } else if (!disableKeyboardA11y && isDraggable && selected && Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n        store.setState({\n          ariaLiveMessage: `Moved selected node ${event.key.replace('Arrow', '').toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`\n        });\n        updatePositions({\n          x: arrowKeyDiffs[event.key].x,\n          y: arrowKeyDiffs[event.key].y,\n          isShiftPressed: event.shiftKey\n        });\n      }\n    };\n    useEffect(() => {\n      if (nodeRef.current && !hidden) {\n        const currNode = nodeRef.current;\n        resizeObserver?.observe(currNode);\n        return () => resizeObserver?.unobserve(currNode);\n      }\n    }, [hidden]);\n    useEffect(() => {\n      // when the user programmatically changes the source or handle position, we re-initialize the node\n      const typeChanged = prevType.current !== type;\n      const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n      const targetPosChanged = prevTargetPosition.current !== targetPosition;\n      if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n        if (typeChanged) {\n          prevType.current = type;\n        }\n        if (sourcePosChanged) {\n          prevSourcePosition.current = sourcePosition;\n        }\n        if (targetPosChanged) {\n          prevTargetPosition.current = targetPosition;\n        }\n        store.getState().updateNodeDimensions([{\n          id,\n          nodeElement: nodeRef.current,\n          forceUpdate: true\n        }]);\n      }\n    }, [id, type, sourcePosition, targetPosition]);\n    const dragging = useDrag({\n      nodeRef,\n      disabled: hidden || !isDraggable,\n      noDragClassName,\n      handleSelector: dragHandle,\n      nodeId: id,\n      isSelectable,\n      selectNodesOnDrag\n    });\n    if (hidden) {\n      return null;\n    }\n    return jsx(\"div\", {\n      className: cc(['react-flow__node', `react-flow__node-${type}`, {\n        // this is overwritable by passing `nopan` as a class name\n        [noPanClassName]: isDraggable\n      }, className, {\n        selected,\n        selectable: isSelectable,\n        parent: isParent,\n        dragging\n      }]),\n      ref: nodeRef,\n      style: {\n        zIndex,\n        transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n        pointerEvents: hasPointerEvents ? 'all' : 'none',\n        visibility: initialized ? 'visible' : 'hidden',\n        ...style\n      },\n      \"data-id\": id,\n      \"data-testid\": `rf__node-${id}`,\n      onMouseEnter: onMouseEnterHandler,\n      onMouseMove: onMouseMoveHandler,\n      onMouseLeave: onMouseLeaveHandler,\n      onContextMenu: onContextMenuHandler,\n      onClick: onSelectNodeHandler,\n      onDoubleClick: onDoubleClickHandler,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : undefined,\n      \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`,\n      \"aria-label\": ariaLabel,\n      children: jsx(Provider, {\n        value: id,\n        children: jsx(NodeComponent, {\n          id: id,\n          data: data,\n          type: type,\n          xPos: xPos,\n          yPos: yPos,\n          selected: selected,\n          isConnectable: isConnectable,\n          sourcePosition: sourcePosition,\n          targetPosition: targetPosition,\n          dragging: dragging,\n          dragHandle: dragHandle,\n          zIndex: zIndex\n        })\n      })\n    });\n  };\n  NodeWrapper.displayName = 'NodeWrapper';\n  return memo(NodeWrapper);\n};\nfunction createNodeTypes(nodeTypes) {\n  const standardTypes = {\n    input: wrapNode(nodeTypes.input || InputNode$1),\n    default: wrapNode(nodeTypes.default || DefaultNode$1),\n    output: wrapNode(nodeTypes.output || OutputNode$1),\n    group: wrapNode(nodeTypes.group || GroupNode)\n  };\n  const wrappedTypes = {};\n  const specialTypes = Object.keys(nodeTypes).filter(k => !['input', 'default', 'output', 'group'].includes(k)).reduce((res, key) => {\n    res[key] = wrapNode(nodeTypes[key] || DefaultNode$1);\n    return res;\n  }, wrappedTypes);\n  return {\n    ...standardTypes,\n    ...specialTypes\n  };\n}\nconst getPositionWithOrigin = _ref47 => {\n  let {\n    x,\n    y,\n    width,\n    height,\n    origin\n  } = _ref47;\n  if (!width || !height) {\n    return {\n      x,\n      y\n    };\n  }\n  if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n    return {\n      x,\n      y\n    };\n  }\n  return {\n    x: x - width * origin[0],\n    y: y - height * origin[1]\n  };\n};\nconst doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilites. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = function () {\n  let keyCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    target: doc\n  };\n  const [keyPressed, setKeyPressed] = useState(false);\n  // we need to remember if a modifier key is pressed in order to track it\n  const modifierPressed = useRef(false);\n  // we need to remember the pressed keys in order to support combinations\n  const pressedKeys = useRef(new Set([]));\n  // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n  // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n  // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n  // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n  // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n  // we can't find it in the list of keysToWatch.\n  const [keyCodes, keysToWatch] = useMemo(() => {\n    if (keyCode !== null) {\n      const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n      const keys = keyCodeArr.filter(kc => typeof kc === 'string').map(kc => kc.split('+'));\n      const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n      return [keys, keysFlat];\n    }\n    return [[], []];\n  }, [keyCode]);\n  useEffect(() => {\n    if (keyCode !== null) {\n      const downHandler = event => {\n        modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n        if (!modifierPressed.current && isInputDOMNode(event)) {\n          return false;\n        }\n        const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        pressedKeys.current.add(event[keyOrCode]);\n        if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n          event.preventDefault();\n          setKeyPressed(true);\n        }\n      };\n      const upHandler = event => {\n        if (!modifierPressed.current && isInputDOMNode(event)) {\n          return false;\n        }\n        const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n          setKeyPressed(false);\n          pressedKeys.current.clear();\n        } else {\n          pressedKeys.current.delete(event[keyOrCode]);\n        }\n        modifierPressed.current = false;\n      };\n      const resetHandler = () => {\n        pressedKeys.current.clear();\n        setKeyPressed(false);\n      };\n      options?.target?.addEventListener('keydown', downHandler);\n      options?.target?.addEventListener('keyup', upHandler);\n      window.addEventListener('blur', resetHandler);\n      return () => {\n        options?.target?.removeEventListener('keydown', downHandler);\n        options?.target?.removeEventListener('keyup', upHandler);\n        window.removeEventListener('blur', resetHandler);\n      };\n    }\n  }, [keyCode, setKeyPressed]);\n  return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n  return keyCodes\n  // we only want to compare same sizes of keyCode definitions\n  // and pressed keys. When the user specified 'Meta' as a key somewhere\n  // this would also be truthy without this filter when user presses 'Meta' + 'r'\n  .filter(keys => isUp || keys.length === pressedKeys.size)\n  // since we want to support multiple possibilities only one of the\n  // combinations need to be part of the pressed keys\n  .some(keys => keys.every(k => pressedKeys.has(k)));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n  return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n  if (!node.parentNode) {\n    return result;\n  }\n  const parentNode = nodeInternals.get(node.parentNode);\n  const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n  return calculateXYZPosition(parentNode, nodeInternals, {\n    x: (result.x ?? 0) + parentNodePosition.x,\n    y: (result.y ?? 0) + parentNodePosition.y,\n    z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0\n  }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n  nodeInternals.forEach(node => {\n    if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n      throw new Error(`Parent node ${node.parentNode} not found`);\n    }\n    if (node.parentNode || parentNodes?.[node.id]) {\n      const {\n        x,\n        y,\n        z\n      } = calculateXYZPosition(node, nodeInternals, {\n        ...node.position,\n        z: node[internalsSymbol]?.z ?? 0\n      }, nodeOrigin);\n      node.positionAbsolute = {\n        x,\n        y\n      };\n      node[internalsSymbol].z = z;\n      if (parentNodes?.[node.id]) {\n        node[internalsSymbol].isParent = true;\n      }\n    }\n  });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n  const nextNodeInternals = new Map();\n  const parentNodes = {};\n  const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n  nodes.forEach(node => {\n    const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n    const currInternals = nodeInternals.get(node.id);\n    const internals = {\n      width: currInternals?.width,\n      height: currInternals?.height,\n      ...node,\n      positionAbsolute: {\n        x: node.position.x,\n        y: node.position.y\n      }\n    };\n    if (node.parentNode) {\n      internals.parentNode = node.parentNode;\n      parentNodes[node.parentNode] = true;\n    }\n    Object.defineProperty(internals, internalsSymbol, {\n      enumerable: false,\n      value: {\n        handleBounds: currInternals?.[internalsSymbol]?.handleBounds,\n        z\n      }\n    });\n    nextNodeInternals.set(node.id, internals);\n  });\n  updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n  return nextNodeInternals;\n}\nfunction fitView(get) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    getNodes,\n    width,\n    height,\n    minZoom,\n    maxZoom,\n    d3Zoom,\n    d3Selection,\n    fitViewOnInitDone,\n    fitViewOnInit,\n    nodeOrigin\n  } = get();\n  const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n  const d3initialized = d3Zoom && d3Selection;\n  if (d3initialized && (isInitialFitView || !options.initial)) {\n    const nodes = getNodes().filter(n => {\n      const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n      if (options.nodes?.length) {\n        return isVisible && options.nodes.some(optionNode => optionNode.id === n.id);\n      }\n      return isVisible;\n    });\n    const nodesInitialized = nodes.every(n => n.width && n.height);\n    if (nodes.length > 0 && nodesInitialized) {\n      const bounds = getRectOfNodes(nodes, nodeOrigin);\n      const [x, y, zoom] = getTransformForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n      const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n      if (typeof options.duration === 'number' && options.duration > 0) {\n        d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n      } else {\n        d3Zoom.transform(d3Selection, nextTransform);\n      }\n      return true;\n    }\n  }\n  return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n  nodeChanges.forEach(change => {\n    const node = nodeInternals.get(change.id);\n    if (node) {\n      nodeInternals.set(node.id, {\n        ...node,\n        [internalsSymbol]: node[internalsSymbol],\n        selected: change.selected\n      });\n    }\n  });\n  return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n  return edges.map(e => {\n    const change = edgeChanges.find(change => change.id === e.id);\n    if (change) {\n      e.selected = change.selected;\n    }\n    return e;\n  });\n}\nfunction updateNodesAndEdgesSelections(_ref48) {\n  let {\n    changedNodes,\n    changedEdges,\n    get,\n    set\n  } = _ref48;\n  const {\n    nodeInternals,\n    edges,\n    onNodesChange,\n    onEdgesChange,\n    hasDefaultNodes,\n    hasDefaultEdges\n  } = get();\n  if (changedNodes?.length) {\n    if (hasDefaultNodes) {\n      set({\n        nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals)\n      });\n    }\n    onNodesChange?.(changedNodes);\n  }\n  if (changedEdges?.length) {\n    if (hasDefaultEdges) {\n      set({\n        edges: handleControlledEdgeSelectionChange(changedEdges, edges)\n      });\n    }\n    onEdgesChange?.(changedEdges);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst initialViewportHelper = {\n  zoomIn: noop,\n  zoomOut: noop,\n  zoomTo: noop,\n  getZoom: () => 1,\n  setViewport: noop,\n  getViewport: () => ({\n    x: 0,\n    y: 0,\n    zoom: 1\n  }),\n  fitView: () => false,\n  setCenter: noop,\n  fitBounds: noop,\n  project: position => position,\n  viewportInitialized: false\n};\nconst selector$b = s => ({\n  d3Zoom: s.d3Zoom,\n  d3Selection: s.d3Selection\n});\nconst useViewportHelper = () => {\n  const store = useStoreApi();\n  const {\n    d3Zoom,\n    d3Selection\n  } = useStore(selector$b, shallow);\n  const viewportHelperFunctions = useMemo(() => {\n    if (d3Selection && d3Zoom) {\n      return {\n        zoomIn: options => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n        zoomOut: options => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n        zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n        getZoom: () => store.getState().transform[2],\n        setViewport: (transform, options) => {\n          const [x, y, zoom] = store.getState().transform;\n          const nextTransform = zoomIdentity.translate(transform.x ?? x, transform.y ?? y).scale(transform.zoom ?? zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n        },\n        getViewport: () => {\n          const [x, y, zoom] = store.getState().transform;\n          return {\n            x,\n            y,\n            zoom\n          };\n        },\n        fitView: options => fitView(store.getState, options),\n        setCenter: (x, y, options) => {\n          const {\n            width,\n            height,\n            maxZoom\n          } = store.getState();\n          const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n          const centerX = width / 2 - x * nextZoom;\n          const centerY = height / 2 - y * nextZoom;\n          const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n        },\n        fitBounds: (bounds, options) => {\n          const {\n            width,\n            height,\n            minZoom,\n            maxZoom\n          } = store.getState();\n          const [x, y, zoom] = getTransformForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n          const transform = zoomIdentity.translate(x, y).scale(zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n        },\n        project: position => {\n          const {\n            transform,\n            snapToGrid,\n            snapGrid\n          } = store.getState();\n          return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n        },\n        viewportInitialized: true\n      };\n    }\n    return initialViewportHelper;\n  }, [d3Zoom, d3Selection]);\n  return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n  const viewportHelper = useViewportHelper();\n  const store = useStoreApi();\n  const getNodes = useCallback(() => {\n    return store.getState().getNodes().map(n => ({\n      ...n\n    }));\n  }, []);\n  const getNode = useCallback(id => {\n    return store.getState().nodeInternals.get(id);\n  }, []);\n  const getEdges = useCallback(() => {\n    const {\n      edges = []\n    } = store.getState();\n    return edges.map(e => ({\n      ...e\n    }));\n  }, []);\n  const getEdge = useCallback(id => {\n    const {\n      edges = []\n    } = store.getState();\n    return edges.find(e => e.id === id);\n  }, []);\n  const setNodes = useCallback(payload => {\n    const {\n      getNodes,\n      setNodes,\n      hasDefaultNodes,\n      onNodesChange\n    } = store.getState();\n    const nodes = getNodes();\n    const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n    if (hasDefaultNodes) {\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      const changes = nextNodes.length === 0 ? nodes.map(node => ({\n        type: 'remove',\n        id: node.id\n      })) : nextNodes.map(node => ({\n        item: node,\n        type: 'reset'\n      }));\n      onNodesChange(changes);\n    }\n  }, []);\n  const setEdges = useCallback(payload => {\n    const {\n      edges = [],\n      setEdges,\n      hasDefaultEdges,\n      onEdgesChange\n    } = store.getState();\n    const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n    if (hasDefaultEdges) {\n      setEdges(nextEdges);\n    } else if (onEdgesChange) {\n      const changes = nextEdges.length === 0 ? edges.map(edge => ({\n        type: 'remove',\n        id: edge.id\n      })) : nextEdges.map(edge => ({\n        item: edge,\n        type: 'reset'\n      }));\n      onEdgesChange(changes);\n    }\n  }, []);\n  const addNodes = useCallback(payload => {\n    const nodes = Array.isArray(payload) ? payload : [payload];\n    const {\n      getNodes,\n      setNodes,\n      hasDefaultNodes,\n      onNodesChange\n    } = store.getState();\n    if (hasDefaultNodes) {\n      const currentNodes = getNodes();\n      const nextNodes = [...currentNodes, ...nodes];\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      const changes = nodes.map(node => ({\n        item: node,\n        type: 'add'\n      }));\n      onNodesChange(changes);\n    }\n  }, []);\n  const addEdges = useCallback(payload => {\n    const nextEdges = Array.isArray(payload) ? payload : [payload];\n    const {\n      edges = [],\n      setEdges,\n      hasDefaultEdges,\n      onEdgesChange\n    } = store.getState();\n    if (hasDefaultEdges) {\n      setEdges([...edges, ...nextEdges]);\n    } else if (onEdgesChange) {\n      const changes = nextEdges.map(edge => ({\n        item: edge,\n        type: 'add'\n      }));\n      onEdgesChange(changes);\n    }\n  }, []);\n  const toObject = useCallback(() => {\n    const {\n      getNodes,\n      edges = [],\n      transform\n    } = store.getState();\n    const [x, y, zoom] = transform;\n    return {\n      nodes: getNodes().map(n => ({\n        ...n\n      })),\n      edges: edges.map(e => ({\n        ...e\n      })),\n      viewport: {\n        x,\n        y,\n        zoom\n      }\n    };\n  }, []);\n  const deleteElements = useCallback(_ref49 => {\n    let {\n      nodes: nodesDeleted,\n      edges: edgesDeleted\n    } = _ref49;\n    const {\n      nodeInternals,\n      getNodes,\n      edges,\n      hasDefaultNodes,\n      hasDefaultEdges,\n      onNodesDelete,\n      onEdgesDelete,\n      onNodesChange,\n      onEdgesChange\n    } = store.getState();\n    const nodeIds = (nodesDeleted || []).map(node => node.id);\n    const edgeIds = (edgesDeleted || []).map(edge => edge.id);\n    const nodesToRemove = getNodes().reduce((res, node) => {\n      const parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find(n => n.id === node.parentNode);\n      const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n      if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n        res.push(node);\n      }\n      return res;\n    }, []);\n    const deletableEdges = edges.filter(e => typeof e.deletable === 'boolean' ? e.deletable : true);\n    const initialHitEdges = deletableEdges.filter(e => edgeIds.includes(e.id));\n    if (nodesToRemove || initialHitEdges) {\n      const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n      const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n      const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n        if (!res.includes(edge.id)) {\n          res.push(edge.id);\n        }\n        return res;\n      }, []);\n      if (hasDefaultEdges || hasDefaultNodes) {\n        if (hasDefaultEdges) {\n          store.setState({\n            edges: edges.filter(e => !edgeIdsToRemove.includes(e.id))\n          });\n        }\n        if (hasDefaultNodes) {\n          nodesToRemove.forEach(node => {\n            nodeInternals.delete(node.id);\n          });\n          store.setState({\n            nodeInternals: new Map(nodeInternals)\n          });\n        }\n      }\n      if (edgeIdsToRemove.length > 0) {\n        onEdgesDelete?.(edgesToRemove);\n        if (onEdgesChange) {\n          onEdgesChange(edgeIdsToRemove.map(id => ({\n            id,\n            type: 'remove'\n          })));\n        }\n      }\n      if (nodesToRemove.length > 0) {\n        onNodesDelete?.(nodesToRemove);\n        if (onNodesChange) {\n          const nodeChanges = nodesToRemove.map(n => ({\n            id: n.id,\n            type: 'remove'\n          }));\n          onNodesChange(nodeChanges);\n        }\n      }\n    }\n  }, []);\n  const getNodeRect = useCallback(nodeOrRect => {\n    const isRect = isRectObject(nodeOrRect);\n    const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n    const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n    return [nodeRect, node, isRect];\n  }, []);\n  const getIntersectingNodes = useCallback(function (nodeOrRect) {\n    let partially = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let nodes = arguments.length > 2 ? arguments[2] : undefined;\n    const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n    if (!nodeRect) {\n      return [];\n    }\n    return (nodes || store.getState().getNodes()).filter(n => {\n      if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n        return false;\n      }\n      const currNodeRect = nodeToRect(n);\n      const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n      const partiallyVisible = partially && overlappingArea > 0;\n      return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n    });\n  }, []);\n  const isNodeIntersecting = useCallback(function (nodeOrRect, area) {\n    let partially = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const [nodeRect] = getNodeRect(nodeOrRect);\n    if (!nodeRect) {\n      return false;\n    }\n    const overlappingArea = getOverlappingArea(nodeRect, area);\n    const partiallyVisible = partially && overlappingArea > 0;\n    return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n  }, []);\n  return useMemo(() => {\n    return {\n      ...viewportHelper,\n      getNodes,\n      getNode,\n      getEdges,\n      getEdge,\n      setNodes,\n      setEdges,\n      addNodes,\n      addEdges,\n      toObject,\n      deleteElements,\n      getIntersectingNodes,\n      isNodeIntersecting\n    };\n  }, [viewportHelper, getNodes, getNode, getEdges, getEdge, setNodes, setEdges, addNodes, addEdges, toObject, deleteElements, getIntersectingNodes, isNodeIntersecting]);\n}\nvar useGlobalKeyHandler = _ref50 => {\n  let {\n    deleteKeyCode,\n    multiSelectionKeyCode\n  } = _ref50;\n  const store = useStoreApi();\n  const {\n    deleteElements\n  } = useReactFlow();\n  const deleteKeyPressed = useKeyPress(deleteKeyCode);\n  const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n  useEffect(() => {\n    if (deleteKeyPressed) {\n      const {\n        edges,\n        getNodes\n      } = store.getState();\n      const selectedNodes = getNodes().filter(node => node.selected);\n      const selectedEdges = edges.filter(edge => edge.selected);\n      deleteElements({\n        nodes: selectedNodes,\n        edges: selectedEdges\n      });\n      store.setState({\n        nodesSelectionActive: false\n      });\n    }\n  }, [deleteKeyPressed]);\n  useEffect(() => {\n    store.setState({\n      multiSelectionActive: multiSelectionKeyPressed\n    });\n  }, [multiSelectionKeyPressed]);\n};\nfunction useResizeHandler(rendererNode) {\n  const store = useStoreApi();\n  useEffect(() => {\n    let resizeObserver;\n    const updateDimensions = () => {\n      if (!rendererNode.current) {\n        return;\n      }\n      const size = getDimensions(rendererNode.current);\n      if (size.height === 0 || size.width === 0) {\n        store.getState().onError?.('004', errorMessages['004']());\n      }\n      store.setState({\n        width: size.width || 500,\n        height: size.height || 500\n      });\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    if (rendererNode.current) {\n      resizeObserver = new ResizeObserver(() => updateDimensions());\n      resizeObserver.observe(rendererNode.current);\n    }\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      if (resizeObserver && rendererNode.current) {\n        resizeObserver.unobserve(rendererNode.current);\n      }\n    };\n  }, []);\n}\nconst containerStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0\n};\nconst viewChanged = (prevViewport, eventViewport) => prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\nconst eventToFlowTransform = eventViewport => ({\n  x: eventViewport.x,\n  y: eventViewport.y,\n  zoom: eventViewport.k\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst selector$a = s => ({\n  d3Zoom: s.d3Zoom,\n  d3Selection: s.d3Selection,\n  d3ZoomHandler: s.d3ZoomHandler,\n  userSelectionActive: s.userSelectionActive\n});\nconst ZoomPane = _ref51 => {\n  let {\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    onPaneContextMenu,\n    zoomOnScroll = true,\n    zoomOnPinch = true,\n    panOnScroll = false,\n    panOnScrollSpeed = 0.5,\n    panOnScrollMode = PanOnScrollMode.Free,\n    zoomOnDoubleClick = true,\n    elementsSelectable,\n    panOnDrag = true,\n    defaultViewport,\n    translateExtent,\n    minZoom,\n    maxZoom,\n    zoomActivationKeyCode,\n    preventScrolling = true,\n    children,\n    noWheelClassName,\n    noPanClassName\n  } = _ref51;\n  const timerId = useRef();\n  const store = useStoreApi();\n  const isZoomingOrPanning = useRef(false);\n  const zoomedWithRightMouseButton = useRef(false);\n  const zoomPane = useRef(null);\n  const prevTransform = useRef({\n    x: 0,\n    y: 0,\n    zoom: 0\n  });\n  const {\n    d3Zoom,\n    d3Selection,\n    d3ZoomHandler,\n    userSelectionActive\n  } = useStore(selector$a, shallow);\n  const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n  const mouseButton = useRef(0);\n  useResizeHandler(zoomPane);\n  useEffect(() => {\n    if (zoomPane.current) {\n      const bbox = zoomPane.current.getBoundingClientRect();\n      const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n      const selection = select(zoomPane.current).call(d3ZoomInstance);\n      const updatedTransform = zoomIdentity.translate(defaultViewport.x, defaultViewport.y).scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n      const extent = [[0, 0], [bbox.width, bbox.height]];\n      const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n      d3ZoomInstance.transform(selection, constrainedTransform);\n      store.setState({\n        d3Zoom: d3ZoomInstance,\n        d3Selection: selection,\n        d3ZoomHandler: selection.on('wheel.zoom'),\n        // we need to pass transform because zoom handler is not registered when we set the initial transform\n        transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n        domNode: zoomPane.current.closest('.react-flow')\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (d3Selection && d3Zoom) {\n      if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n        d3Selection.on('wheel.zoom', event => {\n          if (isWrappedWithClass(event, noWheelClassName)) {\n            return false;\n          }\n          event.preventDefault();\n          event.stopImmediatePropagation();\n          const currentZoom = d3Selection.property('__zoom').k || 1;\n          if (event.ctrlKey && zoomOnPinch) {\n            const point = pointer(event);\n            // taken from https://github.com/d3/d3-zoom/blob/master/src/zoom.js\n            const pinchDelta = -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * 10;\n            const zoom = currentZoom * Math.pow(2, pinchDelta);\n            d3Zoom.scaleTo(d3Selection, zoom, point);\n            return;\n          }\n          // increase scroll speed in firefox\n          // firefox: deltaMode === 1; chrome: deltaMode === 0\n          const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n          const deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n          const deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n          d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed);\n        });\n      } else if (typeof d3ZoomHandler !== 'undefined') {\n        d3Selection.on('wheel.zoom', function (event, d) {\n          if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n            return null;\n          }\n          event.preventDefault();\n          d3ZoomHandler.call(this, event, d);\n        });\n      }\n    }\n  }, [userSelectionActive, panOnScroll, panOnScrollMode, d3Selection, d3Zoom, d3ZoomHandler, zoomActivationKeyPressed, zoomOnPinch, preventScrolling, noWheelClassName]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.on('start', event => {\n        if (!event.sourceEvent) {\n          return null;\n        }\n        // we need to remember it here, because it's always 0 in the \"zoom\" event\n        mouseButton.current = event.sourceEvent.button;\n        const {\n          onViewportChangeStart\n        } = store.getState();\n        isZoomingOrPanning.current = true;\n        if (event.sourceEvent?.type === 'mousedown') {\n          store.setState({\n            paneDragging: true\n          });\n        }\n        if (onMoveStart || onViewportChangeStart) {\n          const flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          onViewportChangeStart?.(flowTransform);\n          onMoveStart?.(event.sourceEvent, flowTransform);\n        }\n      });\n    }\n  }, [d3Zoom, onMoveStart]);\n  useEffect(() => {\n    if (d3Zoom) {\n      if (userSelectionActive && !isZoomingOrPanning.current) {\n        d3Zoom.on('zoom', null);\n      } else if (!userSelectionActive) {\n        d3Zoom.on('zoom', event => {\n          const {\n            onViewportChange\n          } = store.getState();\n          store.setState({\n            transform: [event.transform.x, event.transform.y, event.transform.k]\n          });\n          zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0));\n          if (onMove || onViewportChange) {\n            const flowTransform = eventToFlowTransform(event.transform);\n            onViewportChange?.(flowTransform);\n            onMove?.(event.sourceEvent, flowTransform);\n          }\n        });\n      }\n    }\n  }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.on('end', event => {\n        if (!event.sourceEvent) {\n          return null;\n        }\n        const {\n          onViewportChangeEnd\n        } = store.getState();\n        isZoomingOrPanning.current = false;\n        store.setState({\n          paneDragging: false\n        });\n        if (onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0) && !zoomedWithRightMouseButton.current) {\n          onPaneContextMenu(event.sourceEvent);\n        }\n        zoomedWithRightMouseButton.current = false;\n        if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n          const flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          clearTimeout(timerId.current);\n          timerId.current = setTimeout(() => {\n            onViewportChangeEnd?.(flowTransform);\n            onMoveEnd?.(event.sourceEvent, flowTransform);\n          }, panOnScroll ? 150 : 0);\n        }\n      });\n    }\n  }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.filter(event => {\n        const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n        const pinchZoom = zoomOnPinch && event.ctrlKey;\n        if (event.button === 1 && event.type === 'mousedown' && (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n          return true;\n        }\n        // if all interactions are disabled, we prevent all zoom events\n        if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n          return false;\n        }\n        // during a selection we prevent all other interactions\n        if (userSelectionActive) {\n          return false;\n        }\n        // if zoom on double click is disabled, we prevent the double click event\n        if (!zoomOnDoubleClick && event.type === 'dblclick') {\n          return false;\n        }\n        // if the target element is inside an element with the nowheel class, we prevent zooming\n        if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n          return false;\n        }\n        // if the target element is inside an element with the nopan class, we prevent panning\n        if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n          return false;\n        }\n        if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n          return false;\n        }\n        // when there is no scroll handling enabled, we prevent all wheel events\n        if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n          return false;\n        }\n        // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n        if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // if the pane is only movable using allowed clicks\n        if (Array.isArray(panOnDrag) && !panOnDrag.includes(event.button) && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // We only allow right clicks if pan on drag is set to right click\n        const buttonAllowed = Array.isArray(panOnDrag) && panOnDrag.includes(event.button) || !event.button || event.button <= 1;\n        // default filter for d3-zoom\n        return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n      });\n    }\n  }, [userSelectionActive, d3Zoom, zoomOnScroll, zoomOnPinch, panOnScroll, zoomOnDoubleClick, panOnDrag, elementsSelectable, zoomActivationKeyPressed]);\n  return jsx(\"div\", {\n    className: \"react-flow__renderer\",\n    ref: zoomPane,\n    style: containerStyle,\n    children: children\n  });\n};\nconst selector$9 = s => ({\n  userSelectionActive: s.userSelectionActive,\n  userSelectionRect: s.userSelectionRect\n});\nfunction UserSelection() {\n  const {\n    userSelectionActive,\n    userSelectionRect\n  } = useStore(selector$9, shallow);\n  const isActive = userSelectionActive && userSelectionRect;\n  if (!isActive) {\n    return null;\n  }\n  return jsx(\"div\", {\n    className: \"react-flow__selection react-flow__container\",\n    style: {\n      width: userSelectionRect.width,\n      height: userSelectionRect.height,\n      transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`\n    }\n  });\n}\nfunction handleParentExpand(res, updateItem) {\n  const parent = res.find(e => e.id === updateItem.parentNode);\n  if (parent) {\n    const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n    const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n    if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n      parent.style = {\n        ...parent.style\n      } || {};\n      parent.style.width = parent.style.width ?? parent.width;\n      parent.style.height = parent.style.height ?? parent.height;\n      if (extendWidth > 0) {\n        parent.style.width += extendWidth;\n      }\n      if (extendHeight > 0) {\n        parent.style.height += extendHeight;\n      }\n      if (updateItem.position.x < 0) {\n        const xDiff = Math.abs(updateItem.position.x);\n        parent.position.x = parent.position.x - xDiff;\n        parent.style.width += xDiff;\n        updateItem.position.x = 0;\n      }\n      if (updateItem.position.y < 0) {\n        const yDiff = Math.abs(updateItem.position.y);\n        parent.position.y = parent.position.y - yDiff;\n        parent.style.height += yDiff;\n        updateItem.position.y = 0;\n      }\n      parent.width = parent.style.width;\n      parent.height = parent.style.height;\n    }\n  }\n}\nfunction applyChanges(changes, elements) {\n  // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n  if (changes.some(c => c.type === 'reset')) {\n    return changes.filter(c => c.type === 'reset').map(c => c.item);\n  }\n  const initElements = changes.filter(c => c.type === 'add').map(c => c.item);\n  return elements.reduce((res, item) => {\n    const currentChanges = changes.filter(c => c.id === item.id);\n    if (currentChanges.length === 0) {\n      res.push(item);\n      return res;\n    }\n    const updateItem = {\n      ...item\n    };\n    for (const currentChange of currentChanges) {\n      if (currentChange) {\n        switch (currentChange.type) {\n          case 'select':\n            {\n              updateItem.selected = currentChange.selected;\n              break;\n            }\n          case 'position':\n            {\n              if (typeof currentChange.position !== 'undefined') {\n                updateItem.position = currentChange.position;\n              }\n              if (typeof currentChange.positionAbsolute !== 'undefined') {\n                updateItem.positionAbsolute = currentChange.positionAbsolute;\n              }\n              if (typeof currentChange.dragging !== 'undefined') {\n                updateItem.dragging = currentChange.dragging;\n              }\n              if (updateItem.expandParent) {\n                handleParentExpand(res, updateItem);\n              }\n              break;\n            }\n          case 'dimensions':\n            {\n              if (typeof currentChange.dimensions !== 'undefined') {\n                updateItem.width = currentChange.dimensions.width;\n                updateItem.height = currentChange.dimensions.height;\n              }\n              if (typeof currentChange.updateStyle !== 'undefined') {\n                updateItem.style = {\n                  ...(updateItem.style || {}),\n                  ...currentChange.dimensions\n                };\n              }\n              if (typeof currentChange.resizing === 'boolean') {\n                updateItem.resizing = currentChange.resizing;\n              }\n              if (updateItem.expandParent) {\n                handleParentExpand(res, updateItem);\n              }\n              break;\n            }\n          case 'remove':\n            {\n              return res;\n            }\n        }\n      }\n    }\n    res.push(updateItem);\n    return res;\n  }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n  return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n  return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n  id,\n  type: 'select',\n  selected\n});\nfunction getSelectionChanges(items, selectedIds) {\n  return items.reduce((res, item) => {\n    const willBeSelected = selectedIds.includes(item.id);\n    if (!item.selected && willBeSelected) {\n      item.selected = true;\n      res.push(createSelectionChange(item.id, true));\n    } else if (item.selected && !willBeSelected) {\n      item.selected = false;\n      res.push(createSelectionChange(item.id, false));\n    }\n    return res;\n  }, []);\n}\nconst wrapHandler = (handler, containerRef) => {\n  return event => {\n    if (event.target !== containerRef.current) {\n      return;\n    }\n    handler?.(event);\n  };\n};\nconst selector$8 = s => ({\n  userSelectionActive: s.userSelectionActive,\n  elementsSelectable: s.elementsSelectable,\n  dragging: s.paneDragging\n});\nconst Pane = memo(_ref52 => {\n  let {\n    isSelecting,\n    selectionMode = SelectionMode.Full,\n    panOnDrag,\n    onSelectionStart,\n    onSelectionEnd,\n    onPaneClick,\n    onPaneContextMenu,\n    onPaneScroll,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    children\n  } = _ref52;\n  const container = useRef(null);\n  const store = useStoreApi();\n  const prevSelectedNodesCount = useRef(0);\n  const prevSelectedEdgesCount = useRef(0);\n  const containerBounds = useRef();\n  const {\n    userSelectionActive,\n    elementsSelectable,\n    dragging\n  } = useStore(selector$8, shallow);\n  const resetUserSelection = () => {\n    store.setState({\n      userSelectionActive: false,\n      userSelectionRect: null\n    });\n    prevSelectedNodesCount.current = 0;\n    prevSelectedEdgesCount.current = 0;\n  };\n  const onClick = event => {\n    onPaneClick?.(event);\n    store.getState().resetSelectedElements();\n    store.setState({\n      nodesSelectionActive: false\n    });\n  };\n  const onContextMenu = event => {\n    if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n      event.preventDefault();\n      return;\n    }\n    onPaneContextMenu?.(event);\n  };\n  const onWheel = onPaneScroll ? event => onPaneScroll(event) : undefined;\n  const onMouseDown = event => {\n    const {\n      resetSelectedElements,\n      domNode\n    } = store.getState();\n    containerBounds.current = domNode?.getBoundingClientRect();\n    if (!elementsSelectable || !isSelecting || event.button !== 0 || event.target !== container.current || !containerBounds.current) {\n      return;\n    }\n    const {\n      x,\n      y\n    } = getEventPosition(event, containerBounds.current);\n    resetSelectedElements();\n    store.setState({\n      userSelectionRect: {\n        width: 0,\n        height: 0,\n        startX: x,\n        startY: y,\n        x,\n        y\n      }\n    });\n    onSelectionStart?.(event);\n  };\n  const onMouseMove = event => {\n    const {\n      userSelectionRect,\n      nodeInternals,\n      edges,\n      transform,\n      onNodesChange,\n      onEdgesChange,\n      nodeOrigin,\n      getNodes\n    } = store.getState();\n    if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n      return;\n    }\n    store.setState({\n      userSelectionActive: true,\n      nodesSelectionActive: false\n    });\n    const mousePos = getEventPosition(event, containerBounds.current);\n    const startX = userSelectionRect.startX ?? 0;\n    const startY = userSelectionRect.startY ?? 0;\n    const nextUserSelectRect = {\n      ...userSelectionRect,\n      x: mousePos.x < startX ? mousePos.x : startX,\n      y: mousePos.y < startY ? mousePos.y : startY,\n      width: Math.abs(mousePos.x - startX),\n      height: Math.abs(mousePos.y - startY)\n    };\n    const nodes = getNodes();\n    const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n    const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map(e => e.id);\n    const selectedNodeIds = selectedNodes.map(n => n.id);\n    if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n      prevSelectedNodesCount.current = selectedNodeIds.length;\n      const changes = getSelectionChanges(nodes, selectedNodeIds);\n      if (changes.length) {\n        onNodesChange?.(changes);\n      }\n    }\n    if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n      prevSelectedEdgesCount.current = selectedEdgeIds.length;\n      const changes = getSelectionChanges(edges, selectedEdgeIds);\n      if (changes.length) {\n        onEdgesChange?.(changes);\n      }\n    }\n    store.setState({\n      userSelectionRect: nextUserSelectRect\n    });\n  };\n  const onMouseUp = event => {\n    if (event.button !== 0) {\n      return;\n    }\n    const {\n      userSelectionRect\n    } = store.getState();\n    // We only want to trigger click functions when in selection mode if\n    // the user did not move the mouse.\n    if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n      onClick?.(event);\n    }\n    store.setState({\n      nodesSelectionActive: prevSelectedNodesCount.current > 0\n    });\n    resetUserSelection();\n    onSelectionEnd?.(event);\n  };\n  const onMouseLeave = event => {\n    if (userSelectionActive) {\n      store.setState({\n        nodesSelectionActive: prevSelectedNodesCount.current > 0\n      });\n      onSelectionEnd?.(event);\n    }\n    resetUserSelection();\n  };\n  const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n  return jsxs(\"div\", {\n    className: cc(['react-flow__pane', {\n      dragging,\n      selection: isSelecting\n    }]),\n    onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container),\n    onContextMenu: wrapHandler(onContextMenu, container),\n    onWheel: wrapHandler(onWheel, container),\n    onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter,\n    onMouseDown: hasActiveSelection ? onMouseDown : undefined,\n    onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove,\n    onMouseUp: hasActiveSelection ? onMouseUp : undefined,\n    onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave,\n    ref: container,\n    style: containerStyle,\n    children: [children, jsx(UserSelection, {})]\n  });\n});\nPane.displayName = 'Pane';\nconst selector$7 = s => {\n  const selectedNodes = s.getNodes().filter(n => n.selected);\n  return {\n    ...getRectOfNodes(selectedNodes, s.nodeOrigin),\n    transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n    userSelectionActive: s.userSelectionActive\n  };\n};\nfunction NodesSelection(_ref53) {\n  let {\n    onSelectionContextMenu,\n    noPanClassName,\n    disableKeyboardA11y\n  } = _ref53;\n  const store = useStoreApi();\n  const {\n    width,\n    height,\n    x: left,\n    y: top,\n    transformString,\n    userSelectionActive\n  } = useStore(selector$7, shallow);\n  const updatePositions = useUpdateNodePositions();\n  const nodeRef = useRef(null);\n  useEffect(() => {\n    if (!disableKeyboardA11y) {\n      nodeRef.current?.focus({\n        preventScroll: true\n      });\n    }\n  }, [disableKeyboardA11y]);\n  useDrag({\n    nodeRef\n  });\n  if (userSelectionActive || !width || !height) {\n    return null;\n  }\n  const onContextMenu = onSelectionContextMenu ? event => {\n    const selectedNodes = store.getState().getNodes().filter(n => n.selected);\n    onSelectionContextMenu(event, selectedNodes);\n  } : undefined;\n  const onKeyDown = event => {\n    if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n      updatePositions({\n        x: arrowKeyDiffs[event.key].x,\n        y: arrowKeyDiffs[event.key].y,\n        isShiftPressed: event.shiftKey\n      });\n    }\n  };\n  return jsx(\"div\", {\n    className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]),\n    style: {\n      transform: transformString\n    },\n    children: jsx(\"div\", {\n      ref: nodeRef,\n      className: \"react-flow__nodesselection-rect\",\n      onContextMenu: onContextMenu,\n      tabIndex: disableKeyboardA11y ? undefined : -1,\n      onKeyDown: disableKeyboardA11y ? undefined : onKeyDown,\n      style: {\n        width,\n        height,\n        top,\n        left\n      }\n    })\n  });\n}\nvar NodesSelection$1 = memo(NodesSelection);\nconst selector$6 = s => s.nodesSelectionActive;\nconst FlowRenderer = _ref54 => {\n  let {\n    children,\n    onPaneClick,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    onPaneContextMenu,\n    onPaneScroll,\n    deleteKeyCode,\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    selectionKeyCode,\n    selectionOnDrag,\n    selectionMode,\n    onSelectionStart,\n    onSelectionEnd,\n    multiSelectionKeyCode,\n    panActivationKeyCode,\n    zoomActivationKeyCode,\n    elementsSelectable,\n    zoomOnScroll,\n    zoomOnPinch,\n    panOnScroll,\n    panOnScrollSpeed,\n    panOnScrollMode,\n    zoomOnDoubleClick,\n    panOnDrag: _panOnDrag,\n    defaultViewport,\n    translateExtent,\n    minZoom,\n    maxZoom,\n    preventScrolling,\n    onSelectionContextMenu,\n    noWheelClassName,\n    noPanClassName,\n    disableKeyboardA11y\n  } = _ref54;\n  const nodesSelectionActive = useStore(selector$6);\n  const selectionKeyPressed = useKeyPress(selectionKeyCode);\n  const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n  const panOnDrag = panActivationKeyPressed || _panOnDrag;\n  const isSelecting = selectionKeyPressed || selectionOnDrag && panOnDrag !== true;\n  useGlobalKeyHandler({\n    deleteKeyCode,\n    multiSelectionKeyCode\n  });\n  return jsx(ZoomPane, {\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    onPaneContextMenu: onPaneContextMenu,\n    elementsSelectable: elementsSelectable,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnDrag: !selectionKeyPressed && panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    preventScrolling: preventScrolling,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    children: jsxs(Pane, {\n      onSelectionStart: onSelectionStart,\n      onSelectionEnd: onSelectionEnd,\n      onPaneClick: onPaneClick,\n      onPaneMouseEnter: onPaneMouseEnter,\n      onPaneMouseMove: onPaneMouseMove,\n      onPaneMouseLeave: onPaneMouseLeave,\n      onPaneContextMenu: onPaneContextMenu,\n      onPaneScroll: onPaneScroll,\n      panOnDrag: panOnDrag,\n      isSelecting: !!isSelecting,\n      selectionMode: selectionMode,\n      children: [children, nodesSelectionActive && jsx(NodesSelection$1, {\n        onSelectionContextMenu: onSelectionContextMenu,\n        noPanClassName: noPanClassName,\n        disableKeyboardA11y: disableKeyboardA11y\n      })]\n    })\n  });\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\nfunction useVisibleNodes(onlyRenderVisible) {\n  const nodes = useStore(useCallback(s => onlyRenderVisible ? getNodesInside(s.nodeInternals, {\n    x: 0,\n    y: 0,\n    width: s.width,\n    height: s.height\n  }, s.transform, true) : s.getNodes(), [onlyRenderVisible]));\n  return nodes;\n}\nconst selector$5 = s => ({\n  nodesDraggable: s.nodesDraggable,\n  nodesConnectable: s.nodesConnectable,\n  nodesFocusable: s.nodesFocusable,\n  elementsSelectable: s.elementsSelectable,\n  updateNodeDimensions: s.updateNodeDimensions,\n  onError: s.onError\n});\nconst NodeRenderer = props => {\n  const {\n    nodesDraggable,\n    nodesConnectable,\n    nodesFocusable,\n    elementsSelectable,\n    updateNodeDimensions,\n    onError\n  } = useStore(selector$5, shallow);\n  const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n  const resizeObserverRef = useRef();\n  const resizeObserver = useMemo(() => {\n    if (typeof ResizeObserver === 'undefined') {\n      return null;\n    }\n    const observer = new ResizeObserver(entries => {\n      const updates = entries.map(entry => ({\n        id: entry.target.getAttribute('data-id'),\n        nodeElement: entry.target,\n        forceUpdate: true\n      }));\n      updateNodeDimensions(updates);\n    });\n    resizeObserverRef.current = observer;\n    return observer;\n  }, []);\n  useEffect(() => {\n    return () => {\n      resizeObserverRef?.current?.disconnect();\n    };\n  }, []);\n  return jsx(\"div\", {\n    className: \"react-flow__nodes\",\n    style: containerStyle,\n    children: nodes.map(node => {\n      let nodeType = node.type || 'default';\n      if (!props.nodeTypes[nodeType]) {\n        onError?.('003', errorMessages['003'](nodeType));\n        nodeType = 'default';\n      }\n      const NodeComponent = props.nodeTypes[nodeType] || props.nodeTypes.default;\n      const isDraggable = !!(node.draggable || nodesDraggable && typeof node.draggable === 'undefined');\n      const isSelectable = !!(node.selectable || elementsSelectable && typeof node.selectable === 'undefined');\n      const isConnectable = !!(node.connectable || nodesConnectable && typeof node.connectable === 'undefined');\n      const isFocusable = !!(node.focusable || nodesFocusable && typeof node.focusable === 'undefined');\n      const clampedPosition = props.nodeExtent ? clampPosition(node.positionAbsolute, props.nodeExtent) : node.positionAbsolute;\n      const posX = clampedPosition?.x ?? 0;\n      const posY = clampedPosition?.y ?? 0;\n      const posOrigin = getPositionWithOrigin({\n        x: posX,\n        y: posY,\n        width: node.width ?? 0,\n        height: node.height ?? 0,\n        origin: props.nodeOrigin\n      });\n      return jsx(NodeComponent, {\n        id: node.id,\n        className: node.className,\n        style: node.style,\n        type: nodeType,\n        data: node.data,\n        sourcePosition: node.sourcePosition || Position.Bottom,\n        targetPosition: node.targetPosition || Position.Top,\n        hidden: node.hidden,\n        xPos: posX,\n        yPos: posY,\n        xPosOrigin: posOrigin.x,\n        yPosOrigin: posOrigin.y,\n        selectNodesOnDrag: props.selectNodesOnDrag,\n        onClick: props.onNodeClick,\n        onMouseEnter: props.onNodeMouseEnter,\n        onMouseMove: props.onNodeMouseMove,\n        onMouseLeave: props.onNodeMouseLeave,\n        onContextMenu: props.onNodeContextMenu,\n        onDoubleClick: props.onNodeDoubleClick,\n        selected: !!node.selected,\n        isDraggable: isDraggable,\n        isSelectable: isSelectable,\n        isConnectable: isConnectable,\n        isFocusable: isFocusable,\n        resizeObserver: resizeObserver,\n        dragHandle: node.dragHandle,\n        zIndex: node[internalsSymbol]?.z ?? 0,\n        isParent: !!node[internalsSymbol]?.isParent,\n        noDragClassName: props.noDragClassName,\n        noPanClassName: props.noPanClassName,\n        initialized: !!node.width && !!node.height,\n        rfId: props.rfId,\n        disableKeyboardA11y: props.disableKeyboardA11y,\n        ariaLabel: node.ariaLabel\n      }, node.id);\n    })\n  });\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\nconst defaultEdgeTree = [{\n  level: 0,\n  isMaxLevel: true,\n  edges: []\n}];\nfunction groupEdgesByZLevel(edges, nodeInternals) {\n  let elevateEdgesOnSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let maxLevel = -1;\n  const levelLookup = edges.reduce((tree, edge) => {\n    const hasZIndex = isNumeric(edge.zIndex);\n    let z = hasZIndex ? edge.zIndex : 0;\n    if (elevateEdgesOnSelect) {\n      z = hasZIndex ? edge.zIndex : Math.max(nodeInternals.get(edge.source)?.[internalsSymbol]?.z || 0, nodeInternals.get(edge.target)?.[internalsSymbol]?.z || 0);\n    }\n    if (tree[z]) {\n      tree[z].push(edge);\n    } else {\n      tree[z] = [edge];\n    }\n    maxLevel = z > maxLevel ? z : maxLevel;\n    return tree;\n  }, {});\n  const edgeTree = Object.entries(levelLookup).map(_ref55 => {\n    let [key, edges] = _ref55;\n    const level = +key;\n    return {\n      edges,\n      level,\n      isMaxLevel: level === maxLevel\n    };\n  });\n  if (edgeTree.length === 0) {\n    return defaultEdgeTree;\n  }\n  return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n  const edges = useStore(useCallback(s => {\n    if (!onlyRenderVisible) {\n      return s.edges;\n    }\n    return s.edges.filter(e => {\n      const sourceNode = nodeInternals.get(e.source);\n      const targetNode = nodeInternals.get(e.target);\n      return sourceNode?.width && sourceNode?.height && targetNode?.width && targetNode?.height && isEdgeVisible({\n        sourcePos: sourceNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        targetPos: targetNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        sourceWidth: sourceNode.width,\n        sourceHeight: sourceNode.height,\n        targetWidth: targetNode.width,\n        targetHeight: targetNode.height,\n        width: s.width,\n        height: s.height,\n        transform: s.transform\n      });\n    });\n  }, [onlyRenderVisible, nodeInternals]));\n  return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\nconst ArrowSymbol = _ref56 => {\n  let {\n    color = 'none',\n    strokeWidth = 1\n  } = _ref56;\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: \"none\",\n    points: \"-5,-4 0,0 -5,4\"\n  });\n};\nconst ArrowClosedSymbol = _ref57 => {\n  let {\n    color = 'none',\n    strokeWidth = 1\n  } = _ref57;\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: color,\n    points: \"-5,-4 0,0 -5,4 -5,-4\"\n  });\n};\nconst MarkerSymbols = {\n  [MarkerType.Arrow]: ArrowSymbol,\n  [MarkerType.ArrowClosed]: ArrowClosedSymbol\n};\nfunction useMarkerSymbol(type) {\n  const store = useStoreApi();\n  const symbol = useMemo(() => {\n    const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n    if (!symbolExists) {\n      store.getState().onError?.('009', errorMessages['009'](type));\n      return null;\n    }\n    return MarkerSymbols[type];\n  }, [type]);\n  return symbol;\n}\nconst Marker = _ref58 => {\n  let {\n    id,\n    type,\n    color,\n    width = 12.5,\n    height = 12.5,\n    markerUnits = 'strokeWidth',\n    strokeWidth,\n    orient = 'auto-start-reverse'\n  } = _ref58;\n  const Symbol = useMarkerSymbol(type);\n  if (!Symbol) {\n    return null;\n  }\n  return jsx(\"marker\", {\n    className: \"react-flow__arrowhead\",\n    id: id,\n    markerWidth: `${width}`,\n    markerHeight: `${height}`,\n    viewBox: \"-10 -10 20 20\",\n    markerUnits: markerUnits,\n    orient: orient,\n    refX: \"0\",\n    refY: \"0\",\n    children: jsx(Symbol, {\n      color: color,\n      strokeWidth: strokeWidth\n    })\n  });\n};\nconst markerSelector = _ref59 => {\n  let {\n    defaultColor,\n    rfId\n  } = _ref59;\n  return s => {\n    const ids = [];\n    return s.edges.reduce((markers, edge) => {\n      [edge.markerStart, edge.markerEnd].forEach(marker => {\n        if (marker && typeof marker === 'object') {\n          const markerId = getMarkerId(marker, rfId);\n          if (!ids.includes(markerId)) {\n            markers.push({\n              id: markerId,\n              color: marker.color || defaultColor,\n              ...marker\n            });\n            ids.push(markerId);\n          }\n        }\n      });\n      return markers;\n    }, []).sort((a, b) => a.id.localeCompare(b.id));\n  };\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = _ref60 => {\n  let {\n    defaultColor,\n    rfId\n  } = _ref60;\n  const markers = useStore(useCallback(markerSelector({\n    defaultColor,\n    rfId\n  }), [defaultColor, rfId]),\n  // the id includes all marker options, so we just need to look at that part of the marker\n  (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n  return jsx(\"defs\", {\n    children: markers.map(marker => jsx(Marker, {\n      id: marker.id,\n      type: marker.type,\n      color: marker.color,\n      width: marker.width,\n      height: marker.height,\n      markerUnits: marker.markerUnits,\n      strokeWidth: marker.strokeWidth,\n      orient: marker.orient\n    }, marker.id))\n  });\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\nconst selector$4 = s => ({\n  nodesConnectable: s.nodesConnectable,\n  edgesFocusable: s.edgesFocusable,\n  elementsSelectable: s.elementsSelectable,\n  width: s.width,\n  height: s.height,\n  connectionMode: s.connectionMode,\n  nodeInternals: s.nodeInternals,\n  onError: s.onError\n});\nconst EdgeRenderer = _ref61 => {\n  let {\n    defaultMarkerColor,\n    onlyRenderVisibleElements,\n    elevateEdgesOnSelect,\n    rfId,\n    edgeTypes,\n    noPanClassName,\n    onEdgeUpdate,\n    onEdgeContextMenu,\n    onEdgeMouseEnter,\n    onEdgeMouseMove,\n    onEdgeMouseLeave,\n    onEdgeClick,\n    edgeUpdaterRadius,\n    onEdgeDoubleClick,\n    onEdgeUpdateStart,\n    onEdgeUpdateEnd,\n    children\n  } = _ref61;\n  const {\n    edgesFocusable,\n    elementsSelectable,\n    width,\n    height,\n    connectionMode,\n    nodeInternals,\n    onError\n  } = useStore(selector$4, shallow);\n  const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n  if (!width) {\n    return null;\n  }\n  return jsxs(Fragment, {\n    children: [edgeTree.map(_ref62 => {\n      let {\n        level,\n        edges,\n        isMaxLevel\n      } = _ref62;\n      return jsxs(\"svg\", {\n        style: {\n          zIndex: level\n        },\n        width: width,\n        height: height,\n        className: \"react-flow__edges react-flow__container\",\n        children: [isMaxLevel && jsx(MarkerDefinitions$1, {\n          defaultColor: defaultMarkerColor,\n          rfId: rfId\n        }), jsx(\"g\", {\n          children: edges.map(edge => {\n            const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n            const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n            if (!sourceIsValid || !targetIsValid) {\n              return null;\n            }\n            let edgeType = edge.type || 'default';\n            if (!edgeTypes[edgeType]) {\n              onError?.('011', errorMessages['011'](edgeType));\n              edgeType = 'default';\n            }\n            const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n            // when connection type is loose we can define all handles as sources and connect source -> source\n            const targetNodeHandles = connectionMode === ConnectionMode.Strict ? targetHandleBounds.target : (targetHandleBounds.target ?? []).concat(targetHandleBounds.source ?? []);\n            const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n            const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n            const sourcePosition = sourceHandle?.position || Position.Bottom;\n            const targetPosition = targetHandle?.position || Position.Top;\n            const isFocusable = !!(edge.focusable || edgesFocusable && typeof edge.focusable === 'undefined');\n            if (!sourceHandle || !targetHandle) {\n              onError?.('008', errorMessages['008'](sourceHandle, edge));\n              return null;\n            }\n            const {\n              sourceX,\n              sourceY,\n              targetX,\n              targetY\n            } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n            return jsx(EdgeComponent, {\n              id: edge.id,\n              className: cc([edge.className, noPanClassName]),\n              type: edgeType,\n              data: edge.data,\n              selected: !!edge.selected,\n              animated: !!edge.animated,\n              hidden: !!edge.hidden,\n              label: edge.label,\n              labelStyle: edge.labelStyle,\n              labelShowBg: edge.labelShowBg,\n              labelBgStyle: edge.labelBgStyle,\n              labelBgPadding: edge.labelBgPadding,\n              labelBgBorderRadius: edge.labelBgBorderRadius,\n              style: edge.style,\n              source: edge.source,\n              target: edge.target,\n              sourceHandleId: edge.sourceHandle,\n              targetHandleId: edge.targetHandle,\n              markerEnd: edge.markerEnd,\n              markerStart: edge.markerStart,\n              sourceX: sourceX,\n              sourceY: sourceY,\n              targetX: targetX,\n              targetY: targetY,\n              sourcePosition: sourcePosition,\n              targetPosition: targetPosition,\n              elementsSelectable: elementsSelectable,\n              onEdgeUpdate: onEdgeUpdate,\n              onContextMenu: onEdgeContextMenu,\n              onMouseEnter: onEdgeMouseEnter,\n              onMouseMove: onEdgeMouseMove,\n              onMouseLeave: onEdgeMouseLeave,\n              onClick: onEdgeClick,\n              edgeUpdaterRadius: edgeUpdaterRadius,\n              onEdgeDoubleClick: onEdgeDoubleClick,\n              onEdgeUpdateStart: onEdgeUpdateStart,\n              onEdgeUpdateEnd: onEdgeUpdateEnd,\n              rfId: rfId,\n              ariaLabel: edge.ariaLabel,\n              isFocusable: isFocusable,\n              pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined,\n              interactionWidth: edge.interactionWidth\n            }, edge.id);\n          })\n        })]\n      }, level);\n    }), children]\n  });\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\nconst selector$3 = s => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport(_ref63) {\n  let {\n    children\n  } = _ref63;\n  const transform = useStore(selector$3);\n  return jsx(\"div\", {\n    className: \"react-flow__viewport react-flow__container\",\n    style: {\n      transform\n    },\n    children: children\n  });\n}\nfunction useOnInitHandler(onInit) {\n  const rfInstance = useReactFlow();\n  const isInitialized = useRef(false);\n  useEffect(() => {\n    if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n      setTimeout(() => onInit(rfInstance), 1);\n      isInitialized.current = true;\n    }\n  }, [onInit, rfInstance.viewportInitialized]);\n}\nconst oppositePosition = {\n  [Position.Left]: Position.Right,\n  [Position.Right]: Position.Left,\n  [Position.Top]: Position.Bottom,\n  [Position.Bottom]: Position.Top\n};\nconst ConnectionLine = _ref64 => {\n  let {\n    nodeId,\n    handleType,\n    style,\n    type = ConnectionLineType.Bezier,\n    CustomComponent,\n    connectionStatus\n  } = _ref64;\n  const {\n    fromNode,\n    handleId,\n    toX,\n    toY,\n    connectionMode\n  } = useStore(useCallback(s => ({\n    fromNode: s.nodeInternals.get(nodeId),\n    handleId: s.connectionHandleId,\n    toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n    toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n    connectionMode: s.connectionMode\n  }), [nodeId]), shallow);\n  const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n  let handleBounds = fromHandleBounds?.[handleType];\n  if (connectionMode === ConnectionMode.Loose) {\n    handleBounds = handleBounds ? handleBounds : fromHandleBounds?.[handleType === 'source' ? 'target' : 'source'];\n  }\n  if (!fromNode || !handleBounds) {\n    return null;\n  }\n  const fromHandle = handleId ? handleBounds.find(d => d.id === handleId) : handleBounds[0];\n  const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode.width ?? 0) / 2;\n  const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode.height ?? 0;\n  const fromX = (fromNode.positionAbsolute?.x ?? 0) + fromHandleX;\n  const fromY = (fromNode.positionAbsolute?.y ?? 0) + fromHandleY;\n  const fromPosition = fromHandle?.position;\n  const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n  if (!fromPosition || !toPosition) {\n    return null;\n  }\n  if (CustomComponent) {\n    return jsx(CustomComponent, {\n      connectionLineType: type,\n      connectionLineStyle: style,\n      fromNode: fromNode,\n      fromHandle: fromHandle,\n      fromX: fromX,\n      fromY: fromY,\n      toX: toX,\n      toY: toY,\n      fromPosition: fromPosition,\n      toPosition: toPosition,\n      connectionStatus: connectionStatus\n    });\n  }\n  let dAttr = '';\n  const pathParams = {\n    sourceX: fromX,\n    sourceY: fromY,\n    sourcePosition: fromPosition,\n    targetX: toX,\n    targetY: toY,\n    targetPosition: toPosition\n  };\n  if (type === ConnectionLineType.Bezier) {\n    // we assume the destination position is opposite to the source position\n    [dAttr] = getBezierPath(pathParams);\n  } else if (type === ConnectionLineType.Step) {\n    [dAttr] = getSmoothStepPath({\n      ...pathParams,\n      borderRadius: 0\n    });\n  } else if (type === ConnectionLineType.SmoothStep) {\n    [dAttr] = getSmoothStepPath(pathParams);\n  } else if (type === ConnectionLineType.SimpleBezier) {\n    [dAttr] = getSimpleBezierPath(pathParams);\n  } else {\n    dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n  }\n  return jsx(\"path\", {\n    d: dAttr,\n    fill: \"none\",\n    className: \"react-flow__connection-path\",\n    style: style\n  });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = s => ({\n  nodeId: s.connectionNodeId,\n  handleType: s.connectionHandleType,\n  nodesConnectable: s.nodesConnectable,\n  connectionStatus: s.connectionStatus,\n  width: s.width,\n  height: s.height\n});\nfunction ConnectionLineWrapper(_ref65) {\n  let {\n    containerStyle,\n    style,\n    type,\n    component\n  } = _ref65;\n  const {\n    nodeId,\n    handleType,\n    nodesConnectable,\n    width,\n    height,\n    connectionStatus\n  } = useStore(selector$2, shallow);\n  const isValid = !!(nodeId && handleType && width && nodesConnectable);\n  if (!isValid) {\n    return null;\n  }\n  return jsx(\"svg\", {\n    style: containerStyle,\n    width: width,\n    height: height,\n    className: \"react-flow__edges react-flow__connectionline react-flow__container\",\n    children: jsx(\"g\", {\n      className: cc(['react-flow__connection', connectionStatus]),\n      children: jsx(ConnectionLine, {\n        nodeId: nodeId,\n        handleType: handleType,\n        style: style,\n        type: type,\n        CustomComponent: component,\n        connectionStatus: connectionStatus\n      })\n    })\n  });\n}\nconst GraphView = _ref66 => {\n  let {\n    nodeTypes,\n    edgeTypes,\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    onInit,\n    onNodeClick,\n    onEdgeClick,\n    onNodeDoubleClick,\n    onEdgeDoubleClick,\n    onNodeMouseEnter,\n    onNodeMouseMove,\n    onNodeMouseLeave,\n    onNodeContextMenu,\n    onSelectionContextMenu,\n    onSelectionStart,\n    onSelectionEnd,\n    connectionLineType,\n    connectionLineStyle,\n    connectionLineComponent,\n    connectionLineContainerStyle,\n    selectionKeyCode,\n    selectionOnDrag,\n    selectionMode,\n    multiSelectionKeyCode,\n    panActivationKeyCode,\n    zoomActivationKeyCode,\n    deleteKeyCode,\n    onlyRenderVisibleElements,\n    elementsSelectable,\n    selectNodesOnDrag,\n    defaultViewport,\n    translateExtent,\n    minZoom,\n    maxZoom,\n    preventScrolling,\n    defaultMarkerColor,\n    zoomOnScroll,\n    zoomOnPinch,\n    panOnScroll,\n    panOnScrollSpeed,\n    panOnScrollMode,\n    zoomOnDoubleClick,\n    panOnDrag,\n    onPaneClick,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    onPaneScroll,\n    onPaneContextMenu,\n    onEdgeUpdate,\n    onEdgeContextMenu,\n    onEdgeMouseEnter,\n    onEdgeMouseMove,\n    onEdgeMouseLeave,\n    edgeUpdaterRadius,\n    onEdgeUpdateStart,\n    onEdgeUpdateEnd,\n    noDragClassName,\n    noWheelClassName,\n    noPanClassName,\n    elevateEdgesOnSelect,\n    disableKeyboardA11y,\n    nodeOrigin,\n    nodeExtent,\n    rfId\n  } = _ref66;\n  useOnInitHandler(onInit);\n  return jsx(FlowRenderer$1, {\n    onPaneClick: onPaneClick,\n    onPaneMouseEnter: onPaneMouseEnter,\n    onPaneMouseMove: onPaneMouseMove,\n    onPaneMouseLeave: onPaneMouseLeave,\n    onPaneContextMenu: onPaneContextMenu,\n    onPaneScroll: onPaneScroll,\n    deleteKeyCode: deleteKeyCode,\n    selectionKeyCode: selectionKeyCode,\n    selectionOnDrag: selectionOnDrag,\n    selectionMode: selectionMode,\n    onSelectionStart: onSelectionStart,\n    onSelectionEnd: onSelectionEnd,\n    multiSelectionKeyCode: multiSelectionKeyCode,\n    panActivationKeyCode: panActivationKeyCode,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    elementsSelectable: elementsSelectable,\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    panOnDrag: panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    onSelectionContextMenu: onSelectionContextMenu,\n    preventScrolling: preventScrolling,\n    noDragClassName: noDragClassName,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    disableKeyboardA11y: disableKeyboardA11y,\n    children: jsxs(Viewport, {\n      children: [jsx(EdgeRenderer$1, {\n        edgeTypes: edgeTypes,\n        onEdgeClick: onEdgeClick,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onEdgeUpdate: onEdgeUpdate,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: !!elevateEdgesOnSelect,\n        disableKeyboardA11y: disableKeyboardA11y,\n        rfId: rfId,\n        children: jsx(ConnectionLineWrapper, {\n          style: connectionLineStyle,\n          type: connectionLineType,\n          component: connectionLineComponent,\n          containerStyle: connectionLineContainerStyle\n        })\n      }), jsx(\"div\", {\n        className: \"react-flow__edgelabel-renderer\"\n      }), jsx(NodeRenderer$1, {\n        nodeTypes: nodeTypes,\n        onNodeClick: onNodeClick,\n        onNodeDoubleClick: onNodeDoubleClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        selectNodesOnDrag: selectNodesOnDrag,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        noPanClassName: noPanClassName,\n        noDragClassName: noDragClassName,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent,\n        rfId: rfId\n      })]\n    })\n  });\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\nconst infiniteExtent = [[Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY]];\nconst initialState = {\n  rfId: '1',\n  width: 0,\n  height: 0,\n  transform: [0, 0, 1],\n  nodeInternals: new Map(),\n  edges: [],\n  onNodesChange: null,\n  onEdgesChange: null,\n  hasDefaultNodes: false,\n  hasDefaultEdges: false,\n  d3Zoom: null,\n  d3Selection: null,\n  d3ZoomHandler: undefined,\n  minZoom: 0.5,\n  maxZoom: 2,\n  translateExtent: infiniteExtent,\n  nodeExtent: infiniteExtent,\n  nodesSelectionActive: false,\n  userSelectionActive: false,\n  userSelectionRect: null,\n  connectionNodeId: null,\n  connectionHandleId: null,\n  connectionHandleType: 'source',\n  connectionPosition: {\n    x: 0,\n    y: 0\n  },\n  connectionStatus: null,\n  connectionMode: ConnectionMode.Strict,\n  domNode: null,\n  paneDragging: false,\n  noPanClassName: 'nopan',\n  nodeOrigin: [0, 0],\n  snapGrid: [15, 15],\n  snapToGrid: false,\n  nodesDraggable: true,\n  nodesConnectable: true,\n  nodesFocusable: true,\n  edgesFocusable: true,\n  elementsSelectable: true,\n  elevateNodesOnSelect: true,\n  fitViewOnInit: false,\n  fitViewOnInitDone: false,\n  fitViewOnInitOptions: undefined,\n  multiSelectionActive: false,\n  connectionStartHandle: null,\n  connectOnClick: true,\n  ariaLiveMessage: '',\n  autoPanOnConnect: true,\n  autoPanOnNodeDrag: true,\n  connectionRadius: 20,\n  onError: devWarn,\n  isValidConnection: undefined\n};\nconst createRFStore = () => createStore((set, get) => ({\n  ...initialState,\n  setNodes: nodes => {\n    const {\n      nodeInternals,\n      nodeOrigin,\n      elevateNodesOnSelect\n    } = get();\n    set({\n      nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect)\n    });\n  },\n  getNodes: () => {\n    return Array.from(get().nodeInternals.values());\n  },\n  setEdges: edges => {\n    const {\n      defaultEdgeOptions = {}\n    } = get();\n    set({\n      edges: edges.map(e => ({\n        ...defaultEdgeOptions,\n        ...e\n      }))\n    });\n  },\n  setDefaultNodesAndEdges: (nodes, edges) => {\n    const hasDefaultNodes = typeof nodes !== 'undefined';\n    const hasDefaultEdges = typeof edges !== 'undefined';\n    const nodeInternals = hasDefaultNodes ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect) : new Map();\n    const nextEdges = hasDefaultEdges ? edges : [];\n    set({\n      nodeInternals,\n      edges: nextEdges,\n      hasDefaultNodes,\n      hasDefaultEdges\n    });\n  },\n  updateNodeDimensions: updates => {\n    const {\n      onNodesChange,\n      nodeInternals,\n      fitViewOnInit,\n      fitViewOnInitDone,\n      fitViewOnInitOptions,\n      domNode,\n      nodeOrigin\n    } = get();\n    const viewportNode = domNode?.querySelector('.react-flow__viewport');\n    if (!viewportNode) {\n      return;\n    }\n    const style = window.getComputedStyle(viewportNode);\n    const {\n      m22: zoom\n    } = new window.DOMMatrixReadOnly(style.transform);\n    const changes = updates.reduce((res, update) => {\n      const node = nodeInternals.get(update.id);\n      if (node) {\n        const dimensions = getDimensions(update.nodeElement);\n        const doUpdate = !!(dimensions.width && dimensions.height && (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n        if (doUpdate) {\n          nodeInternals.set(node.id, {\n            ...node,\n            [internalsSymbol]: {\n              ...node[internalsSymbol],\n              handleBounds: {\n                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin)\n              }\n            },\n            ...dimensions\n          });\n          res.push({\n            id: node.id,\n            type: 'dimensions',\n            dimensions\n          });\n        }\n      }\n      return res;\n    }, []);\n    updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n    const nextFitViewOnInitDone = fitViewOnInitDone || fitViewOnInit && !fitViewOnInitDone && fitView(get, {\n      initial: true,\n      ...fitViewOnInitOptions\n    });\n    set({\n      nodeInternals: new Map(nodeInternals),\n      fitViewOnInitDone: nextFitViewOnInitDone\n    });\n    if (changes?.length > 0) {\n      onNodesChange?.(changes);\n    }\n  },\n  updateNodePositions: function (nodeDragItems) {\n    let positionChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let dragging = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const {\n      triggerNodeChanges\n    } = get();\n    const changes = nodeDragItems.map(node => {\n      const change = {\n        id: node.id,\n        type: 'position',\n        dragging\n      };\n      if (positionChanged) {\n        change.positionAbsolute = node.positionAbsolute;\n        change.position = node.position;\n      }\n      return change;\n    });\n    triggerNodeChanges(changes);\n  },\n  triggerNodeChanges: changes => {\n    const {\n      onNodesChange,\n      nodeInternals,\n      hasDefaultNodes,\n      nodeOrigin,\n      getNodes,\n      elevateNodesOnSelect\n    } = get();\n    if (changes?.length) {\n      if (hasDefaultNodes) {\n        const nodes = applyNodeChanges(changes, getNodes());\n        const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n        set({\n          nodeInternals: nextNodeInternals\n        });\n      }\n      onNodesChange?.(changes);\n    }\n  },\n  addSelectedNodes: selectedNodeIds => {\n    const {\n      multiSelectionActive,\n      edges,\n      getNodes\n    } = get();\n    let changedNodes;\n    let changedEdges = null;\n    if (multiSelectionActive) {\n      changedNodes = selectedNodeIds.map(nodeId => createSelectionChange(nodeId, true));\n    } else {\n      changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n      changedEdges = getSelectionChanges(edges, []);\n    }\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  addSelectedEdges: selectedEdgeIds => {\n    const {\n      multiSelectionActive,\n      edges,\n      getNodes\n    } = get();\n    let changedEdges;\n    let changedNodes = null;\n    if (multiSelectionActive) {\n      changedEdges = selectedEdgeIds.map(edgeId => createSelectionChange(edgeId, true));\n    } else {\n      changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n      changedNodes = getSelectionChanges(getNodes(), []);\n    }\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  unselectNodesAndEdges: function () {\n    let {\n      nodes,\n      edges\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      edges: storeEdges,\n      getNodes\n    } = get();\n    const nodesToUnselect = nodes ? nodes : getNodes();\n    const edgesToUnselect = edges ? edges : storeEdges;\n    const changedNodes = nodesToUnselect.map(n => {\n      n.selected = false;\n      return createSelectionChange(n.id, false);\n    });\n    const changedEdges = edgesToUnselect.map(edge => createSelectionChange(edge.id, false));\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  setMinZoom: minZoom => {\n    const {\n      d3Zoom,\n      maxZoom\n    } = get();\n    d3Zoom?.scaleExtent([minZoom, maxZoom]);\n    set({\n      minZoom\n    });\n  },\n  setMaxZoom: maxZoom => {\n    const {\n      d3Zoom,\n      minZoom\n    } = get();\n    d3Zoom?.scaleExtent([minZoom, maxZoom]);\n    set({\n      maxZoom\n    });\n  },\n  setTranslateExtent: translateExtent => {\n    get().d3Zoom?.translateExtent(translateExtent);\n    set({\n      translateExtent\n    });\n  },\n  resetSelectedElements: () => {\n    const {\n      edges,\n      getNodes\n    } = get();\n    const nodes = getNodes();\n    const nodesToUnselect = nodes.filter(e => e.selected).map(n => createSelectionChange(n.id, false));\n    const edgesToUnselect = edges.filter(e => e.selected).map(e => createSelectionChange(e.id, false));\n    updateNodesAndEdgesSelections({\n      changedNodes: nodesToUnselect,\n      changedEdges: edgesToUnselect,\n      get,\n      set\n    });\n  },\n  setNodeExtent: nodeExtent => {\n    const {\n      nodeInternals\n    } = get();\n    nodeInternals.forEach(node => {\n      node.positionAbsolute = clampPosition(node.position, nodeExtent);\n    });\n    set({\n      nodeExtent,\n      nodeInternals: new Map(nodeInternals)\n    });\n  },\n  panBy: delta => {\n    const {\n      transform,\n      width,\n      height,\n      d3Zoom,\n      d3Selection,\n      translateExtent\n    } = get();\n    if (!d3Zoom || !d3Selection || !delta.x && !delta.y) {\n      return;\n    }\n    const nextTransform = zoomIdentity.translate(transform[0] + delta.x, transform[1] + delta.y).scale(transform[2]);\n    const extent = [[0, 0], [width, height]];\n    const constrainedTransform = d3Zoom?.constrain()(nextTransform, extent, translateExtent);\n    d3Zoom.transform(d3Selection, constrainedTransform);\n  },\n  cancelConnection: () => set({\n    connectionNodeId: initialState.connectionNodeId,\n    connectionHandleId: initialState.connectionHandleId,\n    connectionHandleType: initialState.connectionHandleType,\n    connectionStatus: initialState.connectionStatus\n  }),\n  reset: () => set({\n    ...initialState\n  })\n}));\nconst ReactFlowProvider = _ref67 => {\n  let {\n    children\n  } = _ref67;\n  const storeRef = useRef(null);\n  if (!storeRef.current) {\n    storeRef.current = createRFStore();\n  }\n  return jsx(Provider$1, {\n    value: storeRef.current,\n    children: children\n  });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\nconst Wrapper = _ref68 => {\n  let {\n    children\n  } = _ref68;\n  const isWrapped = useContext(StoreContext);\n  if (isWrapped) {\n    // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n    return jsx(Fragment, {\n      children: children\n    });\n  }\n  return jsx(ReactFlowProvider, {\n    children: children\n  });\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n  const typesKeysRef = useRef(null);\n  const typesParsed = useMemo(() => {\n    if (process.env.NODE_ENV === 'development') {\n      const typeKeys = Object.keys(nodeOrEdgeTypes);\n      if (shallow(typesKeysRef.current, typeKeys)) {\n        devWarn('002', errorMessages['002']());\n      }\n      typesKeysRef.current = typeKeys;\n    }\n    return createTypes(nodeOrEdgeTypes);\n  }, [nodeOrEdgeTypes]);\n  return typesParsed;\n}\nconst defaultNodeTypes = {\n  input: InputNode$1,\n  default: DefaultNode$1,\n  output: OutputNode$1,\n  group: GroupNode\n};\nconst defaultEdgeTypes = {\n  default: BezierEdge,\n  straight: StraightEdge,\n  step: StepEdge,\n  smoothstep: SmoothStepEdge,\n  simplebezier: SimpleBezierEdge\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = {\n  x: 0,\n  y: 0,\n  zoom: 1\n};\nconst wrapperStyle = {\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden',\n  position: 'relative',\n  zIndex: 0\n};\nconst ReactFlow = forwardRef((_ref69, ref) => {\n  let {\n    nodes,\n    edges,\n    defaultNodes,\n    defaultEdges,\n    className,\n    nodeTypes = defaultNodeTypes,\n    edgeTypes = defaultEdgeTypes,\n    onNodeClick,\n    onEdgeClick,\n    onInit,\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    onConnect,\n    onConnectStart,\n    onConnectEnd,\n    onClickConnectStart,\n    onClickConnectEnd,\n    onNodeMouseEnter,\n    onNodeMouseMove,\n    onNodeMouseLeave,\n    onNodeContextMenu,\n    onNodeDoubleClick,\n    onNodeDragStart,\n    onNodeDrag,\n    onNodeDragStop,\n    onNodesDelete,\n    onEdgesDelete,\n    onSelectionChange,\n    onSelectionDragStart,\n    onSelectionDrag,\n    onSelectionDragStop,\n    onSelectionContextMenu,\n    onSelectionStart,\n    onSelectionEnd,\n    connectionMode = ConnectionMode.Strict,\n    connectionLineType = ConnectionLineType.Bezier,\n    connectionLineStyle,\n    connectionLineComponent,\n    connectionLineContainerStyle,\n    deleteKeyCode = 'Backspace',\n    selectionKeyCode = 'Shift',\n    selectionOnDrag = false,\n    selectionMode = SelectionMode.Full,\n    panActivationKeyCode = 'Space',\n    multiSelectionKeyCode = 'Meta',\n    zoomActivationKeyCode = 'Meta',\n    snapToGrid = false,\n    snapGrid = initSnapGrid,\n    onlyRenderVisibleElements = false,\n    selectNodesOnDrag = true,\n    nodesDraggable,\n    nodesConnectable,\n    nodesFocusable,\n    nodeOrigin = initNodeOrigin,\n    edgesFocusable,\n    elementsSelectable,\n    defaultViewport = initDefaultViewport,\n    minZoom = 0.5,\n    maxZoom = 2,\n    translateExtent = infiniteExtent,\n    preventScrolling = true,\n    nodeExtent,\n    defaultMarkerColor = '#b1b1b7',\n    zoomOnScroll = true,\n    zoomOnPinch = true,\n    panOnScroll = false,\n    panOnScrollSpeed = 0.5,\n    panOnScrollMode = PanOnScrollMode.Free,\n    zoomOnDoubleClick = true,\n    panOnDrag = true,\n    onPaneClick,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    onPaneScroll,\n    onPaneContextMenu,\n    children,\n    onEdgeUpdate,\n    onEdgeContextMenu,\n    onEdgeDoubleClick,\n    onEdgeMouseEnter,\n    onEdgeMouseMove,\n    onEdgeMouseLeave,\n    onEdgeUpdateStart,\n    onEdgeUpdateEnd,\n    edgeUpdaterRadius = 10,\n    onNodesChange,\n    onEdgesChange,\n    noDragClassName = 'nodrag',\n    noWheelClassName = 'nowheel',\n    noPanClassName = 'nopan',\n    fitView = false,\n    fitViewOptions,\n    connectOnClick = true,\n    attributionPosition,\n    proOptions,\n    defaultEdgeOptions,\n    elevateNodesOnSelect = true,\n    elevateEdgesOnSelect = false,\n    disableKeyboardA11y = false,\n    autoPanOnConnect = true,\n    autoPanOnNodeDrag = true,\n    connectionRadius = 20,\n    isValidConnection,\n    onError,\n    style,\n    id,\n    ...rest\n  } = _ref69;\n  const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n  const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n  const rfId = id || '1';\n  return jsx(\"div\", {\n    ...rest,\n    style: {\n      ...style,\n      ...wrapperStyle\n    },\n    ref: ref,\n    className: cc(['react-flow', className]),\n    \"data-testid\": \"rf__wrapper\",\n    id: id,\n    children: jsxs(Wrapper, {\n      children: [jsx(GraphView$1, {\n        onInit: onInit,\n        onMove: onMove,\n        onMoveStart: onMoveStart,\n        onMoveEnd: onMoveEnd,\n        onNodeClick: onNodeClick,\n        onEdgeClick: onEdgeClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        onNodeDoubleClick: onNodeDoubleClick,\n        nodeTypes: nodeTypesWrapped,\n        edgeTypes: edgeTypesWrapped,\n        connectionLineType: connectionLineType,\n        connectionLineStyle: connectionLineStyle,\n        connectionLineComponent: connectionLineComponent,\n        connectionLineContainerStyle: connectionLineContainerStyle,\n        selectionKeyCode: selectionKeyCode,\n        selectionOnDrag: selectionOnDrag,\n        selectionMode: selectionMode,\n        deleteKeyCode: deleteKeyCode,\n        multiSelectionKeyCode: multiSelectionKeyCode,\n        panActivationKeyCode: panActivationKeyCode,\n        zoomActivationKeyCode: zoomActivationKeyCode,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        selectNodesOnDrag: selectNodesOnDrag,\n        defaultViewport: defaultViewport,\n        translateExtent: translateExtent,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        preventScrolling: preventScrolling,\n        zoomOnScroll: zoomOnScroll,\n        zoomOnPinch: zoomOnPinch,\n        zoomOnDoubleClick: zoomOnDoubleClick,\n        panOnScroll: panOnScroll,\n        panOnScrollSpeed: panOnScrollSpeed,\n        panOnScrollMode: panOnScrollMode,\n        panOnDrag: panOnDrag,\n        onPaneClick: onPaneClick,\n        onPaneMouseEnter: onPaneMouseEnter,\n        onPaneMouseMove: onPaneMouseMove,\n        onPaneMouseLeave: onPaneMouseLeave,\n        onPaneScroll: onPaneScroll,\n        onPaneContextMenu: onPaneContextMenu,\n        onSelectionContextMenu: onSelectionContextMenu,\n        onSelectionStart: onSelectionStart,\n        onSelectionEnd: onSelectionEnd,\n        onEdgeUpdate: onEdgeUpdate,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noDragClassName: noDragClassName,\n        noWheelClassName: noWheelClassName,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: elevateEdgesOnSelect,\n        rfId: rfId,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent\n      }), jsx(StoreUpdater, {\n        nodes: nodes,\n        edges: edges,\n        defaultNodes: defaultNodes,\n        defaultEdges: defaultEdges,\n        onConnect: onConnect,\n        onConnectStart: onConnectStart,\n        onConnectEnd: onConnectEnd,\n        onClickConnectStart: onClickConnectStart,\n        onClickConnectEnd: onClickConnectEnd,\n        nodesDraggable: nodesDraggable,\n        nodesConnectable: nodesConnectable,\n        nodesFocusable: nodesFocusable,\n        edgesFocusable: edgesFocusable,\n        elementsSelectable: elementsSelectable,\n        elevateNodesOnSelect: elevateNodesOnSelect,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        nodeExtent: nodeExtent,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        snapToGrid: snapToGrid,\n        snapGrid: snapGrid,\n        connectionMode: connectionMode,\n        translateExtent: translateExtent,\n        connectOnClick: connectOnClick,\n        defaultEdgeOptions: defaultEdgeOptions,\n        fitView: fitView,\n        fitViewOptions: fitViewOptions,\n        onNodesDelete: onNodesDelete,\n        onEdgesDelete: onEdgesDelete,\n        onNodeDragStart: onNodeDragStart,\n        onNodeDrag: onNodeDrag,\n        onNodeDragStop: onNodeDragStop,\n        onSelectionDrag: onSelectionDrag,\n        onSelectionDragStart: onSelectionDragStart,\n        onSelectionDragStop: onSelectionDragStop,\n        noPanClassName: noPanClassName,\n        nodeOrigin: nodeOrigin,\n        rfId: rfId,\n        autoPanOnConnect: autoPanOnConnect,\n        autoPanOnNodeDrag: autoPanOnNodeDrag,\n        onError: onError,\n        connectionRadius: connectionRadius,\n        isValidConnection: isValidConnection\n      }), jsx(Wrapper$1, {\n        onSelectionChange: onSelectionChange\n      }), children, jsx(Attribution, {\n        proOptions: proOptions,\n        position: attributionPosition\n      }), jsx(A11yDescriptions, {\n        rfId: rfId,\n        disableKeyboardA11y: disableKeyboardA11y\n      })]\n    })\n  });\n});\nReactFlow.displayName = 'ReactFlow';\nconst selector$1 = s => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer(_ref70) {\n  let {\n    children\n  } = _ref70;\n  const edgeLabelRenderer = useStore(selector$1);\n  if (!edgeLabelRenderer) {\n    return null;\n  }\n  return createPortal(children, edgeLabelRenderer);\n}\nfunction useUpdateNodeInternals() {\n  const store = useStoreApi();\n  return useCallback(id => {\n    const {\n      domNode,\n      updateNodeDimensions\n    } = store.getState();\n    const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${id}\"]`);\n    if (nodeElement) {\n      requestAnimationFrame(() => updateNodeDimensions([{\n        id,\n        nodeElement,\n        forceUpdate: true\n      }]));\n    }\n  }, []);\n}\nconst nodesSelector = state => state.getNodes();\nfunction useNodes() {\n  const nodes = useStore(nodesSelector);\n  return nodes;\n}\nconst edgesSelector = state => state.edges;\nfunction useEdges() {\n  const edges = useStore(edgesSelector);\n  return edges;\n}\nconst viewportSelector = state => ({\n  x: state.transform[0],\n  y: state.transform[1],\n  zoom: state.transform[2]\n});\nfunction useViewport() {\n  const viewport = useStore(viewportSelector, shallow);\n  return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n  return initialItems => {\n    const [items, setItems] = useState(initialItems);\n    const onItemsChange = useCallback(changes => setItems(items => applyChanges(changes, items)), []);\n    return [items, setItems, onItemsChange];\n  };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\nfunction useOnViewportChange(_ref71) {\n  let {\n    onStart,\n    onChange,\n    onEnd\n  } = _ref71;\n  const store = useStoreApi();\n  useEffect(() => {\n    store.setState({\n      onViewportChangeStart: onStart\n    });\n  }, [onStart]);\n  useEffect(() => {\n    store.setState({\n      onViewportChange: onChange\n    });\n  }, [onChange]);\n  useEffect(() => {\n    store.setState({\n      onViewportChangeEnd: onEnd\n    });\n  }, [onEnd]);\n}\nfunction useOnSelectionChange(_ref72) {\n  let {\n    onChange\n  } = _ref72;\n  const store = useStoreApi();\n  useEffect(() => {\n    store.setState({\n      onSelectionChange: onChange\n    });\n  }, [onChange]);\n}\nconst selector = s => {\n  if (s.nodeInternals.size === 0) {\n    return false;\n  }\n  return s.getNodes().every(n => n[internalsSymbol]?.handleBounds !== undefined);\n};\nfunction useNodesInitialized() {\n  const initialized = useStore(selector);\n  return initialized;\n}\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };","map":{"version":3,"names":["jsx","jsxs","Fragment","createContext","useContext","useMemo","memo","useRef","useState","useEffect","forwardRef","useCallback","cc","useStore","useStore$1","createStore","shallow","drag","select","pointer","zoomIdentity","zoom","createPortal","StoreContext","Provider$1","Provider","errorMessages","001","002","nodeType","004","005","006","id","type","008","sourceHandle","edge","targetHandle","010","edgeType","zustandErrorMessage","selector","equalityFn","store","Error","useStoreApi","getState","setState","subscribe","destroy","selector$g","s","userSelectionActive","Panel","_ref","position","children","className","style","rest","pointerEvents","positionClasses","split","Attribution","_ref2","proOptions","hideAttribution","href","target","rel","EdgeText","_ref3","x","y","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","edgeRef","edgeTextBbox","setEdgeTextBbox","width","height","edgeTextClasses","current","textBbox","getBBox","transform","visibility","rx","ry","dy","ref","EdgeText$1","getDimensions","node","offsetWidth","offsetHeight","clamp","val","min","arguments","length","undefined","max","Math","clampPosition","extent","calcAutoPanVelocity","value","abs","calcAutoPan","pos","bounds","xMovement","yMovement","getHostForElement","element","getRootNode","window","document","getBoundsOfBoxes","box1","box2","x2","y2","rectToBox","_ref4","boxToRect","_ref5","nodeToRect","positionAbsolute","getBoundsOfRects","rect1","rect2","getOverlappingArea","rectA","rectB","xOverlap","yOverlap","ceil","isRectObject","obj","isNumeric","n","isNaN","isFinite","internalsSymbol","Symbol","for","elementSelectionKeys","devWarn","message","process","env","NODE_ENV","console","warn","isReactKeyboardEvent","event","isInputDOMNode","kbEvent","nativeEvent","composedPath","isInput","includes","nodeName","hasAttribute","closest","isMouseEvent","getEventPosition","isMouseTriggered","evtX","clientX","touches","evtY","clientY","left","top","BaseEdge","_ref6","path","labelX","labelY","markerEnd","markerStart","interactionWidth","d","fill","strokeOpacity","strokeWidth","displayName","getMarkerEnd","markerType","markerEndId","getMouseHandler$1","handler","edges","find","e","getEdgeCenter","_ref7","sourceX","sourceY","targetX","targetY","xOffset","centerX","yOffset","centerY","getBezierEdgeCenter","_ref8","sourceControlX","sourceControlY","targetControlX","targetControlY","offsetX","offsetY","ConnectionMode","PanOnScrollMode","SelectionMode","ConnectionLineType","MarkerType","Position","getControl","_ref9","x1","y1","Left","Right","getSimpleBezierPath","_ref10","sourcePosition","Bottom","targetPosition","Top","SimpleBezierEdge","_ref11","handleDirections","getDirection","_ref12","source","distance","a","b","sqrt","pow","getPoints","_ref13","center","offset","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","points","defaultCenterX","defaultCenterY","defaultOffsetX","defaultOffsetY","verticalSplit","horizontalSplit","sourceTarget","targetSource","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","flipSourceTarget","pathPoints","getBend","c","size","bendSize","xDir","yDir","getSmoothStepPath","_ref14","borderRadius","reduce","res","p","i","segment","SmoothStepEdge","_ref15","pathOptions","StepEdge","props","getStraightPath","_ref16","StraightEdge","_ref17","calculateControlOffset","curvature","getControlWithCurvature","_ref18","getBezierPath","_ref19","BezierEdge","_ref20","NodeIdContext","Consumer","useNodeId","nodeId","isEdge","isNode","getOutgoers","nodes","outgoerIds","filter","map","getIncomers","incomersIds","getEdgeId","_ref21","getMarkerId","marker","rfId","idPrefix","Object","keys","sort","key","join","connectionExists","some","el","addEdge","edgeParams","concat","updateEdge","oldEdge","newConnection","options","shouldReplaceId","oldEdgeId","foundEdge","pointToRendererPoint","_ref22","_ref23","snapToGrid","_ref24","tx","ty","tScale","snapX","snapY","round","rendererPointToPoint","_ref25","_ref26","getNodePositionWithOrigin","nodeOrigin","getRectOfNodes","box","currBox","Infinity","getNodesInside","nodeInternals","rect","partially","excludeNonSelectableNodes","paneRect","visibleNodes","forEach","selectable","hidden","nodeRect","overlappingArea","notInitialized","partiallyVisible","area","isVisible","dragging","push","getConnectedEdges","nodeIds","getTransformForBounds","minZoom","maxZoom","padding","xZoom","yZoom","clampedZoom","boundsCenterX","boundsCenterY","getD3Transition","selection","duration","transition","getHandles","handleBounds","currentHandle","h","getClosestHandle","connectionRadius","handles","closestHandle","minDistance","handle","nullConnection","isValidHandle","connectionMode","fromNodeId","fromHandleId","fromType","isValidConnection","doc","isTarget","handleDomNode","querySelector","handleBelow","elementFromPoint","handleToCheck","classList","contains","result","isValid","connection","handleType","getHandleType","handleNodeId","getAttribute","handleId","Strict","getHandleLookup","_ref27","sourceHandles","targetHandles","edgeUpdaterType","resetRecentHandle","remove","getConnectionStatus","isInsideConnectionRadius","isHandleValid","connectionStatus","handlePointerDown","_ref28","onConnect","onEdgeUpdateEnd","domNode","autoPanOnConnect","onConnectStart","panBy","getNodes","cancelConnection","autoPanId","prevClosestHandle","clickedHandle","containerBounds","getBoundingClientRect","prevActiveHandle","connectionPosition","autoPanStarted","handleLookup","autoPan","requestAnimationFrame","connectionNodeId","connectionHandleId","connectionHandleType","onPointerMove","add","toggle","onPointerUp","onConnectEnd","cancelAnimationFrame","removeEventListener","addEventListener","alwaysValid","selector$f","connectionStartHandle","connectOnClick","noPanClassName","Handle","_ref29","isConnectable","onMouseDown","onTouchStart","onError","onConnectExtended","params","defaultEdgeOptions","onConnectAction","hasDefaultEdges","setEdges","onPointerDown","button","onClick","onClickConnectStart","onClickConnectEnd","isValidConnectionStore","isValidConnectionHandler","connectable","connecting","Handle$1","DefaultNode","_ref30","data","DefaultNode$1","InputNode","_ref31","InputNode$1","OutputNode","_ref32","OutputNode$1","GroupNode","selector$e","selectedNodes","selected","selectedEdges","selectId","areEqual","SelectionListener","_ref33","onSelectionChange","changeSelector","Wrapper$1","_ref34","storeHasSelectionChange","selector$d","setNodes","setDefaultNodesAndEdges","setMinZoom","setMaxZoom","setTranslateExtent","setNodeExtent","reset","useStoreUpdater","setStoreState","useDirectStoreUpdater","StoreUpdater","_ref35","defaultNodes","defaultEdges","nodesDraggable","nodesConnectable","nodesFocusable","edgesFocusable","elevateNodesOnSelect","nodeExtent","onNodesChange","onEdgesChange","elementsSelectable","snapGrid","translateExtent","fitView","fitViewOptions","onNodesDelete","onEdgesDelete","onNodeDrag","onNodeDragStart","onNodeDragStop","onSelectionDrag","onSelectionDragStart","onSelectionDragStop","autoPanOnNodeDrag","edgesWithDefaults","display","ariaLiveStyle","margin","border","overflow","clip","clipPath","ARIA_NODE_DESC_KEY","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$c","ariaLiveMessage","AriaLiveMessage","_ref36","A11yDescriptions","_ref37","disableKeyboardA11y","shiftX","shift","shiftY","EdgeUpdaterClassName","EdgeAnchor","_ref38","radius","onMouseEnter","onMouseOut","cx","cy","r","stroke","alwaysValidConnection","wrapEdge","EdgeComponent","EdgeWrapper","_ref39","onEdgeDoubleClick","animated","sourceHandleId","targetHandleId","onContextMenu","onMouseMove","onMouseLeave","edgeUpdaterRadius","onEdgeUpdate","onEdgeUpdateStart","ariaLabel","isFocusable","updateHover","setUpdateHover","updating","setUpdating","markerStartUrl","markerEndUrl","onEdgeClick","addSelectedEdges","nodesSelectionActive","onEdgeDoubleClickHandler","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseMove","onEdgeMouseLeave","handleEdgeUpdater","isSourceHandle","_onEdgeUpdateEnd","evt","onConnectEdge","onEdgeUpdaterSourceMouseDown","onEdgeUpdaterTargetMouseDown","onEdgeUpdaterMouseEnter","onEdgeUpdaterMouseOut","inactive","handleEdgeUpdate","onKeyDown","unselectNodesAndEdges","unselect","blur","onDoubleClick","tabIndex","role","createEdgeTypes","edgeTypes","standardTypes","default","straight","bezier","step","smoothstep","simplebezier","wrappedTypes","specialTypes","k","getHandlePosition","getHandle","getEdgePositions","sourceNodeRect","targetNodeRect","sourceHandlePos","targetHandlePos","isEdgeVisible","_ref40","sourcePos","targetPos","sourceWidth","sourceHeight","targetWidth","targetHeight","edgeBox","viewBox","getNodeData","isParentSelected","parentNode","get","hasSelector","nodeRef","matches","parentElement","getDragItems","mousePos","Array","from","values","draggable","delta","calcNextPosition","nextPosition","currentExtent","parent","parentX","parentY","parentPosition","getEventHandlerParams","_ref41","dragItems","extentedDragItems","getHandleBounds","nodeElement","querySelectorAll","handlesArray","nodeBounds","nodeOffset","getMouseHandler","handleNodeClick","_ref42","addSelectedNodes","multiSelectionActive","useGetPointerPosition","getPointerPosition","_ref43","sourceEvent","pointerPos","xSnapped","ySnapped","wrapSelectionDragFunc","selectionFunc","_","useDrag","_ref44","disabled","noDragClassName","handleSelector","isSelectable","selectNodesOnDrag","setDragging","lastPos","mousePosition","dragEvent","updateNodes","_ref45","updateNodePositions","hasChange","updatedPos","onDrag","currentNode","on","dragHandler","onStart","onStop","isDraggable","call","useUpdateNodePositions","updatePositions","xVelo","yVelo","factor","isShiftPressed","positionDiffX","positionDiffY","nodeUpdates","arrowKeyDiffs","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","wrapNode","NodeComponent","NodeWrapper","_ref46","xPos","yPos","xPosOrigin","yPosOrigin","resizeObserver","dragHandle","zIndex","isParent","initialized","prevSourcePosition","prevTargetPosition","prevType","hasPointerEvents","onMouseEnterHandler","onMouseMoveHandler","onMouseLeaveHandler","onContextMenuHandler","onDoubleClickHandler","onSelectNodeHandler","prototype","hasOwnProperty","replace","toLowerCase","shiftKey","currNode","observe","unobserve","typeChanged","sourcePosChanged","targetPosChanged","updateNodeDimensions","forceUpdate","createNodeTypes","nodeTypes","input","output","group","getPositionWithOrigin","_ref47","origin","useKeyPress","keyCode","keyPressed","setKeyPressed","modifierPressed","pressedKeys","Set","keyCodes","keysToWatch","keyCodeArr","isArray","kc","keysFlat","item","downHandler","ctrlKey","metaKey","keyOrCode","useKeyOrCode","code","isMatchingKey","preventDefault","upHandler","clear","delete","resetHandler","isUp","every","has","eventCode","calculateXYZPosition","parentNodePosition","z","updateAbsoluteNodePositions","parentNodes","createNodeInternals","nextNodeInternals","Map","selectedNodeZ","currInternals","internals","defineProperty","enumerable","set","d3Zoom","d3Selection","fitViewOnInitDone","fitViewOnInit","isInitialFitView","initial","d3initialized","includeHiddenNodes","optionNode","nodesInitialized","nextTransform","translate","scale","handleControlledNodeSelectionChange","nodeChanges","change","handleControlledEdgeSelectionChange","edgeChanges","updateNodesAndEdgesSelections","_ref48","changedNodes","changedEdges","hasDefaultNodes","noop","initialViewportHelper","zoomIn","zoomOut","zoomTo","getZoom","setViewport","getViewport","setCenter","fitBounds","project","viewportInitialized","selector$b","useViewportHelper","viewportHelperFunctions","scaleBy","zoomLevel","scaleTo","nextZoom","useReactFlow","viewportHelper","getNode","getEdges","getEdge","payload","nextNodes","changes","nextEdges","addNodes","currentNodes","addEdges","toObject","viewport","deleteElements","_ref49","nodesDeleted","edgesDeleted","edgeIds","nodesToRemove","parentHit","deletable","deletableEdges","initialHitEdges","connectedEdges","edgesToRemove","edgeIdsToRemove","getNodeRect","nodeOrRect","isRect","getIntersectingNodes","currNodeRect","isNodeIntersecting","useGlobalKeyHandler","_ref50","deleteKeyCode","multiSelectionKeyCode","deleteKeyPressed","multiSelectionKeyPressed","useResizeHandler","rendererNode","updateDimensions","ResizeObserver","containerStyle","viewChanged","prevViewport","eventViewport","eventToFlowTransform","isWrappedWithClass","isRightClickPan","panOnDrag","usedButton","selector$a","d3ZoomHandler","ZoomPane","_ref51","onMove","onMoveStart","onMoveEnd","onPaneContextMenu","zoomOnScroll","zoomOnPinch","panOnScroll","panOnScrollSpeed","panOnScrollMode","Free","zoomOnDoubleClick","defaultViewport","zoomActivationKeyCode","preventScrolling","noWheelClassName","timerId","isZoomingOrPanning","zoomedWithRightMouseButton","zoomPane","prevTransform","zoomActivationKeyPressed","mouseButton","bbox","d3ZoomInstance","scaleExtent","updatedTransform","constrainedTransform","constrain","stopImmediatePropagation","currentZoom","property","point","pinchDelta","deltaY","deltaMode","deltaNormalize","deltaX","Vertical","Horizontal","translateBy","onViewportChangeStart","paneDragging","flowTransform","onViewportChange","onViewportChangeEnd","clearTimeout","setTimeout","zoomScroll","pinchZoom","buttonAllowed","selector$9","userSelectionRect","UserSelection","isActive","handleParentExpand","updateItem","extendWidth","extendHeight","xDiff","yDiff","applyChanges","elements","initElements","currentChanges","currentChange","expandParent","dimensions","updateStyle","resizing","applyNodeChanges","applyEdgeChanges","createSelectionChange","getSelectionChanges","items","selectedIds","willBeSelected","wrapHandler","containerRef","selector$8","Pane","_ref52","isSelecting","selectionMode","Full","onSelectionStart","onSelectionEnd","onPaneClick","onPaneScroll","onPaneMouseEnter","onPaneMouseMove","onPaneMouseLeave","container","prevSelectedNodesCount","prevSelectedEdgesCount","resetUserSelection","resetSelectedElements","onWheel","startX","startY","nextUserSelectRect","Partial","selectedEdgeIds","selectedNodeIds","onMouseUp","hasActiveSelection","selector$7","transformString","NodesSelection","_ref53","onSelectionContextMenu","focus","preventScroll","NodesSelection$1","selector$6","FlowRenderer","_ref54","selectionKeyCode","selectionOnDrag","panActivationKeyCode","_panOnDrag","selectionKeyPressed","panActivationKeyPressed","FlowRenderer$1","useVisibleNodes","onlyRenderVisible","selector$5","NodeRenderer","onlyRenderVisibleElements","resizeObserverRef","observer","entries","updates","entry","disconnect","focusable","clampedPosition","posX","posY","posOrigin","onNodeClick","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeContextMenu","onNodeDoubleClick","NodeRenderer$1","defaultEdgeTree","level","isMaxLevel","groupEdgesByZLevel","elevateEdgesOnSelect","maxLevel","levelLookup","tree","hasZIndex","edgeTree","_ref55","useVisibleEdges","sourceNode","targetNode","ArrowSymbol","_ref56","color","strokeLinecap","strokeLinejoin","ArrowClosedSymbol","_ref57","MarkerSymbols","Arrow","ArrowClosed","useMarkerSymbol","symbol","symbolExists","Marker","_ref58","markerUnits","orient","markerWidth","markerHeight","refX","refY","markerSelector","_ref59","defaultColor","ids","markers","markerId","localeCompare","MarkerDefinitions","_ref60","m","MarkerDefinitions$1","selector$4","EdgeRenderer","_ref61","defaultMarkerColor","_ref62","sourceHandleBounds","sourceIsValid","targetHandleBounds","targetIsValid","targetNodeHandles","EdgeRenderer$1","selector$3","Viewport","_ref63","useOnInitHandler","onInit","rfInstance","isInitialized","oppositePosition","ConnectionLine","_ref64","Bezier","CustomComponent","fromNode","toX","toY","fromHandleBounds","Loose","fromHandle","fromHandleX","fromHandleY","fromX","fromY","fromPosition","toPosition","connectionLineType","connectionLineStyle","dAttr","pathParams","Step","SmoothStep","SimpleBezier","selector$2","ConnectionLineWrapper","_ref65","component","GraphView","_ref66","connectionLineComponent","connectionLineContainerStyle","GraphView$1","infiniteExtent","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","initialState","fitViewOnInitOptions","createRFStore","viewportNode","getComputedStyle","m22","DOMMatrixReadOnly","update","doUpdate","nextFitViewOnInitDone","nodeDragItems","positionChanged","triggerNodeChanges","edgeId","storeEdges","nodesToUnselect","edgesToUnselect","ReactFlowProvider","_ref67","storeRef","Wrapper","_ref68","isWrapped","useNodeOrEdgeTypes","nodeOrEdgeTypes","createTypes","typesKeysRef","typesParsed","typeKeys","defaultNodeTypes","defaultEdgeTypes","initNodeOrigin","initSnapGrid","initDefaultViewport","wrapperStyle","ReactFlow","_ref69","attributionPosition","nodeTypesWrapped","edgeTypesWrapped","selector$1","EdgeLabelRenderer","_ref70","edgeLabelRenderer","useUpdateNodeInternals","nodesSelector","state","useNodes","edgesSelector","useEdges","viewportSelector","useViewport","createUseItemsState","initialItems","setItems","onItemsChange","useNodesState","useEdgesState","useOnViewportChange","_ref71","onChange","onEnd","useOnSelectionChange","_ref72","useNodesInitialized"],"sources":["/Users/jungwon/Desktop/shjw/node_modules/@reactflow/core/dist/esm/index.js"],"sourcesContent":["import { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStore as useStore$1, createStore } from 'zustand';\nimport { shallow } from 'zustand/shallow';\nimport { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { createPortal } from 'react-dom';\n\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\n\nconst errorMessages = {\n    '001': () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n    '002': () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n    '003': (nodeType) => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n    '004': () => 'The React Flow parent container needs a width and a height to render the graph.',\n    '005': () => 'Only child nodes can use a parent extent.',\n    '006': () => \"Can't create edge. An edge needs a source and a target.\",\n    '007': (id) => `The old edge with id=${id} does not exist.`,\n    '009': (type) => `Marker type \"${type}\" doesn't exist.`,\n    '008': (sourceHandle, edge) => `Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: \"${!sourceHandle ? edge.sourceHandle : edge.targetHandle}\", edge id: ${edge.id}.`,\n    '010': () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n    '011': (edgeType) => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n};\n\nconst zustandErrorMessage = errorMessages['001']();\nfunction useStore(selector, equalityFn) {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useStore$1(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useMemo(() => ({\n        getState: store.getState,\n        setState: store.setState,\n        subscribe: store.subscribe,\n        destroy: store.destroy,\n    }), [store]);\n};\n\nconst selector$g = (s) => (s.userSelectionActive ? 'none' : 'all');\nfunction Panel({ position, children, className, style, ...rest }) {\n    const pointerEvents = useStore(selector$g);\n    const positionClasses = `${position}`.split('-');\n    return (jsx(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), style: { ...style, pointerEvents }, ...rest, children: children }));\n}\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\n    if (proOptions?.hideAttribution) {\n        return null;\n    }\n    return (jsx(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\", children: jsx(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\", children: \"React Flow\" }) }));\n}\n\nconst EdgeText = ({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) => {\n    const edgeRef = useRef(null);\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 0, y: 0, width: 0, height: 0 });\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n    useEffect(() => {\n        if (edgeRef.current) {\n            const textBbox = edgeRef.current.getBBox();\n            setEdgeTextBbox({\n                x: textBbox.x,\n                y: textBbox.y,\n                width: textBbox.width,\n                height: textBbox.height,\n            });\n        }\n    }, [label]);\n    if (typeof label === 'undefined' || !label) {\n        return null;\n    }\n    return (jsxs(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest, children: [labelShowBg && (jsx(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })), jsx(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeRef, style: labelStyle, children: label }), children] }));\n};\nvar EdgeText$1 = memo(EdgeText);\n\nconst getDimensions = (node) => ({\n    width: node.offsetWidth,\n    height: node.offsetHeight,\n});\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = { x: 0, y: 0 }, extent) => ({\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1]),\n});\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n    if (value < min) {\n        return clamp(Math.abs(value - min), 1, 50) / 50;\n    }\n    else if (value > max) {\n        return -clamp(Math.abs(value - max), 1, 50) / 50;\n    }\n    return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n    const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n    const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n    return [xMovement, yMovement];\n};\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2),\n});\nconst rectToBox = ({ x, y, width, height }) => ({\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n});\nconst boxToRect = ({ x, y, x2, y2 }) => ({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y,\n});\nconst nodeToRect = (node) => ({\n    ...(node.positionAbsolute || { x: 0, y: 0 }),\n    width: node.width || 0,\n    height: node.height || 0,\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n    return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n    if (process.env.NODE_ENV === 'development') {\n        console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n    }\n};\nconst isReactKeyboardEvent = (event) => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n    const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n    // using composed path for handling shadow dom\n    const target = (kbEvent.composedPath?.()?.[0] || event.target);\n    const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable');\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\n    return isInput || !!target?.closest('.nokey');\n}\nconst isMouseEvent = (event) => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n    const isMouseTriggered = isMouseEvent(event);\n    const evtX = isMouseTriggered ? event.clientX : event.touches?.[0].clientX;\n    const evtY = isMouseTriggered ? event.clientY : event.touches?.[0].clientY;\n    return {\n        x: evtX - (bounds?.left ?? 0),\n        y: evtY - (bounds?.top ?? 0),\n    };\n};\n\nconst BaseEdge = ({ path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth = 20, }) => {\n    return (jsxs(Fragment, { children: [jsx(\"path\", { style: style, d: path, fill: \"none\", className: \"react-flow__edge-path\", markerEnd: markerEnd, markerStart: markerStart }), interactionWidth && (jsx(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth, className: \"react-flow__edge-interaction\" })), label && isNumeric(labelX) && isNumeric(labelY) ? (jsx(EdgeText$1, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null] }));\n};\nBaseEdge.displayName = 'BaseEdge';\n\nconst getMarkerEnd = (markerType, markerEndId) => {\n    if (typeof markerEndId !== 'undefined' && markerEndId) {\n        return `url(#${markerEndId})`;\n    }\n    return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const edge = getState().edges.find((e) => e.id === id);\n            if (edge) {\n                handler(event, { ...edge });\n            }\n        };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\n    const xOffset = Math.abs(targetX - sourceX) / 2;\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n    const yOffset = Math.abs(targetY - sourceY) / 2;\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n    return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n    const offsetX = Math.abs(centerX - sourceX);\n    const offsetY = Math.abs(centerY - sourceY);\n    return [centerX, centerY, offsetX, offsetY];\n}\n\nvar ConnectionMode;\n(function (ConnectionMode) {\n    ConnectionMode[\"Strict\"] = \"strict\";\n    ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n    PanOnScrollMode[\"Free\"] = \"free\";\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Partial\"] = \"partial\";\n    SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\n\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n    ConnectionLineType[\"Bezier\"] = \"default\";\n    ConnectionLineType[\"Straight\"] = \"straight\";\n    ConnectionLineType[\"Step\"] = \"step\";\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n    MarkerType[\"Arrow\"] = \"arrow\";\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\n(function (Position) {\n    Position[\"Left\"] = \"left\";\n    Position[\"Top\"] = \"top\";\n    Position[\"Right\"] = \"right\";\n    Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\n    if (pos === Position.Left || pos === Position.Right) {\n        return [0.5 * (x1 + x2), y1];\n    }\n    return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\n    const [sourceControlX, sourceControlY] = getControl({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n    });\n    const [targetControlX, targetControlY] = getControl({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst SimpleBezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSimpleBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\n\nconst handleDirections = {\n    [Position.Left]: { x: -1, y: 0 },\n    [Position.Right]: { x: 1, y: 0 },\n    [Position.Top]: { x: 0, y: -1 },\n    [Position.Bottom]: { x: 0, y: 1 },\n};\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\n    }\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\n    const sourceDir = handleDirections[sourcePosition];\n    const targetDir = handleDirections[targetPosition];\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\n    const dir = getDirection({\n        source: sourceGapped,\n        sourcePosition,\n        target: targetGapped,\n    });\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n    const currDir = dir[dirAccessor];\n    let points = [];\n    let centerX, centerY;\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n    });\n    // opposite handle positions, default case\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n        centerX = center.x || defaultCenterX;\n        centerY = center.y || defaultCenterY;\n        //    --->\n        //    |\n        // >---\n        const verticalSplit = [\n            { x: centerX, y: sourceGapped.y },\n            { x: centerX, y: targetGapped.y },\n        ];\n        //    |\n        //  ---\n        //  |\n        const horizontalSplit = [\n            { x: sourceGapped.x, y: centerY },\n            { x: targetGapped.x, y: centerY },\n        ];\n        if (sourceDir[dirAccessor] === currDir) {\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n        }\n        else {\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n        }\n    }\n    else {\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\n        // this handles edges with same handle positions\n        if (dirAccessor === 'x') {\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\n        }\n        else {\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\n        }\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\n        if (sourcePosition !== targetPosition) {\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\n            if (flipSourceTarget) {\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\n            }\n        }\n        centerX = points[0].x;\n        centerY = points[0].y;\n    }\n    const pathPoints = [source, sourceGapped, ...points, targetGapped, target];\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n    const { x, y } = b;\n    // no bend\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\n        return `L${x} ${y}`;\n    }\n    // first segment is horizontal\n    if (a.y === y) {\n        const xDir = a.x < c.x ? -1 : 1;\n        const yDir = a.y < c.y ? 1 : -1;\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n    }\n    const xDir = a.x < c.x ? 1 : -1;\n    const yDir = a.y < c.y ? -1 : 1;\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n        source: { x: sourceX, y: sourceY },\n        sourcePosition,\n        target: { x: targetX, y: targetY },\n        targetPosition,\n        center: { x: centerX, y: centerY },\n        offset,\n    });\n    const path = points.reduce((res, p, i) => {\n        let segment = '';\n        if (i > 0 && i < points.length - 1) {\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n        }\n        else {\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n        }\n        res += segment;\n        return res;\n    }, '');\n    return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSmoothStepPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        borderRadius: pathOptions?.borderRadius,\n        offset: pathOptions?.offset,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\n\nconst StepEdge = memo((props) => (jsx(SmoothStepEdge, { ...props, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) })));\nStepEdge.displayName = 'StepEdge';\n\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n    });\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nStraightEdge.displayName = 'StraightEdge';\n\nfunction calculateControlOffset(distance, curvature) {\n    if (distance >= 0) {\n        return 0.5 * distance;\n    }\n    return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\n    switch (pos) {\n        case Position.Left:\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\n        case Position.Right:\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\n        case Position.Top:\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n        case Position.Bottom:\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n    }\n}\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n        c: curvature,\n    });\n    const [targetControlX, targetControlY] = getControlWithCurvature({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n        c: curvature,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst BezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        curvature: pathOptions?.curvature,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nBezierEdge.displayName = 'BezierEdge';\n\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n    const nodeId = useContext(NodeIdContext);\n    return nodeId;\n};\n\nconst isEdge = (element) => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = (element) => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const outgoerIds = edges.filter((e) => e.source === node.id).map((e) => e.target);\n    return nodes.filter((n) => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const incomersIds = edges.filter((e) => e.target === node.id).map((e) => e.source);\n    return nodes.filter((n) => incomersIds.includes(n.id));\n};\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst getMarkerId = (marker, rfId) => {\n    if (typeof marker === 'undefined') {\n        return '';\n    }\n    if (typeof marker === 'string') {\n        return marker;\n    }\n    const idPrefix = rfId ? `${rfId}__` : '';\n    return `${idPrefix}${Object.keys(marker)\n        .sort()\n        .map((key) => `${key}=${marker[key]}`)\n        .join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n    return edges.some((el) => el.source === edge.source &&\n        el.target === edge.target &&\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\n};\nconst addEdge = (edgeParams, edges) => {\n    if (!edgeParams.source || !edgeParams.target) {\n        devWarn('006', errorMessages['006']());\n        return edges;\n    }\n    let edge;\n    if (isEdge(edgeParams)) {\n        edge = { ...edgeParams };\n    }\n    else {\n        edge = {\n            ...edgeParams,\n            id: getEdgeId(edgeParams),\n        };\n    }\n    if (connectionExists(edge, edges)) {\n        return edges;\n    }\n    return edges.concat(edge);\n};\nconst updateEdge = (oldEdge, newConnection, edges, options = { shouldReplaceId: true }) => {\n    const { id: oldEdgeId, ...rest } = oldEdge;\n    if (!newConnection.source || !newConnection.target) {\n        devWarn('006', errorMessages['006']());\n        return edges;\n    }\n    const foundEdge = edges.find((e) => e.id === oldEdgeId);\n    if (!foundEdge) {\n        devWarn('007', errorMessages['007'](oldEdgeId));\n        return edges;\n    }\n    // Remove old edge and create the new edge with parameters of old edge.\n    const edge = {\n        ...rest,\n        id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n        source: newConnection.source,\n        target: newConnection.target,\n        sourceHandle: newConnection.sourceHandle,\n        targetHandle: newConnection.targetHandle,\n    };\n    return edges.filter((e) => e.id !== oldEdgeId).concat(edge);\n};\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid, [snapX, snapY]) => {\n    const position = {\n        x: (x - tx) / tScale,\n        y: (y - ty) / tScale,\n    };\n    if (snapToGrid) {\n        return {\n            x: snapX * Math.round(position.x / snapX),\n            y: snapY * Math.round(position.y / snapY),\n        };\n    }\n    return position;\n};\nconst rendererPointToPoint = ({ x, y }, [tx, ty, tScale]) => {\n    return {\n        x: x * tScale + tx,\n        y: y * tScale + ty,\n    };\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n    if (!node) {\n        return {\n            x: 0,\n            y: 0,\n            positionAbsolute: {\n                x: 0,\n                y: 0,\n            },\n        };\n    }\n    const offsetX = (node.width ?? 0) * nodeOrigin[0];\n    const offsetY = (node.height ?? 0) * nodeOrigin[1];\n    const position = {\n        x: node.position.x - offsetX,\n        y: node.position.y - offsetY,\n    };\n    return {\n        ...position,\n        positionAbsolute: node.positionAbsolute\n            ? {\n                x: node.positionAbsolute.x - offsetX,\n                y: node.positionAbsolute.y - offsetY,\n            }\n            : position,\n    };\n};\nconst getRectOfNodes = (nodes, nodeOrigin = [0, 0]) => {\n    if (nodes.length === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const box = nodes.reduce((currBox, node) => {\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n        return getBoundsOfBoxes(currBox, rectToBox({\n            x,\n            y,\n            width: node.width || 0,\n            height: node.height || 0,\n        }));\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\n    return boxToRect(box);\n};\nconst getNodesInside = (nodeInternals, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false, nodeOrigin = [0, 0]) => {\n    const paneRect = {\n        x: (rect.x - tx) / tScale,\n        y: (rect.y - ty) / tScale,\n        width: rect.width / tScale,\n        height: rect.height / tScale,\n    };\n    const visibleNodes = [];\n    nodeInternals.forEach((node) => {\n        const { width, height, selectable = true, hidden = false } = node;\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\n            return false;\n        }\n        const { positionAbsolute } = getNodePositionWithOrigin(node, nodeOrigin);\n        const nodeRect = {\n            x: positionAbsolute.x,\n            y: positionAbsolute.y,\n            width: width || 0,\n            height: height || 0,\n        };\n        const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n        const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n        const partiallyVisible = partially && overlappingArea > 0;\n        const area = (width || 0) * (height || 0);\n        const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n        if (isVisible || node.dragging) {\n            visibleNodes.push(node);\n        }\n    });\n    return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n    const nodeIds = nodes.map((node) => node.id);\n    return edges.filter((edge) => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\nconst getTransformForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const xZoom = width / (bounds.width * (1 + padding));\n    const yZoom = height / (bounds.height * (1 + padding));\n    const zoom = Math.min(xZoom, yZoom);\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\n    const boundsCenterX = bounds.x + bounds.width / 2;\n    const boundsCenterY = bounds.y + bounds.height / 2;\n    const x = width / 2 - boundsCenterX * clampedZoom;\n    const y = height / 2 - boundsCenterY * clampedZoom;\n    return [x, y, clampedZoom];\n};\nconst getD3Transition = (selection, duration = 0) => {\n    return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n    return (handleBounds[type] || []).reduce((res, h) => {\n        if (`${node.id}-${h.id}-${type}` !== currentHandle) {\n            res.push({\n                id: h.id || null,\n                type,\n                nodeId: node.id,\n                x: (node.positionAbsolute?.x ?? 0) + h.x + h.width / 2,\n                y: (node.positionAbsolute?.y ?? 0) + h.y + h.height / 2,\n            });\n        }\n        return res;\n    }, []);\n}\nfunction getClosestHandle(pos, connectionRadius, handles) {\n    let closestHandle = null;\n    let minDistance = Infinity;\n    handles.forEach((handle) => {\n        const distance = Math.sqrt(Math.pow(handle.x - pos.x, 2) + Math.pow(handle.y - pos.y, 2));\n        if (distance <= connectionRadius && distance < minDistance) {\n            minDistance = distance;\n            closestHandle = handle;\n        }\n    });\n    return closestHandle;\n}\nconst nullConnection = { source: null, target: null, sourceHandle: null, targetHandle: null };\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(event, handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n    const isTarget = fromType === 'target';\n    const handleDomNode = doc.querySelector(`.react-flow__handle[data-id=\"${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`);\n    const { x, y } = getEventPosition(event);\n    const handleBelow = doc.elementFromPoint(x, y);\n    const handleToCheck = handleBelow?.classList.contains('react-flow__handle') ? handleBelow : handleDomNode;\n    const result = {\n        handleDomNode: handleToCheck,\n        isValid: false,\n        connection: nullConnection,\n    };\n    if (handleToCheck) {\n        const handleType = getHandleType(undefined, handleToCheck);\n        const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n        const handleId = handleToCheck.getAttribute('data-handleid');\n        const connection = {\n            source: isTarget ? handleNodeId : fromNodeId,\n            sourceHandle: isTarget ? handleId : fromHandleId,\n            target: isTarget ? fromNodeId : handleNodeId,\n            targetHandle: isTarget ? fromHandleId : handleId,\n        };\n        result.connection = connection;\n        // in strict mode we don't allow target to target or source to source connections\n        const isValid = handleToCheck.classList.contains('connectable') &&\n            (connectionMode === ConnectionMode.Strict\n                ? (isTarget && handleType === 'source') || (!isTarget && handleType === 'target')\n                : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n        if (isValid) {\n            result.isValid = isValidConnection(connection);\n        }\n    }\n    return result;\n}\nfunction getHandleLookup({ nodes, nodeId, handleId, handleType }) {\n    return nodes.reduce((res, node) => {\n        if (node[internalsSymbol]) {\n            const { handleBounds } = node[internalsSymbol];\n            let sourceHandles = [];\n            let targetHandles = [];\n            if (handleBounds) {\n                sourceHandles = getHandles(node, handleBounds, 'source', `${nodeId}-${handleId}-${handleType}`);\n                targetHandles = getHandles(node, handleBounds, 'target', `${nodeId}-${handleId}-${handleType}`);\n            }\n            res.push(...sourceHandles, ...targetHandles);\n        }\n        return res;\n    }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n    if (edgeUpdaterType) {\n        return edgeUpdaterType;\n    }\n    else if (handleDomNode?.classList.contains('target')) {\n        return 'target';\n    }\n    else if (handleDomNode?.classList.contains('source')) {\n        return 'source';\n    }\n    return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n    handleDomNode?.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n    let connectionStatus = null;\n    if (isHandleValid) {\n        connectionStatus = 'valid';\n    }\n    else if (isInsideConnectionRadius && !isHandleValid) {\n        connectionStatus = 'invalid';\n    }\n    return connectionStatus;\n}\n\nfunction handlePointerDown({ event, handleId, nodeId, onConnect, isTarget, getState, setState, isValidConnection, edgeUpdaterType, onEdgeUpdateEnd, }) {\n    // when react-flow is used inside a shadow root we can't use document\n    const doc = getHostForElement(event.target);\n    const { connectionMode, domNode, autoPanOnConnect, connectionRadius, onConnectStart, panBy, getNodes, cancelConnection, } = getState();\n    let autoPanId = 0;\n    let prevClosestHandle;\n    const { x, y } = getEventPosition(event);\n    const clickedHandle = doc?.elementFromPoint(x, y);\n    const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n    const containerBounds = domNode?.getBoundingClientRect();\n    if (!containerBounds || !handleType) {\n        return;\n    }\n    let prevActiveHandle;\n    let connectionPosition = getEventPosition(event, containerBounds);\n    let autoPanStarted = false;\n    let connection = null;\n    let isValid = false;\n    let handleDomNode = null;\n    const handleLookup = getHandleLookup({\n        nodes: getNodes(),\n        nodeId,\n        handleId,\n        handleType,\n    });\n    // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n    const autoPan = () => {\n        if (!autoPanOnConnect) {\n            return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n        panBy({ x: xMovement, y: yMovement });\n        autoPanId = requestAnimationFrame(autoPan);\n    };\n    setState({\n        connectionPosition,\n        connectionNodeId: nodeId,\n        connectionHandleId: handleId,\n        connectionHandleType: handleType,\n        connectionStatus: null,\n    });\n    onConnectStart?.(event, { nodeId, handleId, handleType });\n    function onPointerMove(event) {\n        const { transform } = getState();\n        connectionPosition = getEventPosition(event, containerBounds);\n        prevClosestHandle = getClosestHandle(pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup);\n        if (!autoPanStarted) {\n            autoPan();\n            autoPanStarted = true;\n        }\n        const result = isValidHandle(event, prevClosestHandle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc);\n        handleDomNode = result.handleDomNode;\n        connection = result.connection;\n        isValid = result.isValid;\n        setState({\n            connectionPosition: prevClosestHandle && isValid\n                ? rendererPointToPoint({\n                    x: prevClosestHandle.x,\n                    y: prevClosestHandle.y,\n                }, transform)\n                : connectionPosition,\n            connectionStatus: getConnectionStatus(!!prevClosestHandle, isValid),\n        });\n        if (!prevClosestHandle && !isValid && !handleDomNode) {\n            return resetRecentHandle(prevActiveHandle);\n        }\n        if (connection.source !== connection.target && handleDomNode) {\n            resetRecentHandle(prevActiveHandle);\n            prevActiveHandle = handleDomNode;\n            // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n            handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n            handleDomNode.classList.toggle('valid', isValid);\n            handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n        }\n    }\n    function onPointerUp(event) {\n        if ((prevClosestHandle || handleDomNode) && connection && isValid) {\n            onConnect?.(connection);\n        }\n        // it's important to get a fresh reference from the store here\n        // in order to get the latest state of onConnectEnd\n        getState().onConnectEnd?.(event);\n        if (edgeUpdaterType) {\n            onEdgeUpdateEnd?.(event);\n        }\n        resetRecentHandle(prevActiveHandle);\n        cancelConnection();\n        cancelAnimationFrame(autoPanId);\n        autoPanStarted = false;\n        isValid = false;\n        connection = null;\n        handleDomNode = null;\n        doc.removeEventListener('mousemove', onPointerMove);\n        doc.removeEventListener('mouseup', onPointerUp);\n        doc.removeEventListener('touchmove', onPointerMove);\n        doc.removeEventListener('touchend', onPointerUp);\n    }\n    doc.addEventListener('mousemove', onPointerMove);\n    doc.addEventListener('mouseup', onPointerUp);\n    doc.addEventListener('touchmove', onPointerMove);\n    doc.addEventListener('touchend', onPointerUp);\n}\n\nconst alwaysValid = () => true;\nconst selector$f = (s) => ({\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName,\n});\nconst Handle = forwardRef(({ type = 'source', position = Position.Top, isValidConnection, isConnectable = true, id, onConnect, children, className, onMouseDown, onTouchStart, ...rest }, ref) => {\n    const store = useStoreApi();\n    const nodeId = useNodeId();\n    if (!nodeId) {\n        store.getState().onError?.('010', errorMessages['010']());\n        return null;\n    }\n    const { connectionStartHandle, connectOnClick, noPanClassName } = useStore(selector$f, shallow);\n    const handleId = id || null;\n    const isTarget = type === 'target';\n    const onConnectExtended = (params) => {\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\n        const edgeParams = {\n            ...defaultEdgeOptions,\n            ...params,\n        };\n        if (hasDefaultEdges) {\n            const { edges, setEdges } = store.getState();\n            setEdges(addEdge(edgeParams, edges));\n        }\n        onConnectAction?.(edgeParams);\n        onConnect?.(edgeParams);\n    };\n    const onPointerDown = (event) => {\n        const isMouseTriggered = isMouseEvent(event);\n        if ((isMouseTriggered && event.button === 0) || !isMouseTriggered) {\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectExtended,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid,\n            });\n        }\n        if (isMouseTriggered) {\n            onMouseDown?.(event);\n        }\n        else {\n            onTouchStart?.(event);\n        }\n    };\n    const onClick = (event) => {\n        const { onClickConnectStart, onClickConnectEnd, connectionMode, isValidConnection: isValidConnectionStore, } = store.getState();\n        if (!connectionStartHandle) {\n            onClickConnectStart?.(event, { nodeId, handleId, handleType: type });\n            store.setState({ connectionStartHandle: { nodeId, type, handleId } });\n            return;\n        }\n        const doc = getHostForElement(event.target);\n        const isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n        const { connection, isValid } = isValidHandle(event, {\n            nodeId,\n            id: handleId,\n            type,\n        }, connectionMode, connectionStartHandle.nodeId, connectionStartHandle.handleId || null, connectionStartHandle.type, isValidConnectionHandler, doc);\n        if (isValid) {\n            onConnectExtended(connection);\n        }\n        onClickConnectEnd?.(event);\n        store.setState({ connectionStartHandle: null });\n    };\n    return (jsx(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, \"data-id\": `${nodeId}-${handleId}-${type}`, className: cc([\n            'react-flow__handle',\n            `react-flow__handle-${position}`,\n            'nodrag',\n            noPanClassName,\n            className,\n            {\n                source: !isTarget,\n                target: isTarget,\n                connectable: isConnectable,\n                connecting: connectionStartHandle?.nodeId === nodeId &&\n                    connectionStartHandle?.handleId === handleId &&\n                    connectionStartHandle?.type === type,\n            },\n        ]), onMouseDown: onPointerDown, onTouchStart: onPointerDown, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest, children: children }));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\n\nconst DefaultNode = ({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) => {\n    return (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\n\nconst InputNode = ({ data, isConnectable, sourcePosition = Position.Bottom }) => (jsxs(Fragment, { children: [data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\n\nconst OutputNode = ({ data, isConnectable, targetPosition = Position.Top }) => (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label] }));\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\n\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\n\nconst selector$e = (s) => ({\n    selectedNodes: s.getNodes().filter((n) => n.selected),\n    selectedEdges: s.edges.filter((e) => e.selected),\n});\nconst selectId = (obj) => obj.id;\nfunction areEqual(a, b) {\n    return (shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) &&\n        shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId)));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(({ onSelectionChange }) => {\n    const store = useStoreApi();\n    const { selectedNodes, selectedEdges } = useStore(selector$e, areEqual);\n    useEffect(() => {\n        const params = { nodes: selectedNodes, edges: selectedEdges };\n        onSelectionChange?.(params);\n        store.getState().onSelectionChange?.(params);\n    }, [selectedNodes, selectedEdges, onSelectionChange]);\n    return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = (s) => !!s.onSelectionChange;\nfunction Wrapper$1({ onSelectionChange }) {\n    const storeHasSelectionChange = useStore(changeSelector);\n    if (onSelectionChange || storeHasSelectionChange) {\n        return jsx(SelectionListener, { onSelectionChange: onSelectionChange });\n    }\n    return null;\n}\n\nconst selector$d = (s) => ({\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset,\n});\nfunction useStoreUpdater(value, setStoreState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setStoreState(value);\n        }\n    }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setState({ [key]: value });\n        }\n    }, [value]);\n}\nconst StoreUpdater = ({ nodes, edges, defaultNodes, defaultEdges, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, nodesDraggable, nodesConnectable, nodesFocusable, edgesFocusable, elevateNodesOnSelect, minZoom, maxZoom, nodeExtent, onNodesChange, onEdgesChange, elementsSelectable, connectionMode, snapGrid, snapToGrid, translateExtent, connectOnClick, defaultEdgeOptions, fitView, fitViewOptions, onNodesDelete, onEdgesDelete, onNodeDrag, onNodeDragStart, onNodeDragStop, onSelectionDrag, onSelectionDragStart, onSelectionDragStop, noPanClassName, nodeOrigin, rfId, autoPanOnConnect, autoPanOnNodeDrag, onError, connectionRadius, isValidConnection, }) => {\n    const { setNodes, setEdges, setDefaultNodesAndEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, } = useStore(selector$d, shallow);\n    const store = useStoreApi();\n    useEffect(() => {\n        const edgesWithDefaults = defaultEdges?.map((e) => ({ ...e, ...defaultEdgeOptions }));\n        setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n        return () => {\n            reset();\n        };\n    }, []);\n    useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n    useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n    useDirectStoreUpdater('onConnect', onConnect, store.setState);\n    useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n    useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n    useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n    useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n    useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n    useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n    useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n    useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n    useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n    useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n    useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n    useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n    useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n    useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n    useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n    useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n    useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n    useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n    useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n    useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n    useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n    useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n    useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n    useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n    useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n    useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n    useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n    useDirectStoreUpdater('rfId', rfId, store.setState);\n    useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n    useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n    useDirectStoreUpdater('onError', onError, store.setState);\n    useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n    useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n    useStoreUpdater(nodes, setNodes);\n    useStoreUpdater(edges, setEdges);\n    useStoreUpdater(minZoom, setMinZoom);\n    useStoreUpdater(maxZoom, setMaxZoom);\n    useStoreUpdater(translateExtent, setTranslateExtent);\n    useStoreUpdater(nodeExtent, setNodeExtent);\n    return null;\n};\n\nconst style = { display: 'none' };\nconst ariaLiveStyle = {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0px, 0px, 0px, 0px)',\n    clipPath: 'inset(100%)',\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = (s) => s.ariaLiveMessage;\nfunction AriaLiveMessage({ rfId }) {\n    const ariaLiveMessage = useStore(selector$c);\n    return (jsx(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle, children: ariaLiveMessage }));\n}\nfunction A11yDescriptions({ rfId, disableKeyboardA11y }) {\n    return (jsxs(Fragment, { children: [jsxs(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style, children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' '] }), jsx(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style, children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\" }), !disableKeyboardA11y && jsx(AriaLiveMessage, { rfId: rfId })] }));\n}\n\nconst shiftX = (x, shift, position) => {\n    if (position === Position.Left)\n        return x - shift;\n    if (position === Position.Right)\n        return x + shift;\n    return x;\n};\nconst shiftY = (y, shift, position) => {\n    if (position === Position.Top)\n        return y - shift;\n    if (position === Position.Bottom)\n        return y + shift;\n    return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = ({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) => (jsx(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n\nconst alwaysValidConnection = () => true;\nvar wrapEdge = (EdgeComponent) => {\n    const EdgeWrapper = ({ id, className, type, data, onClick, onEdgeDoubleClick, selected, animated, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, source, target, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, elementsSelectable, hidden, sourceHandleId, targetHandleId, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, edgeUpdaterRadius, onEdgeUpdate, onEdgeUpdateStart, onEdgeUpdateEnd, markerEnd, markerStart, rfId, ariaLabel, isFocusable, pathOptions, interactionWidth, }) => {\n        const edgeRef = useRef(null);\n        const [updateHover, setUpdateHover] = useState(false);\n        const [updating, setUpdating] = useState(false);\n        const store = useStoreApi();\n        const markerStartUrl = useMemo(() => `url(#${getMarkerId(markerStart, rfId)})`, [markerStart, rfId]);\n        const markerEndUrl = useMemo(() => `url(#${getMarkerId(markerEnd, rfId)})`, [markerEnd, rfId]);\n        if (hidden) {\n            return null;\n        }\n        const onEdgeClick = (event) => {\n            const { edges, addSelectedEdges } = store.getState();\n            if (elementsSelectable) {\n                store.setState({ nodesSelectionActive: false });\n                addSelectedEdges([id]);\n            }\n            if (onClick) {\n                const edge = edges.find((e) => e.id === id);\n                onClick(event, edge);\n            }\n        };\n        const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n        const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n        const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n        const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n        const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n        const handleEdgeUpdater = (event, isSourceHandle) => {\n            // avoid triggering edge updater if mouse btn is not left\n            if (event.button !== 0) {\n                return;\n            }\n            const { edges, isValidConnection: isValidConnectionStore } = store.getState();\n            const nodeId = isSourceHandle ? target : source;\n            const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n            const handleType = isSourceHandle ? 'target' : 'source';\n            const isValidConnection = isValidConnectionStore || alwaysValidConnection;\n            const isTarget = isSourceHandle;\n            const edge = edges.find((e) => e.id === id);\n            setUpdating(true);\n            onEdgeUpdateStart?.(event, edge, handleType);\n            const _onEdgeUpdateEnd = (evt) => {\n                setUpdating(false);\n                onEdgeUpdateEnd?.(evt, edge, handleType);\n            };\n            const onConnectEdge = (connection) => onEdgeUpdate?.(edge, connection);\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectEdge,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection,\n                edgeUpdaterType: handleType,\n                onEdgeUpdateEnd: _onEdgeUpdateEnd,\n            });\n        };\n        const onEdgeUpdaterSourceMouseDown = (event) => handleEdgeUpdater(event, true);\n        const onEdgeUpdaterTargetMouseDown = (event) => handleEdgeUpdater(event, false);\n        const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n        const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n        const inactive = !elementsSelectable && !onClick;\n        const handleEdgeUpdate = typeof onEdgeUpdate !== 'undefined';\n        const onKeyDown = (event) => {\n            if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n                const { unselectNodesAndEdges, addSelectedEdges, edges } = store.getState();\n                const unselect = event.key === 'Escape';\n                if (unselect) {\n                    edgeRef.current?.blur();\n                    unselectNodesAndEdges({ edges: [edges.find((e) => e.id === id)] });\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n        };\n        return (jsxs(\"g\", { className: cc([\n                'react-flow__edge',\n                `react-flow__edge-${type}`,\n                className,\n                { selected, animated, inactive, updating: updateHover },\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClickHandler, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"data-testid\": `rf__edge-${id}`, \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`, \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined, ref: edgeRef, children: [!updating && (jsx(EdgeComponent, { id: id, source: source, target: target, selected: selected, animated: animated, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, data: data, style: style, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, sourceHandleId: sourceHandleId, targetHandleId: targetHandleId, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: pathOptions, interactionWidth: interactionWidth })), handleEdgeUpdate && (jsxs(Fragment, { children: [jsx(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterSourceMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"source\" }), jsx(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterTargetMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"target\" })] }))] }));\n    };\n    EdgeWrapper.displayName = 'EdgeWrapper';\n    return memo(EdgeWrapper);\n};\n\nfunction createEdgeTypes(edgeTypes) {\n    const standardTypes = {\n        default: wrapEdge((edgeTypes.default || BezierEdge)),\n        straight: wrapEdge((edgeTypes.bezier || StraightEdge)),\n        step: wrapEdge((edgeTypes.step || StepEdge)),\n        smoothstep: wrapEdge((edgeTypes.step || SmoothStepEdge)),\n        simplebezier: wrapEdge((edgeTypes.simplebezier || SimpleBezierEdge)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(edgeTypes)\n        .filter((k) => !['default', 'bezier'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapEdge((edgeTypes[key] || BezierEdge));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nfunction getHandlePosition(position, nodeRect, handle = null) {\n    const x = (handle?.x || 0) + nodeRect.x;\n    const y = (handle?.y || 0) + nodeRect.y;\n    const width = handle?.width || nodeRect.width;\n    const height = handle?.height || nodeRect.height;\n    switch (position) {\n        case Position.Top:\n            return {\n                x: x + width / 2,\n                y,\n            };\n        case Position.Right:\n            return {\n                x: x + width,\n                y: y + height / 2,\n            };\n        case Position.Bottom:\n            return {\n                x: x + width / 2,\n                y: y + height,\n            };\n        case Position.Left:\n            return {\n                x,\n                y: y + height / 2,\n            };\n    }\n}\nfunction getHandle(bounds, handleId) {\n    if (!bounds) {\n        return null;\n    }\n    if (bounds.length === 1 || !handleId) {\n        return bounds[0];\n    }\n    else if (handleId) {\n        return bounds.find((d) => d.id === handleId) || null;\n    }\n    return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n    const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n    const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n    return {\n        sourceX: sourceHandlePos.x,\n        sourceY: sourceHandlePos.y,\n        targetX: targetHandlePos.x,\n        targetY: targetHandlePos.y,\n    };\n};\nfunction isEdgeVisible({ sourcePos, targetPos, sourceWidth, sourceHeight, targetWidth, targetHeight, width, height, transform, }) {\n    const edgeBox = {\n        x: Math.min(sourcePos.x, targetPos.x),\n        y: Math.min(sourcePos.y, targetPos.y),\n        x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n        y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight),\n    };\n    if (edgeBox.x === edgeBox.x2) {\n        edgeBox.x2 += 1;\n    }\n    if (edgeBox.y === edgeBox.y2) {\n        edgeBox.y2 += 1;\n    }\n    const viewBox = rectToBox({\n        x: (0 - transform[0]) / transform[2],\n        y: (0 - transform[1]) / transform[2],\n        width: width / transform[2],\n        height: height / transform[2],\n    });\n    const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n    const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n    const overlappingArea = Math.ceil(xOverlap * yOverlap);\n    return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n    const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n    const isValid = handleBounds &&\n        node?.width &&\n        node?.height &&\n        typeof node?.positionAbsolute?.x !== 'undefined' &&\n        typeof node?.positionAbsolute?.y !== 'undefined';\n    return [\n        {\n            x: node?.positionAbsolute?.x || 0,\n            y: node?.positionAbsolute?.y || 0,\n            width: node?.width || 0,\n            height: node?.height || 0,\n        },\n        handleBounds,\n        !!isValid,\n    ];\n}\n\nfunction isParentSelected(node, nodeInternals) {\n    if (!node.parentNode) {\n        return false;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    if (!parentNode) {\n        return false;\n    }\n    if (parentNode.selected) {\n        return true;\n    }\n    return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n    let current = target;\n    do {\n        if (current?.matches(selector))\n            return true;\n        if (current === nodeRef.current)\n            return false;\n        current = current.parentElement;\n    } while (current);\n    return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n    return Array.from(nodeInternals.values())\n        .filter((n) => (n.selected || n.id === nodeId) &&\n        (!n.parentNode || !isParentSelected(n, nodeInternals)) &&\n        (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')))\n        .map((n) => ({\n        id: n.id,\n        position: n.position || { x: 0, y: 0 },\n        positionAbsolute: n.positionAbsolute || { x: 0, y: 0 },\n        distance: {\n            x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n            y: mousePos.y - (n.positionAbsolute?.y ?? 0),\n        },\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        extent: n.extent,\n        parentNode: n.parentNode,\n        width: n.width,\n        height: n.height,\n    }));\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent, nodeOrigin = [0, 0], onError) {\n    let currentExtent = node.extent || nodeExtent;\n    if (node.extent === 'parent') {\n        if (node.parentNode && node.width && node.height) {\n            const parent = nodeInternals.get(node.parentNode);\n            const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n            currentExtent =\n                parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height)\n                    ? [\n                        [parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]],\n                        [\n                            parentX + parent.width - node.width + node.width * nodeOrigin[0],\n                            parentY + parent.height - node.height + node.height * nodeOrigin[1],\n                        ],\n                    ]\n                    : currentExtent;\n        }\n        else {\n            onError?.('005', errorMessages['005']());\n            currentExtent = nodeExtent;\n        }\n    }\n    else if (node.extent && node.parentNode) {\n        const parent = nodeInternals.get(node.parentNode);\n        const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n        currentExtent = [\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\n        ];\n    }\n    let parentPosition = { x: 0, y: 0 };\n    if (node.parentNode) {\n        const parentNode = nodeInternals.get(node.parentNode);\n        parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n    }\n    const positionAbsolute = currentExtent\n        ? clampPosition(nextPosition, currentExtent)\n        : nextPosition;\n    return {\n        position: {\n            x: positionAbsolute.x - parentPosition.x,\n            y: positionAbsolute.y - parentPosition.y,\n        },\n        positionAbsolute,\n    };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams({ nodeId, dragItems, nodeInternals, }) {\n    const extentedDragItems = dragItems.map((n) => {\n        const node = nodeInternals.get(n.id);\n        return {\n            ...node,\n            position: n.position,\n            positionAbsolute: n.positionAbsolute,\n        };\n    });\n    return [nodeId ? extentedDragItems.find((n) => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\n\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n    const handles = nodeElement.querySelectorAll(selector);\n    if (!handles || !handles.length) {\n        return null;\n    }\n    const handlesArray = Array.from(handles);\n    const nodeBounds = nodeElement.getBoundingClientRect();\n    const nodeOffset = {\n        x: nodeBounds.width * nodeOrigin[0],\n        y: nodeBounds.height * nodeOrigin[1],\n    };\n    return handlesArray.map((handle) => {\n        const handleBounds = handle.getBoundingClientRect();\n        return {\n            id: handle.getAttribute('data-handleid'),\n            position: handle.getAttribute('data-handlepos'),\n            x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n            y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n            ...getDimensions(handle),\n        };\n    });\n};\nfunction getMouseHandler(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const node = getState().nodeInternals.get(id);\n            handler(event, { ...node });\n        };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick({ id, store, unselect = false, nodeRef, }) {\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeInternals } = store.getState();\n    const node = nodeInternals.get(id);\n    store.setState({ nodesSelectionActive: false });\n    if (!node.selected) {\n        addSelectedNodes([id]);\n    }\n    else if (unselect || (node.selected && multiSelectionActive)) {\n        unselectNodesAndEdges({ nodes: [node] });\n        requestAnimationFrame(() => nodeRef?.current?.blur());\n    }\n}\n\nfunction useGetPointerPosition() {\n    const store = useStoreApi();\n    // returns the pointer position projected to the RF coordinate system\n    const getPointerPosition = useCallback(({ sourceEvent }) => {\n        const { transform, snapGrid, snapToGrid } = store.getState();\n        const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n        const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n        const pointerPos = {\n            x: (x - transform[0]) / transform[2],\n            y: (y - transform[1]) / transform[2],\n        };\n        // we need the snapped position in order to be able to skip unnecessary drag events\n        return {\n            xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n            ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n            ...pointerPos,\n        };\n    }, []);\n    return getPointerPosition;\n}\n\nfunction wrapSelectionDragFunc(selectionFunc) {\n    return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, selectNodesOnDrag, }) {\n    const store = useStoreApi();\n    const [dragging, setDragging] = useState(false);\n    const dragItems = useRef([]);\n    const lastPos = useRef({ x: null, y: null });\n    const autoPanId = useRef(0);\n    const containerBounds = useRef(null);\n    const mousePosition = useRef({ x: 0, y: 0 });\n    const dragEvent = useRef(null);\n    const autoPanStarted = useRef(false);\n    const getPointerPosition = useGetPointerPosition();\n    useEffect(() => {\n        if (nodeRef?.current) {\n            const selection = select(nodeRef.current);\n            const updateNodes = ({ x, y }) => {\n                const { nodeInternals, onNodeDrag, onSelectionDrag, updateNodePositions, nodeExtent, snapGrid, snapToGrid, nodeOrigin, onError, } = store.getState();\n                lastPos.current = { x, y };\n                let hasChange = false;\n                dragItems.current = dragItems.current.map((n) => {\n                    const nextPosition = { x: x - n.distance.x, y: y - n.distance.y };\n                    if (snapToGrid) {\n                        nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                        nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                    }\n                    const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, nodeOrigin, onError);\n                    // we want to make sure that we only fire a change event when there is a changes\n                    hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n                    n.position = updatedPos.position;\n                    n.positionAbsolute = updatedPos.positionAbsolute;\n                    return n;\n                });\n                if (!hasChange) {\n                    return;\n                }\n                updateNodePositions(dragItems.current, true, true);\n                setDragging(true);\n                const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n                if (onDrag && dragEvent.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onDrag(dragEvent.current, currentNode, nodes);\n                }\n            };\n            const autoPan = () => {\n                if (!containerBounds.current) {\n                    return;\n                }\n                const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n                if (xMovement !== 0 || yMovement !== 0) {\n                    const { transform, panBy } = store.getState();\n                    lastPos.current.x = (lastPos.current.x ?? 0) - xMovement / transform[2];\n                    lastPos.current.y = (lastPos.current.y ?? 0) - yMovement / transform[2];\n                    updateNodes(lastPos.current);\n                    panBy({ x: xMovement, y: yMovement });\n                }\n                autoPanId.current = requestAnimationFrame(autoPan);\n            };\n            if (disabled) {\n                selection.on('.drag', null);\n            }\n            else {\n                const dragHandler = drag()\n                    .on('start', (event) => {\n                    const { nodeInternals, multiSelectionActive, domNode, nodesDraggable, unselectNodesAndEdges, onNodeDragStart, onSelectionDragStart, } = store.getState();\n                    const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n                    if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n                        if (!nodeInternals.get(nodeId)?.selected) {\n                            // we need to reset selected nodes when selectNodesOnDrag=false\n                            unselectNodesAndEdges();\n                        }\n                    }\n                    if (nodeId && isSelectable && selectNodesOnDrag) {\n                        handleNodeClick({\n                            id: nodeId,\n                            store,\n                            nodeRef: nodeRef,\n                        });\n                    }\n                    const pointerPos = getPointerPosition(event);\n                    lastPos.current = pointerPos;\n                    dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n                    if (onStart && dragItems.current) {\n                        const [currentNode, nodes] = getEventHandlerParams({\n                            nodeId,\n                            dragItems: dragItems.current,\n                            nodeInternals,\n                        });\n                        onStart(event.sourceEvent, currentNode, nodes);\n                    }\n                    containerBounds.current = domNode?.getBoundingClientRect() || null;\n                    mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                })\n                    .on('drag', (event) => {\n                    const pointerPos = getPointerPosition(event);\n                    const { autoPanOnNodeDrag } = store.getState();\n                    if (!autoPanStarted.current && autoPanOnNodeDrag) {\n                        autoPanStarted.current = true;\n                        autoPan();\n                    }\n                    // skip events without movement\n                    if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) &&\n                        dragItems.current) {\n                        dragEvent.current = event.sourceEvent;\n                        mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                        updateNodes(pointerPos);\n                    }\n                })\n                    .on('end', (event) => {\n                    setDragging(false);\n                    autoPanStarted.current = false;\n                    cancelAnimationFrame(autoPanId.current);\n                    if (dragItems.current) {\n                        const { updateNodePositions, nodeInternals, onNodeDragStop, onSelectionDragStop } = store.getState();\n                        const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n                        updateNodePositions(dragItems.current, false, false);\n                        if (onStop) {\n                            const [currentNode, nodes] = getEventHandlerParams({\n                                nodeId,\n                                dragItems: dragItems.current,\n                                nodeInternals,\n                            });\n                            onStop(event.sourceEvent, currentNode, nodes);\n                        }\n                    }\n                })\n                    .filter((event) => {\n                    const target = event.target;\n                    const isDraggable = !event.button &&\n                        (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) &&\n                        (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n                    return isDraggable;\n                });\n                selection.call(dragHandler);\n                return () => {\n                    selection.on('.drag', null);\n                };\n            }\n        }\n    }, [\n        nodeRef,\n        disabled,\n        noDragClassName,\n        handleSelector,\n        isSelectable,\n        store,\n        nodeId,\n        selectNodesOnDrag,\n        getPointerPosition,\n    ]);\n    return dragging;\n}\n\nfunction useUpdateNodePositions() {\n    const store = useStoreApi();\n    const updatePositions = useCallback((params) => {\n        const { nodeInternals, nodeExtent, updateNodePositions, getNodes, snapToGrid, snapGrid, onError, nodesDraggable } = store.getState();\n        const selectedNodes = getNodes().filter((n) => n.selected && (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')));\n        // by default a node moves 5px on each key press, or 20px if shift is pressed\n        // if snap grid is enabled, we use that for the velocity.\n        const xVelo = snapToGrid ? snapGrid[0] : 5;\n        const yVelo = snapToGrid ? snapGrid[1] : 5;\n        const factor = params.isShiftPressed ? 4 : 1;\n        const positionDiffX = params.x * xVelo * factor;\n        const positionDiffY = params.y * yVelo * factor;\n        const nodeUpdates = selectedNodes.map((n) => {\n            if (n.positionAbsolute) {\n                const nextPosition = { x: n.positionAbsolute.x + positionDiffX, y: n.positionAbsolute.y + positionDiffY };\n                if (snapToGrid) {\n                    nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                    nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                }\n                const { positionAbsolute, position } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n                n.position = position;\n                n.positionAbsolute = positionAbsolute;\n            }\n            return n;\n        });\n        updateNodePositions(nodeUpdates, true, false);\n    }, []);\n    return updatePositions;\n}\n\nconst arrowKeyDiffs = {\n    ArrowUp: { x: 0, y: -1 },\n    ArrowDown: { x: 0, y: 1 },\n    ArrowLeft: { x: -1, y: 0 },\n    ArrowRight: { x: 1, y: 0 },\n};\nvar wrapNode = (NodeComponent) => {\n    const NodeWrapper = ({ id, type, data, xPos, yPos, xPosOrigin, yPosOrigin, selected, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, style, className, isDraggable, isSelectable, isConnectable, isFocusable, selectNodesOnDrag, sourcePosition, targetPosition, hidden, resizeObserver, dragHandle, zIndex, isParent, noDragClassName, noPanClassName, initialized, disableKeyboardA11y, ariaLabel, rfId, }) => {\n        const store = useStoreApi();\n        const nodeRef = useRef(null);\n        const prevSourcePosition = useRef(sourcePosition);\n        const prevTargetPosition = useRef(targetPosition);\n        const prevType = useRef(type);\n        const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n        const updatePositions = useUpdateNodePositions();\n        const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n        const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n        const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n        const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n        const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n        const onSelectNodeHandler = (event) => {\n            if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n                // this handler gets called within the drag start event when selectNodesOnDrag=true\n                handleNodeClick({\n                    id,\n                    store,\n                    nodeRef,\n                });\n            }\n            if (onClick) {\n                const node = store.getState().nodeInternals.get(id);\n                onClick(event, { ...node });\n            }\n        };\n        const onKeyDown = (event) => {\n            if (isInputDOMNode(event)) {\n                return;\n            }\n            if (elementSelectionKeys.includes(event.key) && isSelectable) {\n                const unselect = event.key === 'Escape';\n                handleNodeClick({\n                    id,\n                    store,\n                    unselect,\n                    nodeRef,\n                });\n            }\n            else if (!disableKeyboardA11y &&\n                isDraggable &&\n                selected &&\n                Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n                store.setState({\n                    ariaLiveMessage: `Moved selected node ${event.key\n                        .replace('Arrow', '')\n                        .toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`,\n                });\n                updatePositions({\n                    x: arrowKeyDiffs[event.key].x,\n                    y: arrowKeyDiffs[event.key].y,\n                    isShiftPressed: event.shiftKey,\n                });\n            }\n        };\n        useEffect(() => {\n            if (nodeRef.current && !hidden) {\n                const currNode = nodeRef.current;\n                resizeObserver?.observe(currNode);\n                return () => resizeObserver?.unobserve(currNode);\n            }\n        }, [hidden]);\n        useEffect(() => {\n            // when the user programmatically changes the source or handle position, we re-initialize the node\n            const typeChanged = prevType.current !== type;\n            const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n            const targetPosChanged = prevTargetPosition.current !== targetPosition;\n            if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n                if (typeChanged) {\n                    prevType.current = type;\n                }\n                if (sourcePosChanged) {\n                    prevSourcePosition.current = sourcePosition;\n                }\n                if (targetPosChanged) {\n                    prevTargetPosition.current = targetPosition;\n                }\n                store.getState().updateNodeDimensions([{ id, nodeElement: nodeRef.current, forceUpdate: true }]);\n            }\n        }, [id, type, sourcePosition, targetPosition]);\n        const dragging = useDrag({\n            nodeRef,\n            disabled: hidden || !isDraggable,\n            noDragClassName,\n            handleSelector: dragHandle,\n            nodeId: id,\n            isSelectable,\n            selectNodesOnDrag,\n        });\n        if (hidden) {\n            return null;\n        }\n        return (jsx(\"div\", { className: cc([\n                'react-flow__node',\n                `react-flow__node-${type}`,\n                {\n                    // this is overwritable by passing `nopan` as a class name\n                    [noPanClassName]: isDraggable,\n                },\n                className,\n                {\n                    selected,\n                    selectable: isSelectable,\n                    parent: isParent,\n                    dragging,\n                },\n            ]), ref: nodeRef, style: {\n                zIndex,\n                transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n                pointerEvents: hasPointerEvents ? 'all' : 'none',\n                visibility: initialized ? 'visible' : 'hidden',\n                ...style,\n            }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": ariaLabel, children: jsx(Provider, { value: id, children: jsx(NodeComponent, { id: id, data: data, type: type, xPos: xPos, yPos: yPos, selected: selected, isConnectable: isConnectable, sourcePosition: sourcePosition, targetPosition: targetPosition, dragging: dragging, dragHandle: dragHandle, zIndex: zIndex }) }) }));\n    };\n    NodeWrapper.displayName = 'NodeWrapper';\n    return memo(NodeWrapper);\n};\n\nfunction createNodeTypes(nodeTypes) {\n    const standardTypes = {\n        input: wrapNode((nodeTypes.input || InputNode$1)),\n        default: wrapNode((nodeTypes.default || DefaultNode$1)),\n        output: wrapNode((nodeTypes.output || OutputNode$1)),\n        group: wrapNode((nodeTypes.group || GroupNode)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(nodeTypes)\n        .filter((k) => !['input', 'default', 'output', 'group'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapNode((nodeTypes[key] || DefaultNode$1));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nconst getPositionWithOrigin = ({ x, y, width, height, origin, }) => {\n    if (!width || !height) {\n        return { x, y };\n    }\n    if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n        return { x, y };\n    }\n    return {\n        x: x - width * origin[0],\n        y: y - height * origin[1],\n    };\n};\n\nconst doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilites. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = (keyCode = null, options = { target: doc }) => {\n    const [keyPressed, setKeyPressed] = useState(false);\n    // we need to remember if a modifier key is pressed in order to track it\n    const modifierPressed = useRef(false);\n    // we need to remember the pressed keys in order to support combinations\n    const pressedKeys = useRef(new Set([]));\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n    // we can't find it in the list of keysToWatch.\n    const [keyCodes, keysToWatch] = useMemo(() => {\n        if (keyCode !== null) {\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n            const keys = keyCodeArr.filter((kc) => typeof kc === 'string').map((kc) => kc.split('+'));\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n            return [keys, keysFlat];\n        }\n        return [[], []];\n    }, [keyCode]);\n    useEffect(() => {\n        if (keyCode !== null) {\n            const downHandler = (event) => {\n                modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n                if (!modifierPressed.current && isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                pressedKeys.current.add(event[keyOrCode]);\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n                    event.preventDefault();\n                    setKeyPressed(true);\n                }\n            };\n            const upHandler = (event) => {\n                if (!modifierPressed.current && isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n                    setKeyPressed(false);\n                    pressedKeys.current.clear();\n                }\n                else {\n                    pressedKeys.current.delete(event[keyOrCode]);\n                }\n                modifierPressed.current = false;\n            };\n            const resetHandler = () => {\n                pressedKeys.current.clear();\n                setKeyPressed(false);\n            };\n            options?.target?.addEventListener('keydown', downHandler);\n            options?.target?.addEventListener('keyup', upHandler);\n            window.addEventListener('blur', resetHandler);\n            return () => {\n                options?.target?.removeEventListener('keydown', downHandler);\n                options?.target?.removeEventListener('keyup', upHandler);\n                window.removeEventListener('blur', resetHandler);\n            };\n        }\n    }, [keyCode, setKeyPressed]);\n    return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n    return (keyCodes\n        // we only want to compare same sizes of keyCode definitions\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\n        // since we want to support multiple possibilities only one of the\n        // combinations need to be part of the pressed keys\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\n\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n    if (!node.parentNode) {\n        return result;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n    return calculateXYZPosition(parentNode, nodeInternals, {\n        x: (result.x ?? 0) + parentNodePosition.x,\n        y: (result.y ?? 0) + parentNodePosition.y,\n        z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0,\n    }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n    nodeInternals.forEach((node) => {\n        if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n            throw new Error(`Parent node ${node.parentNode} not found`);\n        }\n        if (node.parentNode || parentNodes?.[node.id]) {\n            const { x, y, z } = calculateXYZPosition(node, nodeInternals, {\n                ...node.position,\n                z: node[internalsSymbol]?.z ?? 0,\n            }, nodeOrigin);\n            node.positionAbsolute = {\n                x,\n                y,\n            };\n            node[internalsSymbol].z = z;\n            if (parentNodes?.[node.id]) {\n                node[internalsSymbol].isParent = true;\n            }\n        }\n    });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n    const nextNodeInternals = new Map();\n    const parentNodes = {};\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n    nodes.forEach((node) => {\n        const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n        const currInternals = nodeInternals.get(node.id);\n        const internals = {\n            width: currInternals?.width,\n            height: currInternals?.height,\n            ...node,\n            positionAbsolute: {\n                x: node.position.x,\n                y: node.position.y,\n            },\n        };\n        if (node.parentNode) {\n            internals.parentNode = node.parentNode;\n            parentNodes[node.parentNode] = true;\n        }\n        Object.defineProperty(internals, internalsSymbol, {\n            enumerable: false,\n            value: {\n                handleBounds: currInternals?.[internalsSymbol]?.handleBounds,\n                z,\n            },\n        });\n        nextNodeInternals.set(node.id, internals);\n    });\n    updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n    return nextNodeInternals;\n}\nfunction fitView(get, options = {}) {\n    const { getNodes, width, height, minZoom, maxZoom, d3Zoom, d3Selection, fitViewOnInitDone, fitViewOnInit, nodeOrigin, } = get();\n    const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n    const d3initialized = d3Zoom && d3Selection;\n    if (d3initialized && (isInitialFitView || !options.initial)) {\n        const nodes = getNodes().filter((n) => {\n            const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n            if (options.nodes?.length) {\n                return isVisible && options.nodes.some((optionNode) => optionNode.id === n.id);\n            }\n            return isVisible;\n        });\n        const nodesInitialized = nodes.every((n) => n.width && n.height);\n        if (nodes.length > 0 && nodesInitialized) {\n            const bounds = getRectOfNodes(nodes, nodeOrigin);\n            const [x, y, zoom] = getTransformForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n            const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n            if (typeof options.duration === 'number' && options.duration > 0) {\n                d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n            }\n            else {\n                d3Zoom.transform(d3Selection, nextTransform);\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n    nodeChanges.forEach((change) => {\n        const node = nodeInternals.get(change.id);\n        if (node) {\n            nodeInternals.set(node.id, {\n                ...node,\n                [internalsSymbol]: node[internalsSymbol],\n                selected: change.selected,\n            });\n        }\n    });\n    return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n    return edges.map((e) => {\n        const change = edgeChanges.find((change) => change.id === e.id);\n        if (change) {\n            e.selected = change.selected;\n        }\n        return e;\n    });\n}\nfunction updateNodesAndEdgesSelections({ changedNodes, changedEdges, get, set }) {\n    const { nodeInternals, edges, onNodesChange, onEdgesChange, hasDefaultNodes, hasDefaultEdges } = get();\n    if (changedNodes?.length) {\n        if (hasDefaultNodes) {\n            set({ nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals) });\n        }\n        onNodesChange?.(changedNodes);\n    }\n    if (changedEdges?.length) {\n        if (hasDefaultEdges) {\n            set({ edges: handleControlledEdgeSelectionChange(changedEdges, edges) });\n        }\n        onEdgesChange?.(changedEdges);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst initialViewportHelper = {\n    zoomIn: noop,\n    zoomOut: noop,\n    zoomTo: noop,\n    getZoom: () => 1,\n    setViewport: noop,\n    getViewport: () => ({ x: 0, y: 0, zoom: 1 }),\n    fitView: () => false,\n    setCenter: noop,\n    fitBounds: noop,\n    project: (position) => position,\n    viewportInitialized: false,\n};\nconst selector$b = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n});\nconst useViewportHelper = () => {\n    const store = useStoreApi();\n    const { d3Zoom, d3Selection } = useStore(selector$b, shallow);\n    const viewportHelperFunctions = useMemo(() => {\n        if (d3Selection && d3Zoom) {\n            return {\n                zoomIn: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n                zoomOut: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n                zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n                getZoom: () => store.getState().transform[2],\n                setViewport: (transform, options) => {\n                    const [x, y, zoom] = store.getState().transform;\n                    const nextTransform = zoomIdentity\n                        .translate(transform.x ?? x, transform.y ?? y)\n                        .scale(transform.zoom ?? zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n                },\n                getViewport: () => {\n                    const [x, y, zoom] = store.getState().transform;\n                    return { x, y, zoom };\n                },\n                fitView: (options) => fitView(store.getState, options),\n                setCenter: (x, y, options) => {\n                    const { width, height, maxZoom } = store.getState();\n                    const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n                    const centerX = width / 2 - x * nextZoom;\n                    const centerY = height / 2 - y * nextZoom;\n                    const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                fitBounds: (bounds, options) => {\n                    const { width, height, minZoom, maxZoom } = store.getState();\n                    const [x, y, zoom] = getTransformForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n                    const transform = zoomIdentity.translate(x, y).scale(zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                project: (position) => {\n                    const { transform, snapToGrid, snapGrid } = store.getState();\n                    return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n                },\n                viewportInitialized: true,\n            };\n        }\n        return initialViewportHelper;\n    }, [d3Zoom, d3Selection]);\n    return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n    const viewportHelper = useViewportHelper();\n    const store = useStoreApi();\n    const getNodes = useCallback(() => {\n        return store\n            .getState()\n            .getNodes()\n            .map((n) => ({ ...n }));\n    }, []);\n    const getNode = useCallback((id) => {\n        return store.getState().nodeInternals.get(id);\n    }, []);\n    const getEdges = useCallback(() => {\n        const { edges = [] } = store.getState();\n        return edges.map((e) => ({ ...e }));\n    }, []);\n    const getEdge = useCallback((id) => {\n        const { edges = [] } = store.getState();\n        return edges.find((e) => e.id === id);\n    }, []);\n    const setNodes = useCallback((payload) => {\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        const nodes = getNodes();\n        const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n        if (hasDefaultNodes) {\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nextNodes.length === 0\n                ? nodes.map((node) => ({ type: 'remove', id: node.id }))\n                : nextNodes.map((node) => ({ item: node, type: 'reset' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const setEdges = useCallback((payload) => {\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n        if (hasDefaultEdges) {\n            setEdges(nextEdges);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.length === 0\n                ? edges.map((edge) => ({ type: 'remove', id: edge.id }))\n                : nextEdges.map((edge) => ({ item: edge, type: 'reset' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const addNodes = useCallback((payload) => {\n        const nodes = Array.isArray(payload) ? payload : [payload];\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        if (hasDefaultNodes) {\n            const currentNodes = getNodes();\n            const nextNodes = [...currentNodes, ...nodes];\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nodes.map((node) => ({ item: node, type: 'add' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const addEdges = useCallback((payload) => {\n        const nextEdges = Array.isArray(payload) ? payload : [payload];\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        if (hasDefaultEdges) {\n            setEdges([...edges, ...nextEdges]);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.map((edge) => ({ item: edge, type: 'add' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const toObject = useCallback(() => {\n        const { getNodes, edges = [], transform } = store.getState();\n        const [x, y, zoom] = transform;\n        return {\n            nodes: getNodes().map((n) => ({ ...n })),\n            edges: edges.map((e) => ({ ...e })),\n            viewport: {\n                x,\n                y,\n                zoom,\n            },\n        };\n    }, []);\n    const deleteElements = useCallback(({ nodes: nodesDeleted, edges: edgesDeleted }) => {\n        const { nodeInternals, getNodes, edges, hasDefaultNodes, hasDefaultEdges, onNodesDelete, onEdgesDelete, onNodesChange, onEdgesChange, } = store.getState();\n        const nodeIds = (nodesDeleted || []).map((node) => node.id);\n        const edgeIds = (edgesDeleted || []).map((edge) => edge.id);\n        const nodesToRemove = getNodes().reduce((res, node) => {\n            const parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find((n) => n.id === node.parentNode);\n            const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n            if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n                res.push(node);\n            }\n            return res;\n        }, []);\n        const deletableEdges = edges.filter((e) => (typeof e.deletable === 'boolean' ? e.deletable : true));\n        const initialHitEdges = deletableEdges.filter((e) => edgeIds.includes(e.id));\n        if (nodesToRemove || initialHitEdges) {\n            const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n            const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n            const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n                if (!res.includes(edge.id)) {\n                    res.push(edge.id);\n                }\n                return res;\n            }, []);\n            if (hasDefaultEdges || hasDefaultNodes) {\n                if (hasDefaultEdges) {\n                    store.setState({\n                        edges: edges.filter((e) => !edgeIdsToRemove.includes(e.id)),\n                    });\n                }\n                if (hasDefaultNodes) {\n                    nodesToRemove.forEach((node) => {\n                        nodeInternals.delete(node.id);\n                    });\n                    store.setState({\n                        nodeInternals: new Map(nodeInternals),\n                    });\n                }\n            }\n            if (edgeIdsToRemove.length > 0) {\n                onEdgesDelete?.(edgesToRemove);\n                if (onEdgesChange) {\n                    onEdgesChange(edgeIdsToRemove.map((id) => ({\n                        id,\n                        type: 'remove',\n                    })));\n                }\n            }\n            if (nodesToRemove.length > 0) {\n                onNodesDelete?.(nodesToRemove);\n                if (onNodesChange) {\n                    const nodeChanges = nodesToRemove.map((n) => ({ id: n.id, type: 'remove' }));\n                    onNodesChange(nodeChanges);\n                }\n            }\n        }\n    }, []);\n    const getNodeRect = useCallback((nodeOrRect) => {\n        const isRect = isRectObject(nodeOrRect);\n        const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n        const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n        return [nodeRect, node, isRect];\n    }, []);\n    const getIntersectingNodes = useCallback((nodeOrRect, partially = true, nodes) => {\n        const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return [];\n        }\n        return (nodes || store.getState().getNodes()).filter((n) => {\n            if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n                return false;\n            }\n            const currNodeRect = nodeToRect(n);\n            const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n            const partiallyVisible = partially && overlappingArea > 0;\n            return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n        });\n    }, []);\n    const isNodeIntersecting = useCallback((nodeOrRect, area, partially = true) => {\n        const [nodeRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return false;\n        }\n        const overlappingArea = getOverlappingArea(nodeRect, area);\n        const partiallyVisible = partially && overlappingArea > 0;\n        return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n    }, []);\n    return useMemo(() => {\n        return {\n            ...viewportHelper,\n            getNodes,\n            getNode,\n            getEdges,\n            getEdge,\n            setNodes,\n            setEdges,\n            addNodes,\n            addEdges,\n            toObject,\n            deleteElements,\n            getIntersectingNodes,\n            isNodeIntersecting,\n        };\n    }, [\n        viewportHelper,\n        getNodes,\n        getNode,\n        getEdges,\n        getEdge,\n        setNodes,\n        setEdges,\n        addNodes,\n        addEdges,\n        toObject,\n        deleteElements,\n        getIntersectingNodes,\n        isNodeIntersecting,\n    ]);\n}\n\nvar useGlobalKeyHandler = ({ deleteKeyCode, multiSelectionKeyCode }) => {\n    const store = useStoreApi();\n    const { deleteElements } = useReactFlow();\n    const deleteKeyPressed = useKeyPress(deleteKeyCode);\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n    useEffect(() => {\n        if (deleteKeyPressed) {\n            const { edges, getNodes } = store.getState();\n            const selectedNodes = getNodes().filter((node) => node.selected);\n            const selectedEdges = edges.filter((edge) => edge.selected);\n            deleteElements({ nodes: selectedNodes, edges: selectedEdges });\n            store.setState({ nodesSelectionActive: false });\n        }\n    }, [deleteKeyPressed]);\n    useEffect(() => {\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\n    }, [multiSelectionKeyPressed]);\n};\n\nfunction useResizeHandler(rendererNode) {\n    const store = useStoreApi();\n    useEffect(() => {\n        let resizeObserver;\n        const updateDimensions = () => {\n            if (!rendererNode.current) {\n                return;\n            }\n            const size = getDimensions(rendererNode.current);\n            if (size.height === 0 || size.width === 0) {\n                store.getState().onError?.('004', errorMessages['004']());\n            }\n            store.setState({ width: size.width || 500, height: size.height || 500 });\n        };\n        updateDimensions();\n        window.addEventListener('resize', updateDimensions);\n        if (rendererNode.current) {\n            resizeObserver = new ResizeObserver(() => updateDimensions());\n            resizeObserver.observe(rendererNode.current);\n        }\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n            if (resizeObserver && rendererNode.current) {\n                resizeObserver.unobserve(rendererNode.current);\n            }\n        };\n    }, []);\n}\n\nconst containerStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n};\n\nconst viewChanged = (prevViewport, eventViewport) => prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\nconst eventToFlowTransform = (eventViewport) => ({\n    x: eventViewport.x,\n    y: eventViewport.y,\n    zoom: eventViewport.k,\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst selector$a = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive,\n});\nconst ZoomPane = ({ onMove, onMoveStart, onMoveEnd, onPaneContextMenu, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, elementsSelectable, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, }) => {\n    const timerId = useRef();\n    const store = useStoreApi();\n    const isZoomingOrPanning = useRef(false);\n    const zoomedWithRightMouseButton = useRef(false);\n    const zoomPane = useRef(null);\n    const prevTransform = useRef({ x: 0, y: 0, zoom: 0 });\n    const { d3Zoom, d3Selection, d3ZoomHandler, userSelectionActive } = useStore(selector$a, shallow);\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n    const mouseButton = useRef(0);\n    useResizeHandler(zoomPane);\n    useEffect(() => {\n        if (zoomPane.current) {\n            const bbox = zoomPane.current.getBoundingClientRect();\n            const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n            const selection = select(zoomPane.current).call(d3ZoomInstance);\n            const updatedTransform = zoomIdentity\n                .translate(defaultViewport.x, defaultViewport.y)\n                .scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n            const extent = [\n                [0, 0],\n                [bbox.width, bbox.height],\n            ];\n            const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n            d3ZoomInstance.transform(selection, constrainedTransform);\n            store.setState({\n                d3Zoom: d3ZoomInstance,\n                d3Selection: selection,\n                d3ZoomHandler: selection.on('wheel.zoom'),\n                // we need to pass transform because zoom handler is not registered when we set the initial transform\n                transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n                domNode: zoomPane.current.closest('.react-flow'),\n            });\n        }\n    }, []);\n    useEffect(() => {\n        if (d3Selection && d3Zoom) {\n            if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n                d3Selection.on('wheel.zoom', (event) => {\n                    if (isWrappedWithClass(event, noWheelClassName)) {\n                        return false;\n                    }\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    const currentZoom = d3Selection.property('__zoom').k || 1;\n                    if (event.ctrlKey && zoomOnPinch) {\n                        const point = pointer(event);\n                        // taken from https://github.com/d3/d3-zoom/blob/master/src/zoom.js\n                        const pinchDelta = -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * 10;\n                        const zoom = currentZoom * Math.pow(2, pinchDelta);\n                        d3Zoom.scaleTo(d3Selection, zoom, point);\n                        return;\n                    }\n                    // increase scroll speed in firefox\n                    // firefox: deltaMode === 1; chrome: deltaMode === 0\n                    const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n                    const deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n                    const deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n                    d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed);\n                });\n            }\n            else if (typeof d3ZoomHandler !== 'undefined') {\n                d3Selection.on('wheel.zoom', function (event, d) {\n                    if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n                        return null;\n                    }\n                    event.preventDefault();\n                    d3ZoomHandler.call(this, event, d);\n                });\n            }\n        }\n    }, [\n        userSelectionActive,\n        panOnScroll,\n        panOnScrollMode,\n        d3Selection,\n        d3Zoom,\n        d3ZoomHandler,\n        zoomActivationKeyPressed,\n        zoomOnPinch,\n        preventScrolling,\n        noWheelClassName,\n    ]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('start', (event) => {\n                if (!event.sourceEvent) {\n                    return null;\n                }\n                // we need to remember it here, because it's always 0 in the \"zoom\" event\n                mouseButton.current = event.sourceEvent.button;\n                const { onViewportChangeStart } = store.getState();\n                isZoomingOrPanning.current = true;\n                if (event.sourceEvent?.type === 'mousedown') {\n                    store.setState({ paneDragging: true });\n                }\n                if (onMoveStart || onViewportChangeStart) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    onViewportChangeStart?.(flowTransform);\n                    onMoveStart?.(event.sourceEvent, flowTransform);\n                }\n            });\n        }\n    }, [d3Zoom, onMoveStart]);\n    useEffect(() => {\n        if (d3Zoom) {\n            if (userSelectionActive && !isZoomingOrPanning.current) {\n                d3Zoom.on('zoom', null);\n            }\n            else if (!userSelectionActive) {\n                d3Zoom.on('zoom', (event) => {\n                    const { onViewportChange } = store.getState();\n                    store.setState({ transform: [event.transform.x, event.transform.y, event.transform.k] });\n                    zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0));\n                    if (onMove || onViewportChange) {\n                        const flowTransform = eventToFlowTransform(event.transform);\n                        onViewportChange?.(flowTransform);\n                        onMove?.(event.sourceEvent, flowTransform);\n                    }\n                });\n            }\n        }\n    }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('end', (event) => {\n                if (!event.sourceEvent) {\n                    return null;\n                }\n                const { onViewportChangeEnd } = store.getState();\n                isZoomingOrPanning.current = false;\n                store.setState({ paneDragging: false });\n                if (onPaneContextMenu &&\n                    isRightClickPan(panOnDrag, mouseButton.current ?? 0) &&\n                    !zoomedWithRightMouseButton.current) {\n                    onPaneContextMenu(event.sourceEvent);\n                }\n                zoomedWithRightMouseButton.current = false;\n                if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    clearTimeout(timerId.current);\n                    timerId.current = setTimeout(() => {\n                        onViewportChangeEnd?.(flowTransform);\n                        onMoveEnd?.(event.sourceEvent, flowTransform);\n                    }, panOnScroll ? 150 : 0);\n                }\n            });\n        }\n    }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.filter((event) => {\n                const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n                const pinchZoom = zoomOnPinch && event.ctrlKey;\n                if (event.button === 1 &&\n                    event.type === 'mousedown' &&\n                    (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n                    return true;\n                }\n                // if all interactions are disabled, we prevent all zoom events\n                if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n                    return false;\n                }\n                // during a selection we prevent all other interactions\n                if (userSelectionActive) {\n                    return false;\n                }\n                // if zoom on double click is disabled, we prevent the double click event\n                if (!zoomOnDoubleClick && event.type === 'dblclick') {\n                    return false;\n                }\n                // if the target element is inside an element with the nowheel class, we prevent zooming\n                if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n                    return false;\n                }\n                // if the target element is inside an element with the nopan class, we prevent panning\n                if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n                    return false;\n                }\n                if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n                    return false;\n                }\n                // when there is no scroll handling enabled, we prevent all wheel events\n                if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n                    return false;\n                }\n                // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n                if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // if the pane is only movable using allowed clicks\n                if (Array.isArray(panOnDrag) &&\n                    !panOnDrag.includes(event.button) &&\n                    (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // We only allow right clicks if pan on drag is set to right click\n                const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\n                // default filter for d3-zoom\n                return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n            });\n        }\n    }, [\n        userSelectionActive,\n        d3Zoom,\n        zoomOnScroll,\n        zoomOnPinch,\n        panOnScroll,\n        zoomOnDoubleClick,\n        panOnDrag,\n        elementsSelectable,\n        zoomActivationKeyPressed,\n    ]);\n    return (jsx(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle, children: children }));\n};\n\nconst selector$9 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect,\n});\nfunction UserSelection() {\n    const { userSelectionActive, userSelectionRect } = useStore(selector$9, shallow);\n    const isActive = userSelectionActive && userSelectionRect;\n    if (!isActive) {\n        return null;\n    }\n    return (jsx(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\n            width: userSelectionRect.width,\n            height: userSelectionRect.height,\n            transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\n        } }));\n}\n\nfunction handleParentExpand(res, updateItem) {\n    const parent = res.find((e) => e.id === updateItem.parentNode);\n    if (parent) {\n        const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n        const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n        if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n            parent.style = { ...parent.style } || {};\n            parent.style.width = parent.style.width ?? parent.width;\n            parent.style.height = parent.style.height ?? parent.height;\n            if (extendWidth > 0) {\n                parent.style.width += extendWidth;\n            }\n            if (extendHeight > 0) {\n                parent.style.height += extendHeight;\n            }\n            if (updateItem.position.x < 0) {\n                const xDiff = Math.abs(updateItem.position.x);\n                parent.position.x = parent.position.x - xDiff;\n                parent.style.width += xDiff;\n                updateItem.position.x = 0;\n            }\n            if (updateItem.position.y < 0) {\n                const yDiff = Math.abs(updateItem.position.y);\n                parent.position.y = parent.position.y - yDiff;\n                parent.style.height += yDiff;\n                updateItem.position.y = 0;\n            }\n            parent.width = parent.style.width;\n            parent.height = parent.style.height;\n        }\n    }\n}\nfunction applyChanges(changes, elements) {\n    // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n    if (changes.some((c) => c.type === 'reset')) {\n        return changes.filter((c) => c.type === 'reset').map((c) => c.item);\n    }\n    const initElements = changes.filter((c) => c.type === 'add').map((c) => c.item);\n    return elements.reduce((res, item) => {\n        const currentChanges = changes.filter((c) => c.id === item.id);\n        if (currentChanges.length === 0) {\n            res.push(item);\n            return res;\n        }\n        const updateItem = { ...item };\n        for (const currentChange of currentChanges) {\n            if (currentChange) {\n                switch (currentChange.type) {\n                    case 'select': {\n                        updateItem.selected = currentChange.selected;\n                        break;\n                    }\n                    case 'position': {\n                        if (typeof currentChange.position !== 'undefined') {\n                            updateItem.position = currentChange.position;\n                        }\n                        if (typeof currentChange.positionAbsolute !== 'undefined') {\n                            updateItem.positionAbsolute = currentChange.positionAbsolute;\n                        }\n                        if (typeof currentChange.dragging !== 'undefined') {\n                            updateItem.dragging = currentChange.dragging;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'dimensions': {\n                        if (typeof currentChange.dimensions !== 'undefined') {\n                            updateItem.width = currentChange.dimensions.width;\n                            updateItem.height = currentChange.dimensions.height;\n                        }\n                        if (typeof currentChange.updateStyle !== 'undefined') {\n                            updateItem.style = { ...(updateItem.style || {}), ...currentChange.dimensions };\n                        }\n                        if (typeof currentChange.resizing === 'boolean') {\n                            updateItem.resizing = currentChange.resizing;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'remove': {\n                        return res;\n                    }\n                }\n            }\n        }\n        res.push(updateItem);\n        return res;\n    }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n    return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n    return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n    id,\n    type: 'select',\n    selected,\n});\nfunction getSelectionChanges(items, selectedIds) {\n    return items.reduce((res, item) => {\n        const willBeSelected = selectedIds.includes(item.id);\n        if (!item.selected && willBeSelected) {\n            item.selected = true;\n            res.push(createSelectionChange(item.id, true));\n        }\n        else if (item.selected && !willBeSelected) {\n            item.selected = false;\n            res.push(createSelectionChange(item.id, false));\n        }\n        return res;\n    }, []);\n}\n\nconst wrapHandler = (handler, containerRef) => {\n    return (event) => {\n        if (event.target !== containerRef.current) {\n            return;\n        }\n        handler?.(event);\n    };\n};\nconst selector$8 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging,\n});\nconst Pane = memo(({ isSelecting, selectionMode = SelectionMode.Full, panOnDrag, onSelectionStart, onSelectionEnd, onPaneClick, onPaneContextMenu, onPaneScroll, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, children, }) => {\n    const container = useRef(null);\n    const store = useStoreApi();\n    const prevSelectedNodesCount = useRef(0);\n    const prevSelectedEdgesCount = useRef(0);\n    const containerBounds = useRef();\n    const { userSelectionActive, elementsSelectable, dragging } = useStore(selector$8, shallow);\n    const resetUserSelection = () => {\n        store.setState({ userSelectionActive: false, userSelectionRect: null });\n        prevSelectedNodesCount.current = 0;\n        prevSelectedEdgesCount.current = 0;\n    };\n    const onClick = (event) => {\n        onPaneClick?.(event);\n        store.getState().resetSelectedElements();\n        store.setState({ nodesSelectionActive: false });\n    };\n    const onContextMenu = (event) => {\n        if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n            event.preventDefault();\n            return;\n        }\n        onPaneContextMenu?.(event);\n    };\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\n    const onMouseDown = (event) => {\n        const { resetSelectedElements, domNode } = store.getState();\n        containerBounds.current = domNode?.getBoundingClientRect();\n        if (!elementsSelectable ||\n            !isSelecting ||\n            event.button !== 0 ||\n            event.target !== container.current ||\n            !containerBounds.current) {\n            return;\n        }\n        const { x, y } = getEventPosition(event, containerBounds.current);\n        resetSelectedElements();\n        store.setState({\n            userSelectionRect: {\n                width: 0,\n                height: 0,\n                startX: x,\n                startY: y,\n                x,\n                y,\n            },\n        });\n        onSelectionStart?.(event);\n    };\n    const onMouseMove = (event) => {\n        const { userSelectionRect, nodeInternals, edges, transform, onNodesChange, onEdgesChange, nodeOrigin, getNodes } = store.getState();\n        if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n            return;\n        }\n        store.setState({ userSelectionActive: true, nodesSelectionActive: false });\n        const mousePos = getEventPosition(event, containerBounds.current);\n        const startX = userSelectionRect.startX ?? 0;\n        const startY = userSelectionRect.startY ?? 0;\n        const nextUserSelectRect = {\n            ...userSelectionRect,\n            x: mousePos.x < startX ? mousePos.x : startX,\n            y: mousePos.y < startY ? mousePos.y : startY,\n            width: Math.abs(mousePos.x - startX),\n            height: Math.abs(mousePos.y - startY),\n        };\n        const nodes = getNodes();\n        const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n        const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map((e) => e.id);\n        const selectedNodeIds = selectedNodes.map((n) => n.id);\n        if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n            prevSelectedNodesCount.current = selectedNodeIds.length;\n            const changes = getSelectionChanges(nodes, selectedNodeIds);\n            if (changes.length) {\n                onNodesChange?.(changes);\n            }\n        }\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n            prevSelectedEdgesCount.current = selectedEdgeIds.length;\n            const changes = getSelectionChanges(edges, selectedEdgeIds);\n            if (changes.length) {\n                onEdgesChange?.(changes);\n            }\n        }\n        store.setState({\n            userSelectionRect: nextUserSelectRect,\n        });\n    };\n    const onMouseUp = (event) => {\n        if (event.button !== 0) {\n            return;\n        }\n        const { userSelectionRect } = store.getState();\n        // We only want to trigger click functions when in selection mode if\n        // the user did not move the mouse.\n        if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n            onClick?.(event);\n        }\n        store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n        resetUserSelection();\n        onSelectionEnd?.(event);\n    };\n    const onMouseLeave = (event) => {\n        if (userSelectionActive) {\n            store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n            onSelectionEnd?.(event);\n        }\n        resetUserSelection();\n    };\n    const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n    return (jsxs(\"div\", { className: cc(['react-flow__pane', { dragging, selection: isSelecting }]), onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container), onContextMenu: wrapHandler(onContextMenu, container), onWheel: wrapHandler(onWheel, container), onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter, onMouseDown: hasActiveSelection ? onMouseDown : undefined, onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove, onMouseUp: hasActiveSelection ? onMouseUp : undefined, onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave, ref: container, style: containerStyle, children: [children, jsx(UserSelection, {})] }));\n});\nPane.displayName = 'Pane';\n\nconst selector$7 = (s) => {\n    const selectedNodes = s.getNodes().filter((n) => n.selected);\n    return {\n        ...getRectOfNodes(selectedNodes, s.nodeOrigin),\n        transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n        userSelectionActive: s.userSelectionActive,\n    };\n};\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y }) {\n    const store = useStoreApi();\n    const { width, height, x: left, y: top, transformString, userSelectionActive } = useStore(selector$7, shallow);\n    const updatePositions = useUpdateNodePositions();\n    const nodeRef = useRef(null);\n    useEffect(() => {\n        if (!disableKeyboardA11y) {\n            nodeRef.current?.focus({\n                preventScroll: true,\n            });\n        }\n    }, [disableKeyboardA11y]);\n    useDrag({\n        nodeRef,\n    });\n    if (userSelectionActive || !width || !height) {\n        return null;\n    }\n    const onContextMenu = onSelectionContextMenu\n        ? (event) => {\n            const selectedNodes = store\n                .getState()\n                .getNodes()\n                .filter((n) => n.selected);\n            onSelectionContextMenu(event, selectedNodes);\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            updatePositions({\n                x: arrowKeyDiffs[event.key].x,\n                y: arrowKeyDiffs[event.key].y,\n                isShiftPressed: event.shiftKey,\n            });\n        }\n    };\n    return (jsx(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\n            transform: transformString,\n        }, children: jsx(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\n                width,\n                height,\n                top,\n                left,\n            } }) }));\n}\nvar NodesSelection$1 = memo(NodesSelection);\n\nconst selector$6 = (s) => s.nodesSelectionActive;\nconst FlowRenderer = ({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, deleteKeyCode, onMove, onMoveStart, onMoveEnd, selectionKeyCode, selectionOnDrag, selectionMode, onSelectionStart, onSelectionEnd, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag: _panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, }) => {\n    const nodesSelectionActive = useStore(selector$6);\n    const selectionKeyPressed = useKeyPress(selectionKeyCode);\n    const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n    const panOnDrag = panActivationKeyPressed || _panOnDrag;\n    const isSelecting = selectionKeyPressed || (selectionOnDrag && panOnDrag !== true);\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\n    return (jsx(ZoomPane, { onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onPaneContextMenu: onPaneContextMenu, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: !selectionKeyPressed && panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, children: jsxs(Pane, { onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, panOnDrag: panOnDrag, isSelecting: !!isSelecting, selectionMode: selectionMode, children: [children, nodesSelectionActive && (jsx(NodesSelection$1, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y }))] }) }));\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\n\nfunction useVisibleNodes(onlyRenderVisible) {\n    const nodes = useStore(useCallback((s) => onlyRenderVisible\n        ? getNodesInside(s.nodeInternals, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true)\n        : s.getNodes(), [onlyRenderVisible]));\n    return nodes;\n}\n\nconst selector$5 = (s) => ({\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError,\n});\nconst NodeRenderer = (props) => {\n    const { nodesDraggable, nodesConnectable, nodesFocusable, elementsSelectable, updateNodeDimensions, onError } = useStore(selector$5, shallow);\n    const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n    const resizeObserverRef = useRef();\n    const resizeObserver = useMemo(() => {\n        if (typeof ResizeObserver === 'undefined') {\n            return null;\n        }\n        const observer = new ResizeObserver((entries) => {\n            const updates = entries.map((entry) => ({\n                id: entry.target.getAttribute('data-id'),\n                nodeElement: entry.target,\n                forceUpdate: true,\n            }));\n            updateNodeDimensions(updates);\n        });\n        resizeObserverRef.current = observer;\n        return observer;\n    }, []);\n    useEffect(() => {\n        return () => {\n            resizeObserverRef?.current?.disconnect();\n        };\n    }, []);\n    return (jsx(\"div\", { className: \"react-flow__nodes\", style: containerStyle, children: nodes.map((node) => {\n            let nodeType = node.type || 'default';\n            if (!props.nodeTypes[nodeType]) {\n                onError?.('003', errorMessages['003'](nodeType));\n                nodeType = 'default';\n            }\n            const NodeComponent = (props.nodeTypes[nodeType] || props.nodeTypes.default);\n            const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\n            const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\n            const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\n            const isFocusable = !!(node.focusable || (nodesFocusable && typeof node.focusable === 'undefined'));\n            const clampedPosition = props.nodeExtent\n                ? clampPosition(node.positionAbsolute, props.nodeExtent)\n                : node.positionAbsolute;\n            const posX = clampedPosition?.x ?? 0;\n            const posY = clampedPosition?.y ?? 0;\n            const posOrigin = getPositionWithOrigin({\n                x: posX,\n                y: posY,\n                width: node.width ?? 0,\n                height: node.height ?? 0,\n                origin: props.nodeOrigin,\n            });\n            return (jsx(NodeComponent, { id: node.id, className: node.className, style: node.style, type: nodeType, data: node.data, sourcePosition: node.sourcePosition || Position.Bottom, targetPosition: node.targetPosition || Position.Top, hidden: node.hidden, xPos: posX, yPos: posY, xPosOrigin: posOrigin.x, yPosOrigin: posOrigin.y, selectNodesOnDrag: props.selectNodesOnDrag, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, selected: !!node.selected, isDraggable: isDraggable, isSelectable: isSelectable, isConnectable: isConnectable, isFocusable: isFocusable, resizeObserver: resizeObserver, dragHandle: node.dragHandle, zIndex: node[internalsSymbol]?.z ?? 0, isParent: !!node[internalsSymbol]?.isParent, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, initialized: !!node.width && !!node.height, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, ariaLabel: node.ariaLabel }, node.id));\n        }) }));\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\n\nconst defaultEdgeTree = [{ level: 0, isMaxLevel: true, edges: [] }];\nfunction groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect = false) {\n    let maxLevel = -1;\n    const levelLookup = edges.reduce((tree, edge) => {\n        const hasZIndex = isNumeric(edge.zIndex);\n        let z = hasZIndex ? edge.zIndex : 0;\n        if (elevateEdgesOnSelect) {\n            z = hasZIndex\n                ? edge.zIndex\n                : Math.max(nodeInternals.get(edge.source)?.[internalsSymbol]?.z || 0, nodeInternals.get(edge.target)?.[internalsSymbol]?.z || 0);\n        }\n        if (tree[z]) {\n            tree[z].push(edge);\n        }\n        else {\n            tree[z] = [edge];\n        }\n        maxLevel = z > maxLevel ? z : maxLevel;\n        return tree;\n    }, {});\n    const edgeTree = Object.entries(levelLookup).map(([key, edges]) => {\n        const level = +key;\n        return {\n            edges,\n            level,\n            isMaxLevel: level === maxLevel,\n        };\n    });\n    if (edgeTree.length === 0) {\n        return defaultEdgeTree;\n    }\n    return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n    const edges = useStore(useCallback((s) => {\n        if (!onlyRenderVisible) {\n            return s.edges;\n        }\n        return s.edges.filter((e) => {\n            const sourceNode = nodeInternals.get(e.source);\n            const targetNode = nodeInternals.get(e.target);\n            return (sourceNode?.width &&\n                sourceNode?.height &&\n                targetNode?.width &&\n                targetNode?.height &&\n                isEdgeVisible({\n                    sourcePos: sourceNode.positionAbsolute || { x: 0, y: 0 },\n                    targetPos: targetNode.positionAbsolute || { x: 0, y: 0 },\n                    sourceWidth: sourceNode.width,\n                    sourceHeight: sourceNode.height,\n                    targetWidth: targetNode.width,\n                    targetHeight: targetNode.height,\n                    width: s.width,\n                    height: s.height,\n                    transform: s.transform,\n                }));\n        });\n    }, [onlyRenderVisible, nodeInternals]));\n    return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\n};\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: color, points: \"-5,-4 0,0 -5,4 -5,-4\" }));\n};\nconst MarkerSymbols = {\n    [MarkerType.Arrow]: ArrowSymbol,\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\n};\nfunction useMarkerSymbol(type) {\n    const store = useStoreApi();\n    const symbol = useMemo(() => {\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n        if (!symbolExists) {\n            store.getState().onError?.('009', errorMessages['009'](type));\n            return null;\n        }\n        return MarkerSymbols[type];\n    }, [type]);\n    return symbol;\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\n    const Symbol = useMarkerSymbol(type);\n    if (!Symbol) {\n        return null;\n    }\n    return (jsx(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\", children: jsx(Symbol, { color: color, strokeWidth: strokeWidth }) }));\n};\nconst markerSelector = ({ defaultColor, rfId }) => (s) => {\n    const ids = [];\n    return s.edges\n        .reduce((markers, edge) => {\n        [edge.markerStart, edge.markerEnd].forEach((marker) => {\n            if (marker && typeof marker === 'object') {\n                const markerId = getMarkerId(marker, rfId);\n                if (!ids.includes(markerId)) {\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\n                    ids.push(markerId);\n                }\n            }\n        });\n        return markers;\n    }, [])\n        .sort((a, b) => a.id.localeCompare(b.id));\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\n    const markers = useStore(useCallback(markerSelector({ defaultColor, rfId }), [defaultColor, rfId]), \n    // the id includes all marker options, so we just need to look at that part of the marker\n    (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n    return (jsx(\"defs\", { children: markers.map((marker) => (jsx(Marker, { id: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient }, marker.id))) }));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nconst selector$4 = (s) => ({\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError,\n});\nconst EdgeRenderer = ({ defaultMarkerColor, onlyRenderVisibleElements, elevateEdgesOnSelect, rfId, edgeTypes, noPanClassName, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeClick, edgeUpdaterRadius, onEdgeDoubleClick, onEdgeUpdateStart, onEdgeUpdateEnd, children, }) => {\n    const { edgesFocusable, elementsSelectable, width, height, connectionMode, nodeInternals, onError } = useStore(selector$4, shallow);\n    const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n    if (!width) {\n        return null;\n    }\n    return (jsxs(Fragment, { children: [edgeTree.map(({ level, edges, isMaxLevel }) => (jsxs(\"svg\", { style: { zIndex: level }, width: width, height: height, className: \"react-flow__edges react-flow__container\", children: [isMaxLevel && jsx(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: rfId }), jsx(\"g\", { children: edges.map((edge) => {\n                            const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n                            const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n                            if (!sourceIsValid || !targetIsValid) {\n                                return null;\n                            }\n                            let edgeType = edge.type || 'default';\n                            if (!edgeTypes[edgeType]) {\n                                onError?.('011', errorMessages['011'](edgeType));\n                                edgeType = 'default';\n                            }\n                            const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n                            // when connection type is loose we can define all handles as sources and connect source -> source\n                            const targetNodeHandles = connectionMode === ConnectionMode.Strict\n                                ? targetHandleBounds.target\n                                : (targetHandleBounds.target ?? []).concat(targetHandleBounds.source ?? []);\n                            const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n                            const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n                            const sourcePosition = sourceHandle?.position || Position.Bottom;\n                            const targetPosition = targetHandle?.position || Position.Top;\n                            const isFocusable = !!(edge.focusable || (edgesFocusable && typeof edge.focusable === 'undefined'));\n                            if (!sourceHandle || !targetHandle) {\n                                onError?.('008', errorMessages['008'](sourceHandle, edge));\n                                return null;\n                            }\n                            const { sourceX, sourceY, targetX, targetY } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n                            return (jsx(EdgeComponent, { id: edge.id, className: cc([edge.className, noPanClassName]), type: edgeType, data: edge.data, selected: !!edge.selected, animated: !!edge.animated, hidden: !!edge.hidden, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, style: edge.style, source: edge.source, target: edge.target, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerEnd: edge.markerEnd, markerStart: edge.markerStart, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, elementsSelectable: elementsSelectable, onEdgeUpdate: onEdgeUpdate, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onClick: onEdgeClick, edgeUpdaterRadius: edgeUpdaterRadius, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, rfId: rfId, ariaLabel: edge.ariaLabel, isFocusable: isFocusable, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth }, edge.id));\n                        }) })] }, level))), children] }));\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\n\nconst selector$3 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport({ children }) {\n    const transform = useStore(selector$3);\n    return (jsx(\"div\", { className: \"react-flow__viewport react-flow__container\", style: { transform }, children: children }));\n}\n\nfunction useOnInitHandler(onInit) {\n    const rfInstance = useReactFlow();\n    const isInitialized = useRef(false);\n    useEffect(() => {\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n            setTimeout(() => onInit(rfInstance), 1);\n            isInitialized.current = true;\n        }\n    }, [onInit, rfInstance.viewportInitialized]);\n}\n\nconst oppositePosition = {\n    [Position.Left]: Position.Right,\n    [Position.Right]: Position.Left,\n    [Position.Top]: Position.Bottom,\n    [Position.Bottom]: Position.Top,\n};\nconst ConnectionLine = ({ nodeId, handleType, style, type = ConnectionLineType.Bezier, CustomComponent, connectionStatus, }) => {\n    const { fromNode, handleId, toX, toY, connectionMode } = useStore(useCallback((s) => ({\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode,\n    }), [nodeId]), shallow);\n    const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n    let handleBounds = fromHandleBounds?.[handleType];\n    if (connectionMode === ConnectionMode.Loose) {\n        handleBounds = handleBounds ? handleBounds : fromHandleBounds?.[handleType === 'source' ? 'target' : 'source'];\n    }\n    if (!fromNode || !handleBounds) {\n        return null;\n    }\n    const fromHandle = handleId ? handleBounds.find((d) => d.id === handleId) : handleBounds[0];\n    const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode.width ?? 0) / 2;\n    const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode.height ?? 0;\n    const fromX = (fromNode.positionAbsolute?.x ?? 0) + fromHandleX;\n    const fromY = (fromNode.positionAbsolute?.y ?? 0) + fromHandleY;\n    const fromPosition = fromHandle?.position;\n    const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n    if (!fromPosition || !toPosition) {\n        return null;\n    }\n    if (CustomComponent) {\n        return (jsx(CustomComponent, { connectionLineType: type, connectionLineStyle: style, fromNode: fromNode, fromHandle: fromHandle, fromX: fromX, fromY: fromY, toX: toX, toY: toY, fromPosition: fromPosition, toPosition: toPosition, connectionStatus: connectionStatus }));\n    }\n    let dAttr = '';\n    const pathParams = {\n        sourceX: fromX,\n        sourceY: fromY,\n        sourcePosition: fromPosition,\n        targetX: toX,\n        targetY: toY,\n        targetPosition: toPosition,\n    };\n    if (type === ConnectionLineType.Bezier) {\n        // we assume the destination position is opposite to the source position\n        [dAttr] = getBezierPath(pathParams);\n    }\n    else if (type === ConnectionLineType.Step) {\n        [dAttr] = getSmoothStepPath({\n            ...pathParams,\n            borderRadius: 0,\n        });\n    }\n    else if (type === ConnectionLineType.SmoothStep) {\n        [dAttr] = getSmoothStepPath(pathParams);\n    }\n    else if (type === ConnectionLineType.SimpleBezier) {\n        [dAttr] = getSimpleBezierPath(pathParams);\n    }\n    else {\n        dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n    }\n    return jsx(\"path\", { d: dAttr, fill: \"none\", className: \"react-flow__connection-path\", style: style });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = (s) => ({\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height,\n});\nfunction ConnectionLineWrapper({ containerStyle, style, type, component }) {\n    const { nodeId, handleType, nodesConnectable, width, height, connectionStatus } = useStore(selector$2, shallow);\n    const isValid = !!(nodeId && handleType && width && nodesConnectable);\n    if (!isValid) {\n        return null;\n    }\n    return (jsx(\"svg\", { style: containerStyle, width: width, height: height, className: \"react-flow__edges react-flow__connectionline react-flow__container\", children: jsx(\"g\", { className: cc(['react-flow__connection', connectionStatus]), children: jsx(ConnectionLine, { nodeId: nodeId, handleType: handleType, style: style, type: type, CustomComponent: component, connectionStatus: connectionStatus }) }) }));\n}\n\nconst GraphView = ({ nodeTypes, edgeTypes, onMove, onMoveStart, onMoveEnd, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, selectionOnDrag, selectionMode, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, selectNodesOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, edgeUpdaterRadius, onEdgeUpdateStart, onEdgeUpdateEnd, noDragClassName, noWheelClassName, noPanClassName, elevateEdgesOnSelect, disableKeyboardA11y, nodeOrigin, nodeExtent, rfId, }) => {\n    useOnInitHandler(onInit);\n    return (jsx(FlowRenderer$1, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y, children: jsxs(Viewport, { children: [jsx(EdgeRenderer$1, { edgeTypes: edgeTypes, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdate: onEdgeUpdate, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, elevateEdgesOnSelect: !!elevateEdgesOnSelect, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId, children: jsx(ConnectionLineWrapper, { style: connectionLineStyle, type: connectionLineType, component: connectionLineComponent, containerStyle: connectionLineContainerStyle }) }), jsx(\"div\", { className: \"react-flow__edgelabel-renderer\" }), jsx(NodeRenderer$1, { nodeTypes: nodeTypes, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, selectNodesOnDrag: selectNodesOnDrag, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, rfId: rfId })] }) }));\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\n\nconst infiniteExtent = [\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n];\nconst initialState = {\n    rfId: '1',\n    width: 0,\n    height: 0,\n    transform: [0, 0, 1],\n    nodeInternals: new Map(),\n    edges: [],\n    onNodesChange: null,\n    onEdgesChange: null,\n    hasDefaultNodes: false,\n    hasDefaultEdges: false,\n    d3Zoom: null,\n    d3Selection: null,\n    d3ZoomHandler: undefined,\n    minZoom: 0.5,\n    maxZoom: 2,\n    translateExtent: infiniteExtent,\n    nodeExtent: infiniteExtent,\n    nodesSelectionActive: false,\n    userSelectionActive: false,\n    userSelectionRect: null,\n    connectionNodeId: null,\n    connectionHandleId: null,\n    connectionHandleType: 'source',\n    connectionPosition: { x: 0, y: 0 },\n    connectionStatus: null,\n    connectionMode: ConnectionMode.Strict,\n    domNode: null,\n    paneDragging: false,\n    noPanClassName: 'nopan',\n    nodeOrigin: [0, 0],\n    snapGrid: [15, 15],\n    snapToGrid: false,\n    nodesDraggable: true,\n    nodesConnectable: true,\n    nodesFocusable: true,\n    edgesFocusable: true,\n    elementsSelectable: true,\n    elevateNodesOnSelect: true,\n    fitViewOnInit: false,\n    fitViewOnInitDone: false,\n    fitViewOnInitOptions: undefined,\n    multiSelectionActive: false,\n    connectionStartHandle: null,\n    connectOnClick: true,\n    ariaLiveMessage: '',\n    autoPanOnConnect: true,\n    autoPanOnNodeDrag: true,\n    connectionRadius: 20,\n    onError: devWarn,\n    isValidConnection: undefined,\n};\n\nconst createRFStore = () => createStore((set, get) => ({\n    ...initialState,\n    setNodes: (nodes) => {\n        const { nodeInternals, nodeOrigin, elevateNodesOnSelect } = get();\n        set({ nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) });\n    },\n    getNodes: () => {\n        return Array.from(get().nodeInternals.values());\n    },\n    setEdges: (edges) => {\n        const { defaultEdgeOptions = {} } = get();\n        set({ edges: edges.map((e) => ({ ...defaultEdgeOptions, ...e })) });\n    },\n    setDefaultNodesAndEdges: (nodes, edges) => {\n        const hasDefaultNodes = typeof nodes !== 'undefined';\n        const hasDefaultEdges = typeof edges !== 'undefined';\n        const nodeInternals = hasDefaultNodes\n            ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect)\n            : new Map();\n        const nextEdges = hasDefaultEdges ? edges : [];\n        set({ nodeInternals, edges: nextEdges, hasDefaultNodes, hasDefaultEdges });\n    },\n    updateNodeDimensions: (updates) => {\n        const { onNodesChange, nodeInternals, fitViewOnInit, fitViewOnInitDone, fitViewOnInitOptions, domNode, nodeOrigin, } = get();\n        const viewportNode = domNode?.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n            return;\n        }\n        const style = window.getComputedStyle(viewportNode);\n        const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\n        const changes = updates.reduce((res, update) => {\n            const node = nodeInternals.get(update.id);\n            if (node) {\n                const dimensions = getDimensions(update.nodeElement);\n                const doUpdate = !!(dimensions.width &&\n                    dimensions.height &&\n                    (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n                if (doUpdate) {\n                    nodeInternals.set(node.id, {\n                        ...node,\n                        [internalsSymbol]: {\n                            ...node[internalsSymbol],\n                            handleBounds: {\n                                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin),\n                            },\n                        },\n                        ...dimensions,\n                    });\n                    res.push({\n                        id: node.id,\n                        type: 'dimensions',\n                        dimensions,\n                    });\n                }\n            }\n            return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        const nextFitViewOnInitDone = fitViewOnInitDone ||\n            (fitViewOnInit && !fitViewOnInitDone && fitView(get, { initial: true, ...fitViewOnInitOptions }));\n        set({ nodeInternals: new Map(nodeInternals), fitViewOnInitDone: nextFitViewOnInitDone });\n        if (changes?.length > 0) {\n            onNodesChange?.(changes);\n        }\n    },\n    updateNodePositions: (nodeDragItems, positionChanged = true, dragging = false) => {\n        const { triggerNodeChanges } = get();\n        const changes = nodeDragItems.map((node) => {\n            const change = {\n                id: node.id,\n                type: 'position',\n                dragging,\n            };\n            if (positionChanged) {\n                change.positionAbsolute = node.positionAbsolute;\n                change.position = node.position;\n            }\n            return change;\n        });\n        triggerNodeChanges(changes);\n    },\n    triggerNodeChanges: (changes) => {\n        const { onNodesChange, nodeInternals, hasDefaultNodes, nodeOrigin, getNodes, elevateNodesOnSelect } = get();\n        if (changes?.length) {\n            if (hasDefaultNodes) {\n                const nodes = applyNodeChanges(changes, getNodes());\n                const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n                set({ nodeInternals: nextNodeInternals });\n            }\n            onNodesChange?.(changes);\n        }\n    },\n    addSelectedNodes: (selectedNodeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedNodes;\n        let changedEdges = null;\n        if (multiSelectionActive) {\n            changedNodes = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\n        }\n        else {\n            changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n            changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    addSelectedEdges: (selectedEdgeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedEdges;\n        let changedNodes = null;\n        if (multiSelectionActive) {\n            changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\n        }\n        else {\n            changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n            changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\n        const { edges: storeEdges, getNodes } = get();\n        const nodesToUnselect = nodes ? nodes : getNodes();\n        const edgesToUnselect = edges ? edges : storeEdges;\n        const changedNodes = nodesToUnselect.map((n) => {\n            n.selected = false;\n            return createSelectionChange(n.id, false);\n        });\n        const changedEdges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    setMinZoom: (minZoom) => {\n        const { d3Zoom, maxZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ minZoom });\n    },\n    setMaxZoom: (maxZoom) => {\n        const { d3Zoom, minZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ maxZoom });\n    },\n    setTranslateExtent: (translateExtent) => {\n        get().d3Zoom?.translateExtent(translateExtent);\n        set({ translateExtent });\n    },\n    resetSelectedElements: () => {\n        const { edges, getNodes } = get();\n        const nodes = getNodes();\n        const nodesToUnselect = nodes\n            .filter((e) => e.selected)\n            .map((n) => createSelectionChange(n.id, false));\n        const edgesToUnselect = edges\n            .filter((e) => e.selected)\n            .map((e) => createSelectionChange(e.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes: nodesToUnselect,\n            changedEdges: edgesToUnselect,\n            get,\n            set,\n        });\n    },\n    setNodeExtent: (nodeExtent) => {\n        const { nodeInternals } = get();\n        nodeInternals.forEach((node) => {\n            node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n            nodeExtent,\n            nodeInternals: new Map(nodeInternals),\n        });\n    },\n    panBy: (delta) => {\n        const { transform, width, height, d3Zoom, d3Selection, translateExtent } = get();\n        if (!d3Zoom || !d3Selection || (!delta.x && !delta.y)) {\n            return;\n        }\n        const nextTransform = zoomIdentity.translate(transform[0] + delta.x, transform[1] + delta.y).scale(transform[2]);\n        const extent = [\n            [0, 0],\n            [width, height],\n        ];\n        const constrainedTransform = d3Zoom?.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n    },\n    cancelConnection: () => set({\n        connectionNodeId: initialState.connectionNodeId,\n        connectionHandleId: initialState.connectionHandleId,\n        connectionHandleType: initialState.connectionHandleType,\n        connectionStatus: initialState.connectionStatus,\n    }),\n    reset: () => set({ ...initialState }),\n}));\n\nconst ReactFlowProvider = ({ children }) => {\n    const storeRef = useRef(null);\n    if (!storeRef.current) {\n        storeRef.current = createRFStore();\n    }\n    return jsx(Provider$1, { value: storeRef.current, children: children });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\n\nconst Wrapper = ({ children }) => {\n    const isWrapped = useContext(StoreContext);\n    if (isWrapped) {\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n        return jsx(Fragment, { children: children });\n    }\n    return jsx(ReactFlowProvider, { children: children });\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n    const typesKeysRef = useRef(null);\n    const typesParsed = useMemo(() => {\n        if (process.env.NODE_ENV === 'development') {\n            const typeKeys = Object.keys(nodeOrEdgeTypes);\n            if (shallow(typesKeysRef.current, typeKeys)) {\n                devWarn('002', errorMessages['002']());\n            }\n            typesKeysRef.current = typeKeys;\n        }\n        return createTypes(nodeOrEdgeTypes);\n    }, [nodeOrEdgeTypes]);\n    return typesParsed;\n}\n\nconst defaultNodeTypes = {\n    input: InputNode$1,\n    default: DefaultNode$1,\n    output: OutputNode$1,\n    group: GroupNode,\n};\nconst defaultEdgeTypes = {\n    default: BezierEdge,\n    straight: StraightEdge,\n    step: StepEdge,\n    smoothstep: SmoothStepEdge,\n    simplebezier: SimpleBezierEdge,\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = { x: 0, y: 0, zoom: 1 };\nconst wrapperStyle = {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n    zIndex: 0,\n};\nconst ReactFlow = forwardRef(({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes = defaultNodeTypes, edgeTypes = defaultEdgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionMode = ConnectionMode.Strict, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', selectionOnDrag = false, selectionMode = SelectionMode.Full, panActivationKeyCode = 'Space', multiSelectionKeyCode = 'Meta', zoomActivationKeyCode = 'Meta', snapToGrid = false, snapGrid = initSnapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag = true, nodesDraggable, nodesConnectable, nodesFocusable, nodeOrigin = initNodeOrigin, edgesFocusable, elementsSelectable, defaultViewport = initDefaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, children, onEdgeUpdate, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeUpdateStart, onEdgeUpdateEnd, edgeUpdaterRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView = false, fitViewOptions, connectOnClick = true, attributionPosition, proOptions, defaultEdgeOptions, elevateNodesOnSelect = true, elevateEdgesOnSelect = false, disableKeyboardA11y = false, autoPanOnConnect = true, autoPanOnNodeDrag = true, connectionRadius = 20, isValidConnection, onError, style, id, ...rest }, ref) => {\n    const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n    const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n    const rfId = id || '1';\n    return (jsx(\"div\", { ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className]), \"data-testid\": \"rf__wrapper\", id: id, children: jsxs(Wrapper, { children: [jsx(GraphView$1, { onInit: onInit, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypesWrapped, edgeTypes: edgeTypesWrapped, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, selectNodesOnDrag: selectNodesOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, onSelectionContextMenu: onSelectionContextMenu, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onEdgeUpdate: onEdgeUpdate, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, elevateEdgesOnSelect: elevateEdgesOnSelect, rfId: rfId, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent }), jsx(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, edgesFocusable: edgesFocusable, elementsSelectable: elementsSelectable, elevateNodesOnSelect: elevateNodesOnSelect, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, rfId: rfId, autoPanOnConnect: autoPanOnConnect, autoPanOnNodeDrag: autoPanOnNodeDrag, onError: onError, connectionRadius: connectionRadius, isValidConnection: isValidConnection }), jsx(Wrapper$1, { onSelectionChange: onSelectionChange }), children, jsx(Attribution, { proOptions: proOptions, position: attributionPosition }), jsx(A11yDescriptions, { rfId: rfId, disableKeyboardA11y: disableKeyboardA11y })] }) }));\n});\nReactFlow.displayName = 'ReactFlow';\n\nconst selector$1 = (s) => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer({ children }) {\n    const edgeLabelRenderer = useStore(selector$1);\n    if (!edgeLabelRenderer) {\n        return null;\n    }\n    return createPortal(children, edgeLabelRenderer);\n}\n\nfunction useUpdateNodeInternals() {\n    const store = useStoreApi();\n    return useCallback((id) => {\n        const { domNode, updateNodeDimensions } = store.getState();\n        const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${id}\"]`);\n        if (nodeElement) {\n            requestAnimationFrame(() => updateNodeDimensions([{ id, nodeElement, forceUpdate: true }]));\n        }\n    }, []);\n}\n\nconst nodesSelector = (state) => state.getNodes();\nfunction useNodes() {\n    const nodes = useStore(nodesSelector);\n    return nodes;\n}\n\nconst edgesSelector = (state) => state.edges;\nfunction useEdges() {\n    const edges = useStore(edgesSelector);\n    return edges;\n}\n\nconst viewportSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n});\nfunction useViewport() {\n    const viewport = useStore(viewportSelector, shallow);\n    return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n    return (initialItems) => {\n        const [items, setItems] = useState(initialItems);\n        const onItemsChange = useCallback((changes) => setItems((items) => applyChanges(changes, items)), []);\n        return [items, setItems, onItemsChange];\n    };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\n\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onViewportChangeStart: onStart });\n    }, [onStart]);\n    useEffect(() => {\n        store.setState({ onViewportChange: onChange });\n    }, [onChange]);\n    useEffect(() => {\n        store.setState({ onViewportChangeEnd: onEnd });\n    }, [onEnd]);\n}\n\nfunction useOnSelectionChange({ onChange }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onSelectionChange: onChange });\n    }, [onChange]);\n}\n\nconst selector = (s) => {\n    if (s.nodeInternals.size === 0) {\n        return false;\n    }\n    return s.getNodes().every((n) => n[internalsSymbol]?.handleBounds !== undefined);\n};\nfunction useNodesInitialized() {\n    const initialized = useStore(selector);\n    return initialized;\n}\n\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}